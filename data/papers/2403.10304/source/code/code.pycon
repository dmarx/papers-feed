>>> from kif_lib import *
>>> Wikidata = Store('sparql', 'https://query.wikidata.org/sparql')
>>> it = Wikidata.filter(
...     subject=Item('http://www.wikidata.org/entity/Q2270'),
...     !property!=Property('http://www.wikidata.org/entity/P2240'))
>>> next(it)
Statement(Item(IRI('http://www.wikidata.org/entity/Q2270')), ValueSnak(Property(IRI('http://www.wikidata.org/entity/P2240')), Quantity(4700, Item(IRI('http://www.wikidata.org/entity/Q21091747')), 4699, 4701)))
>>> x = Variable('x')
>>> pat = Statement(Item('http://www.wikidata.org/entity/Q2270'),
...     ValueSnak(Property('http://www.wikidata.org/entity/P2240'), x))
>>> it = Wikidata.match(pat)
>>> from kif_lib.vocabulary import wd
>>> pat1 = Statement(wd.Q(2270), ValueSnak(wd.P(2240), x))
>>> pat2 = wd.median_lethal_dose(wd.Q(2270), x)
>>> pat == pat1 and pat1 == pat2
True
>>> pat3 = wd.median_lethal_dose(wd.Q(2270),
...     Quantity(x, wd.milligram_per_kilogram).where(
...         x.ge(4000) & x.le(7000)))
>>> from kif_lib.store.sparql.mapping import PubChemMapping
>>> PubChem = Store('sparql', 'http://localhost:1234/sparql',
...     mapping=PubChemMapping())
>>> it = PubChem.filter(
...     subject=wd.InChIKey('UHOVQNZJYSORNB-UHFFFAOYSA-N'),
...     !property!=wd.mass)
>>> next(it) == wd.mass(
...     Item('http://rdf.ncbi.nlm.nih.gov/pubchem/compound/CID241'),
...     Quantity('78.11', wd.dalton))
True
>>> x, y = Variables('x', 'y')
>>> pat4 = wd.mass(x, y).where(
...     wd.InChIKey(x, 'UHOVQNZJYSORNB-UHFFFAOYSA-N'))
>>> mix = Store('mixer', [Wikidata, PubChem])
>>> stmt1, stmt2, *rest = mix.filter(
...     subject=wd.InChIKey('UHOVQNZJYSORNB-UHFFFAOYSA-N'))
>>> Wikidata.extra_references = [
...     ReferenceRecord(wd.reference_URL(Wikidata.iri))]
