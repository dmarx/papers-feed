name: Process PDF with Grobid

on:
  workflow_dispatch:
    inputs:
      pdf_path:
        description: 'Path to PDF file relative to repository root'
        required: true
        type: string
      output_format:
        description: 'Output format (markdown/tei)'
        required: true
        type: choice
        options:
          - markdown
          - tei
        default: 'markdown'

jobs:
  convert:
    runs-on: ubuntu-latest
    services:
      grobid:
        image: lfoppiano/grobid:latest-crf
        ports:
          - 8070:8070
        options: >-
          --init
          --health-cmd "curl -sf --max-time 5 http://localhost:8070/api/isalive"
          --health-interval 60s
          --health-timeout 20s
          --health-retries 3
          --health-start-period 180s
          --memory 3g
          --memory-reservation 2g

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests loguru fire lxml

      - name: Wait for Grobid
        timeout-minutes: 5
        run: |
          max_attempts=30
          attempt=1
          
          echo "Waiting for Grobid to start..."
          while ! curl -sf --max-time 5 http://localhost:8070/api/isalive > /dev/null; do
            if [ $attempt -ge $max_attempts ]; then
              echo "Grobid failed to start after 5 minutes. Displaying logs:"
              docker logs $(docker ps -q --filter ancestor=lfoppiano/grobid:latest-crf)
              exit 1
            fi
            
            echo "Attempt $attempt/$max_attempts: Grobid not ready, waiting 10 seconds..."
            sleep 10
            attempt=$((attempt + 1))
          done
          
          echo "Grobid is ready!"

      - name: Process PDF
        run: python .github/scripts/process_pdf.py ${{ github.event.inputs.pdf_path }} --format ${{ github.event.inputs.output_format }}

      - name: Upload processed file
        uses: actions/upload-artifact@v4
        with:
          name: processed-document
          path: output.*
          if-no-files-found: error
