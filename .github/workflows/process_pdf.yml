name: Process PDF with Grobid

on:
  workflow_dispatch:
    inputs:
      pdf_path:
        description: 'Path to PDF file relative to repository root'
        required: true
        type: string
      output_format:
        description: 'Output format (markdown/tei)'
        required: true
        type: choice
        options:
          - markdown
          - tei
        default: 'markdown'

jobs:
  convert:
    runs-on: ubuntu-latest
    services:
      grobid:
        image: lfoppiano/grobid:latest-crf
        ports:
          - 8070:8070
        options: >-
          --entrypoint "sh -c"
        env:
          JAVA_OPTS: "-Xmx3g"
        volumes:
          - ${{ github.workspace }}:/opt/grobid/input
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests loguru fire lxml

      - name: Start Grobid
        run: |
          # Start Grobid in the background
          docker run -d --name grobid \
            -p 8070:8070 \
            -v ${{ github.workspace }}:/opt/grobid/input \
            -e JAVA_OPTS="-Xmx3g" \
            lfoppiano/grobid:latest-crf

          echo "Waiting for Grobid to start..."
          timeout=180
          while [ $timeout -gt 0 ]; do
            if curl -sf http://localhost:8070/api/isalive > /dev/null; then
              echo "Grobid is ready!"
              exit 0
            fi
            sleep 5
            timeout=$((timeout - 5))
            echo "Still waiting... ($timeout seconds remaining)"
          done
          
          echo "Grobid failed to start. Showing logs:"
          docker logs grobid
          exit 1

      - name: Process PDF
        run: python .github/scripts/process_pdf.py ${{ github.event.inputs.pdf_path }} --format ${{ github.event.inputs.output_format }}

      - name: Upload processed file
        uses: actions/upload-artifact@v4
        with:
          name: processed-document
          path: output.*
          if-no-files-found: error

      - name: Cleanup
        if: always()
        run: docker stop grobid || true
