# .github/workflows/2_deploy-frontend.yml

name: Deploy Frontend

on:
  workflow_dispatch:
    inputs:
      sync_id:
        required: true
        type: string
  push:
    paths:
      - 'data/papers/gh-store-snapshot.json'

permissions:
  contents: write
  pages: write
  id-token: write
  actions: read

jobs:
  wait-syncs:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Debug context
        uses: actions/github-script@v7
        with:
          script: |
            console.log('Context dump:');
            console.log('repo:', context.repo);
            console.log('ref:', context.ref);
            console.log('workflow:', context.workflow);
            console.log('sync_id:', '${{ needs.sync.outputs.sync_id }}');
            
      - name: Wait for syncs
        uses: actions/github-script@v7
        with:
          script: |
            const syncId = '${{ inputs.sync_id }}';
            while (true) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: '1_store-sync.yml',
                status: 'in_progress',
              });
              
              const earlierSyncs = runs.data.workflow_runs.filter(run => 
                run.id < parseInt(syncId)
              );
              
              if (earlierSyncs.length === 0) break;
              await new Promise(r => setTimeout(r, 10000));
            }
      
  deploy:
    needs: [wait-syncs]
    if: always()
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fire loguru

      - name: Prepare web directory
        run: |
          mkdir -p web/{styles,js,data}
          cp frontend/src/styles/*.css web/styles/
          cp frontend/src/js/*.js web/js/
          cp frontend/src/templates/index.html web/index.html
          
      - name: Convert data
        run: |
          python frontend/scripts/convert_store.py \
            --snapshot_path data/papers/gh-store-snapshot.json \
            --output_path web/data/papers.json

      - name: Ensure presence of .nojekyll file
        run: touch web/.nojekyll

      - name: Get git info
        id: git-info
        run: |
          echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "repo=${GITHUB_REPOSITORY}" >> $GITHUB_OUTPUT

      - name: Create git info JSON
        run: |
          echo "{\"branch\": \"${{ steps.git-info.outputs.branch }}\", \"commit\": \"${{ steps.git-info.outputs.commit }}\", \"repo\": \"${{ steps.git-info.outputs.repo }}\"}" > web/data/git-info.json

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: web
  
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./web
          force_orphan: true
