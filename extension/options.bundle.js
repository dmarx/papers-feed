(()=>{"use strict";const e={idleThresholdMinutes:5,minSessionDurationSeconds:30,requireContinuousActivity:!0,logPartialSessions:!1,activityUpdateIntervalSeconds:1};async function t(){const t=await chrome.storage.sync.get("sessionConfig");return{...e,...t.sessionConfig}}function n(e,t=!1){const n=document.getElementById("status");n.textContent=e,n.className="status "+(t?"error":"success"),t||setTimeout((()=>{n.textContent="",n.className="status"}),3e3)}document.addEventListener("DOMContentLoaded",(async()=>{try{const[s,i]=await Promise.all([chrome.storage.sync.get(["githubRepo","githubToken"]),t()]);(o={...s,sessionConfig:i}).githubRepo&&(document.getElementById("repo").value=o.githubRepo),o.githubToken&&(document.getElementById("token").placeholder="••••••••••••••••••••••"),document.getElementById("idleThreshold").value=o.sessionConfig?.idleThresholdMinutes??e.idleThresholdMinutes,document.getElementById("minDuration").value=o.sessionConfig?.minSessionDurationSeconds??e.minSessionDurationSeconds,document.getElementById("requireContinuous").checked=o.sessionConfig?.requireContinuousActivity??e.requireContinuousActivity,document.getElementById("logPartial").checked=o.sessionConfig?.logPartialSessions??e.logPartialSessions,document.getElementById("save").addEventListener("click",(async()=>{try{const e={githubRepo:document.getElementById("repo").value.trim(),githubToken:document.getElementById("token").value.trim(),sessionConfig:{idleThresholdMinutes:Number(document.getElementById("idleThreshold").value),minSessionDurationSeconds:Number(document.getElementById("minDuration").value),requireContinuousActivity:document.getElementById("requireContinuous").checked,logPartialSessions:document.getElementById("logPartial").checked}};await async function(e){if(!/^[\w-]+\/[\w-]+$/.test(e.githubRepo))throw new Error("Invalid repository format. Use username/repository");if(!(await fetch(`https://api.github.com/repos/${e.githubRepo}`,{headers:{Authorization:`token ${e.githubToken}`,Accept:"application/vnd.github.v3+json"}})).ok)throw new Error("Invalid token or repository. Please check your credentials.");const{sessionConfig:t}=e;if(t.idleThresholdMinutes<1||t.idleThresholdMinutes>60)throw new Error("Idle threshold must be between 1 and 60 minutes");if(t.minSessionDurationSeconds<1||t.minSessionDurationSeconds>300)throw new Error("Minimum session duration must be between 10 and 300 seconds")}(e),await async function(e){await chrome.storage.sync.set({githubRepo:e.githubRepo,githubToken:e.githubToken}),await async function(e){await chrome.storage.sync.set({sessionConfig:{idleThresholdMinutes:Number(e.idleThresholdMinutes),minSessionDurationSeconds:Number(e.minSessionDurationSeconds),requireContinuousActivity:Boolean(e.requireContinuousActivity),logPartialSessions:Boolean(e.logPartialSessions),activityUpdateIntervalSeconds:Number(e.activityUpdateIntervalSeconds)}})}(e.sessionConfig)}(e),n("Settings saved successfully!")}catch(e){n(`Error: ${e.message}`,!0)}}))}catch(e){n(`Error loading settings: ${e.message}`,!0)}var o}))})();