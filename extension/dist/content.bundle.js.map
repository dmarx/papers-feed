{"version":3,"file":"content.bundle.js","sources":["../content.js"],"sourcesContent":["// content.js\n// Enhanced to support multiple paper sources\nconsole.log('Academic Paper Tracker content script loaded');\n\n// CSS for the annotation UI - Updated with source-specific styling\nconst STYLES = `\n.paper-annotator {\n    display: inline-block;\n    margin-left: 4px;\n    cursor: pointer;\n    font-size: 0.9em;\n    opacity: 0.7;\n    transition: opacity 0.2s;\n    vertical-align: baseline;\n}\n\n.paper-annotator:hover {\n    opacity: 1;\n}\n\n.paper-popup {\n    position: absolute;\n    background: white;\n    border: 1px solid #ddd;\n    border-radius: 6px;\n    padding: 12px;\n    box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n    width: 300px;\n    z-index: 10000;\n    box-sizing: border-box;\n}\n\n.paper-popup-header {\n    font-weight: bold;\n    margin-bottom: 8px;\n    line-height: 1.4;\n    font-size: 1em;\n}\n\n.paper-popup-meta {\n    color: #666;\n    font-size: 0.85em;\n    margin-bottom: 12px;\n    line-height: 1.4;\n}\n\n.paper-popup-source {\n    display: inline-block;\n    font-size: 11px;\n    border-radius: 4px;\n    padding: 2px 6px;\n    margin-bottom: 10px;\n    color: white;\n    font-weight: 500;\n}\n\n.source-arxiv {\n    background-color: #B31B1B;\n}\n\n.source-doi, .source-acm {\n    background-color: #0277bd;\n}\n\n.source-semanticscholar {\n    background-color: #2e7d32;\n}\n\n.source-openreview {\n    background-color: #6d4c41;\n}\n\n.paper-popup-buttons {\n    display: flex;\n    gap: 8px;\n    margin: 8px 0;\n}\n\n.paper-popup button {\n    padding: 6px 12px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    background: #f5f5f5;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    font-size: 0.9em;\n}\n\n.paper-popup button:hover {\n    background: #e8e8e8;\n    border-color: #ccc;\n}\n\n.paper-popup button.active {\n    background: #e0e0e0;\n    border-color: #aaa;\n}\n\n.paper-popup textarea {\n    width: calc(100% - 16px);\n    min-height: 80px;\n    margin: 8px 0;\n    padding: 8px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    resize: vertical;\n    font-family: inherit;\n    font-size: 0.9em;\n    line-height: 1.4;\n    box-sizing: border-box;\n}\n\n.paper-popup textarea:focus {\n    outline: none;\n    border-color: #aaa;\n}\n\n.paper-popup-actions {\n    display: flex;\n    justify-content: flex-end;\n    gap: 8px;\n    margin-top: 12px;\n}\n\n.paper-popup .save-button {\n    background: #2563eb;\n    color: white;\n    border-color: #2563eb;\n}\n\n.paper-popup .save-button:hover {\n    background: #1d4ed8;\n    border-color: #1d4ed8;\n}\n\n/* Loading state */\n.paper-popup-header:empty::after,\n.paper-popup-header:contains('Loading...') {\n    content: '';\n    display: inline-block;\n    width: 12px;\n    height: 12px;\n    border: 2px solid #ddd;\n    border-top-color: #666;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    to { transform: rotate(360deg); }\n}\n\n/* Source-specific annotator icons */\n.annotator-arxiv::after {\n    content: '📝';\n}\n\n.annotator-doi::after, .annotator-acm::after {\n    content: '🔍';\n}\n\n.annotator-semanticscholar::after {\n    content: '📊';\n}\n\n.annotator-openreview::after {\n    content: '📋';\n}\n\n.annotator-generic::after {\n    content: '📄';\n}\n`;\n\n// Add styles to page\nconst styleSheet = document.createElement('style');\nstyleSheet.textContent = STYLES;\ndocument.head.appendChild(styleSheet);\n\n// Track active popup\nlet activePopup = null;\n\n// Update the click-outside handler to account for wrapper\ndocument.addEventListener('click', (e) => {\n    if (activePopup && \n        !activePopup.contains(e.target) && \n        !e.target.classList.contains('paper-annotator')) {\n        activePopup.parentElement?.remove(); // Remove the wrapper\n        activePopup = null;\n    }\n});\n\n// Cache for paper metadata\nconst metadataCache = new Map();\n\n// Source definitions for URL matching\nconst PAPER_SOURCES = [\n    {\n        type: 'arxiv',\n        urlPatterns: [\n            /arxiv\\.org\\/abs\\/([0-9.]+)/,\n            /arxiv\\.org\\/pdf\\/([0-9.]+)\\.pdf/,\n            /arxiv\\.org\\/\\w+\\/([0-9.]+)/\n        ],\n        getIdFromMatch: (match) => match[1]\n    },\n    {\n        type: 'doi',\n        urlPatterns: [\n            /doi\\.org\\/(10\\.[0-9.]+\\/[a-zA-Z0-9._\\-/:()\\[\\]]+)/\n        ],\n        getIdFromMatch: (match) => match[1]\n    },\n    {\n        type: 'acm',\n        urlPatterns: [\n            /dl\\.acm\\.org\\/doi\\/(10\\.[0-9.]+\\/[a-zA-Z0-9._\\-/:()\\[\\]]+)/\n        ],\n        getIdFromMatch: (match) => match[1]\n    },\n    {\n        type: 'semanticscholar',\n        urlPatterns: [\n            /semanticscholar\\.org\\/paper\\/([a-f0-9]+)/,\n            /s2-research\\.org\\/papers\\/([a-f0-9]+)/\n        ],\n        getIdFromMatch: (match) => match[1]\n    },\n    {\n        type: 'openreview',\n        urlPatterns: [\n            /openreview\\.net\\/forum\\?id=([a-zA-Z0-9_\\-]+)/\n        ],\n        getIdFromMatch: (match) => match[1]\n    }\n];\n\n/**\n * Detect paper source and ID from URL\n * @param {string} url URL to check for paper identifiers\n * @returns {Object|null} Source information or null if not a paper URL\n */\nfunction detectPaperSource(url) {\n    // Check each source type\n    for (const source of PAPER_SOURCES) {\n        for (let i = 0; i < source.urlPatterns.length; i++) {\n            const match = url.match(source.urlPatterns[i]);\n            if (match) {\n                return {\n                    type: source.type,\n                    id: source.getIdFromMatch(match),\n                    url: url\n                };\n            }\n        }\n    }\n    return null;\n}\n\n/**\n * Get a formatted label for paper source\n * @param {string} source Paper source identifier\n * @returns {string} Human-readable source label\n */\nfunction getSourceLabel(source) {\n    const labels = {\n        'arxiv': 'arXiv',\n        'semanticscholar': 'Semantic Scholar',\n        'doi': 'DOI',\n        'acm': 'ACM Digital Library',\n        'openreview': 'OpenReview'\n    };\n    return labels[source] || source.charAt(0).toUpperCase() + source.slice(1);\n}\n\n// Parse arXiv API response\nasync function parseXMLResponse(xmlText) {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlText, \"text/xml\");\n    \n    // Get entry element\n    const entry = xmlDoc.querySelector('entry');\n    if (!entry) return null;\n    \n    return {\n        title: entry.querySelector('title')?.textContent?.trim(),\n        authors: Array.from(entry.querySelectorAll('author name'))\n            .map(name => name.textContent.trim())\n            .join(', '),\n        abstract: entry.querySelector('summary')?.textContent?.trim(),\n        published: entry.querySelector('published')?.textContent?.trim(),\n    };\n}\n\n/**\n * Fetch paper metadata based on source\n * @param {string} source Paper source type\n * @param {string} id Paper identifier\n * @returns {Promise<Object|null>} Paper metadata or null if unavailable\n */\nasync function fetchPaperMetadata(source, id) {\n    console.log(`Starting metadata fetch for ${source}:${id}`);\n    \n    // Generate cache key\n    const cacheKey = `${source}:${id}`;\n    \n    // Check cache first\n    if (metadataCache.has(cacheKey)) {\n        console.log('Found in cache:', cacheKey);\n        return metadataCache.get(cacheKey);\n    }\n\n    // Source-specific metadata fetching\n    try {\n        let metadata = null;\n        \n        if (source === 'arxiv') {\n            // Use arXiv API\n            const apiUrl = `https://export.arxiv.org/api/query?id_list=${id}`;\n            console.log('API URL:', apiUrl);\n            \n            const response = await fetch(apiUrl);\n            console.log('API response status:', response.status);\n            \n            if (response.ok) {\n                const text = await response.text();\n                metadata = await parseXMLResponse(text);\n            }\n        } else {\n            // For other sources, try to extract from page meta tags first\n            metadata = {\n                title: document.querySelector('meta[name=\"citation_title\"]')?.content ||\n                       document.querySelector('meta[property=\"og:title\"]')?.content,\n                authors: document.querySelector('meta[name=\"citation_authors\"]')?.content ||\n                         document.querySelector('meta[name=\"author\"]')?.content,\n                abstract: document.querySelector('meta[name=\"description\"]')?.content ||\n                          document.querySelector('meta[property=\"og:description\"]')?.content,\n                published: document.querySelector('meta[name=\"citation_publication_date\"]')?.content\n            };\n            \n            // If not found in meta tags, set defaults\n            if (!metadata.title) {\n                metadata.title = `${getSourceLabel(source)} Paper: ${id}`;\n            }\n        }\n\n        if (metadata) {\n            console.log('Fetched metadata:', metadata);\n            metadataCache.set(cacheKey, metadata);\n            return metadata;\n        } \n    } catch (error) {\n        console.error('Error fetching metadata:', error);\n    }\n\n    // Default minimal metadata if all else fails\n    const defaultMetadata = {\n        title: `${getSourceLabel(source)} Paper: ${id}`,\n        authors: '',\n        abstract: '',\n        published: ''\n    };\n    \n    metadataCache.set(cacheKey, defaultMetadata);\n    return defaultMetadata;\n}\n\n/**\n * Create popup element for paper annotation\n * @param {string} source Paper source\n * @param {string} id Paper ID\n * @param {string} initialTitle Optional initial title\n * @returns {Promise<HTMLElement>} Popup element\n */\nasync function createPopup(source, id, initialTitle = '') {\n    console.log(`Creating popup for ${source}:${id}`);\n    \n    // Fetch metadata\n    const metadata = await fetchPaperMetadata(source, id);\n    console.log('Fetched metadata:', metadata);\n\n    const popup = document.createElement('div');\n    popup.className = 'paper-popup';\n    \n    // Create popup content\n    popup.innerHTML = `\n        <div class=\"paper-popup-source source-${source}\">${getSourceLabel(source)}</div>\n        <div class=\"paper-popup-header\">${metadata?.title || initialTitle || id}</div>\n        <div class=\"paper-popup-meta\">${metadata?.authors || ''}</div>\n        <div class=\"paper-popup-buttons\">\n            <button class=\"vote-button\" data-vote=\"thumbsup\">👍 Interesting</button>\n            <button class=\"vote-button\" data-vote=\"thumbsdown\">👎 Not Relevant</button>\n        </div>\n        <textarea placeholder=\"Add notes...\"></textarea>\n        <div class=\"paper-popup-actions\">\n            <button class=\"save-button\">Save</button>\n        </div>\n    `;\n\n    // Handle voting\n    popup.querySelectorAll('.vote-button').forEach(button => {\n        button.addEventListener('click', () => {\n            popup.querySelectorAll('.vote-button').forEach(b => b.classList.remove('active'));\n            button.classList.add('active');\n        });\n    });\n\n    // Handle save\n    popup.querySelector('.save-button').addEventListener('click', () => {\n        const vote = popup.querySelector('.vote-button.active')?.dataset.vote;\n        const notes = popup.querySelector('textarea').value;\n        \n        // Format data for the background script\n        if (vote || notes) {\n            chrome.runtime.sendMessage({\n                type: 'updateAnnotation',\n                annotationType: notes ? 'notes' : 'vote',\n                data: {\n                    paperId: id,\n                    source: source,\n                    vote,\n                    notes,\n                    title: metadata?.title,\n                    authors: metadata?.authors,\n                    abstract: metadata?.abstract,\n                    timestamp: new Date().toISOString()\n                }\n            }, (response) => {\n                console.log('Annotation saved:', response);\n                popup.remove();\n                activePopup = null;\n            });\n        }\n    });\n\n    // Store source and ID for reference\n    popup.paperSource = source;\n    popup.paperId = id;\n    \n    return popup;\n}\n\n/**\n * Create wrapper for popup placement\n * @returns {HTMLElement} Popup wrapper element\n */\nfunction createPopupWrapper() {\n    const wrapper = document.createElement('div');\n    wrapper.style.position = 'relative';\n    wrapper.style.zIndex = '10000';\n    return wrapper;\n}\n\n/**\n * Process a paper link element\n * @param {HTMLAnchorElement} link Link element to process\n */\nasync function processPaperLink(link) {\n    // Skip if already processed\n    if (link.classList.contains('paper-processed')) return;\n    link.classList.add('paper-processed');\n\n    // Detect paper source from URL\n    const sourceInfo = detectPaperSource(link.href);\n    if (!sourceInfo) return;\n    \n    const { type: source, id } = sourceInfo;\n\n    // Create annotator button with source-specific class\n    const annotator = document.createElement('span');\n    annotator.className = `paper-annotator annotator-${source}`;\n    annotator.title = `Add ${getSourceLabel(source)} annotation`;\n    \n    // Update the click handler\n    annotator.addEventListener('click', async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        // Remove existing popup if any\n        if (activePopup) {\n            activePopup.parentElement?.remove(); // Remove the wrapper\n            if (activePopup.paperSource === source && activePopup.paperId === id) {\n                activePopup = null;\n                return;\n            }\n        }\n    \n        // Create popup\n        const popup = await createPopup(source, id);\n        \n        // Create wrapper and add popup to it\n        const wrapper = createPopupWrapper();\n        wrapper.appendChild(popup);\n        \n        // Position popup relative to annotator\n        const annotatorRect = annotator.getBoundingClientRect();\n        const available_width = window.innerWidth - annotatorRect.left;\n        \n        if (available_width < 320) { // if not enough space on right\n            popup.style.right = '0';  // align to right edge\n            popup.style.left = 'auto';\n        } else {\n            popup.style.left = '0';\n        }\n        popup.style.top = `${annotatorRect.height + 5}px`;\n        \n        // Add to page and store reference\n        annotator.parentNode.insertBefore(wrapper, annotator.nextSibling);\n        activePopup = popup;\n    });\n    \n    // Add to page\n    link.parentNode.insertBefore(annotator, link.nextSibling);\n}\n\n// Process initial links for all supported sources\nfunction processInitialLinks() {\n    // Process arXiv links (backward compatibility)\n    document.querySelectorAll('a[href*=\"arxiv.org\"]').forEach(processPaperLink);\n    \n    // Process DOI links\n    document.querySelectorAll('a[href*=\"doi.org\"]').forEach(processPaperLink);\n    document.querySelectorAll('a[href*=\"dl.acm.org/doi\"]').forEach(processPaperLink);\n    \n    // Process Semantic Scholar links\n    document.querySelectorAll('a[href*=\"semanticscholar.org/paper\"]').forEach(processPaperLink);\n    \n    // Process OpenReview links\n    document.querySelectorAll('a[href*=\"openreview.net/forum\"]').forEach(processPaperLink);\n}\n\n// Process all links on page load\nprocessInitialLinks();\n\n// Watch for new links with a mutation observer\nconst observer = new MutationObserver((mutations) => {\n    mutations.forEach(mutation => {\n        mutation.addedNodes.forEach(node => {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n                // Process all supported link types\n                if (node.tagName === 'A') {\n                    processPaperLink(node);\n                } else {\n                    // Check for links inside added elements\n                    node.querySelectorAll('a[href*=\"arxiv.org\"]').forEach(processPaperLink);\n                    node.querySelectorAll('a[href*=\"doi.org\"]').forEach(processPaperLink);\n                    node.querySelectorAll('a[href*=\"dl.acm.org/doi\"]').forEach(processPaperLink);\n                    node.querySelectorAll('a[href*=\"semanticscholar.org/paper\"]').forEach(processPaperLink);\n                    node.querySelectorAll('a[href*=\"openreview.net/forum\"]').forEach(processPaperLink);\n                }\n            }\n        });\n    });\n});\n\n// Configure and start the observer\nobserver.observe(document.body, {\n    childList: true,\n    subtree: true\n});\n\n// Optional: Export functions for testing\nwindow.paperTracker = {\n    detectPaperSource,\n    fetchPaperMetadata,\n    processPaperLink\n};\n"],"names":[],"mappings":"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"}