{"version":3,"file":"content.bundle.js","sources":["../content.js"],"sourcesContent":["// content.js\n// Enhanced with better paper tracking and standardized ID handling\n\n/**\n * Detect paper source and ID from URL using the standardized approach\n * @param {string} url URL to check for paper identifiers\n * @returns {Object|null} Source information or null if not a paper URL\n */\nfunction detectPaperSource(url) {\n  // Check each source type\n  for (const source of PAPER_SOURCES) {\n    for (let i = 0; i < source.urlPatterns.length; i++) {\n      const match = url.match(source.urlPatterns[i]);\n      if (match) {\n        const id = source.getIdFromMatch(match);\n        return {\n          type: source.type,\n          id: id,\n          url: url\n        };\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Format a primary ID properly using a consistent approach\n * @param {string} source Source type (e.g., 'arxiv', 'doi')\n * @param {string} id Original ID from the source\n * @returns {string} Formatted primary ID\n */\nfunction formatPrimaryId(source, id) {\n  // Sanitize the ID by replacing problematic characters\n  const safeId = id\n    .replace(/\\//g, '_')\n    .replace(/:/g, '.')\n    .replace(/\\s/g, '_')\n    .replace(/\\\\/g, '_');\n  \n  return `${source}.${safeId}`;\n}\n\n/**\n * Process paper link and add annotation functionality\n * @param {HTMLAnchorElement} link Link element to process\n */\nasync function processPaperLink(link) {\n  // Skip if already processed\n  if (link.classList.contains('paper-processed')) return;\n  link.classList.add('paper-processed');\n\n  // Detect paper source from URL\n  const sourceInfo = detectPaperSource(link.href);\n  if (!sourceInfo) return;\n  \n  const { type: source, id } = sourceInfo;\n\n  // Create annotator button with source-specific class\n  const annotator = document.createElement('span');\n  annotator.className = `paper-annotator annotator-${source}`;\n  annotator.title = `Add ${getSourceLabel(source)} annotation`;\n  \n  // Update the click handler\n  annotator.addEventListener('click', async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  \n    // Remove existing popup if any\n    if (activePopup) {\n      activePopup.parentElement?.remove(); // Remove the wrapper\n      if (activePopup.paperSource === source && activePopup.paperId === id) {\n        activePopup = null;\n        return;\n      }\n    }\n  \n    // Create popup\n    const popup = await createPopup(source, id);\n    \n    // Create wrapper and add popup to it\n    const wrapper = createPopupWrapper();\n    wrapper.appendChild(popup);\n    \n    // Position popup relative to annotator\n    const annotatorRect = annotator.getBoundingClientRect();\n    const available_width = window.innerWidth - annotatorRect.left;\n    \n    if (available_width < 320) { // if not enough space on right\n      popup.style.right = '0';  // align to right edge\n      popup.style.left = 'auto';\n    } else {\n      popup.style.left = '0';\n    }\n    popup.style.top = `${annotatorRect.height + 5}px`;\n    \n    // Add to page and store reference\n    annotator.parentNode.insertBefore(wrapper, annotator.nextSibling);\n    activePopup = popup;\n  });\n  \n  // Add to page\n  link.parentNode.insertBefore(annotator, link.nextSibling);\n}\n\n/**\n * Create popup element for paper annotation\n * @param {string} source Paper source\n * @param {string} id Paper ID\n * @param {string} initialTitle Optional initial title\n * @returns {Promise<HTMLElement>} Popup element\n */\nasync function createPopup(source, id, initialTitle = '') {\n  console.log(`Creating popup for ${source}:${id}`);\n  \n  // Calculate the standardized primary ID\n  const primary_id = formatPrimaryId(source, id);\n  \n  // Fetch metadata\n  const metadata = await fetchPaperMetadata(source, id);\n  console.log('Fetched metadata:', metadata);\n\n  const popup = document.createElement('div');\n  popup.className = 'paper-popup';\n  \n  // Create popup content\n  popup.innerHTML = `\n      <div class=\"paper-popup-source source-${source}\">${getSourceLabel(source)}</div>\n      <div class=\"paper-popup-header\">${metadata?.title || initialTitle || id}</div>\n      <div class=\"paper-popup-meta\">${metadata?.authors || ''}</div>\n      <div class=\"paper-popup-buttons\">\n          <button class=\"vote-button\" data-vote=\"thumbsup\">üëç Interesting</button>\n          <button class=\"vote-button\" data-vote=\"thumbsdown\">üëé Not Relevant</button>\n      </div>\n      <textarea placeholder=\"Add notes...\"></textarea>\n      <div class=\"paper-popup-actions\">\n          <button class=\"save-button\">Save</button>\n      </div>\n  `;\n\n  // Handle voting\n  popup.querySelectorAll('.vote-button').forEach(button => {\n      button.addEventListener('click', () => {\n          popup.querySelectorAll('.vote-button').forEach(b => b.classList.remove('active'));\n          button.classList.add('active');\n      });\n  });\n\n  // Handle save\n  popup.querySelector('.save-button').addEventListener('click', () => {\n      const vote = popup.querySelector('.vote-button.active')?.dataset.vote;\n      const notes = popup.querySelector('textarea').value;\n      \n      // Format data for the background script with primary_id\n      if (vote || notes) {\n          chrome.runtime.sendMessage({\n              type: 'updateAnnotation',\n              annotationType: notes ? 'notes' : 'vote',\n              data: {\n                  paperId: primary_id, // Use the formatted primary ID\n                  source: source,\n                  vote,\n                  notes,\n                  title: metadata?.title,\n                  authors: metadata?.authors,\n                  abstract: metadata?.abstract,\n                  timestamp: new Date().toISOString()\n              }\n          }, (response) => {\n              console.log('Annotation saved:', response);\n              popup.remove();\n              activePopup = null;\n          });\n      }\n  });\n\n  // Store source and ID for reference\n  popup.paperSource = source;\n  popup.paperId = id;\n  popup.primary_id = primary_id;\n  \n  return popup;\n}\n\n// Update the trackPaper function to use the unified approach\nfunction trackPaper(url) {\n  const sourceInfo = detectPaperSource(url);\n  if (!sourceInfo) {\n    console.log('Not a recognized paper URL:', url);\n    return;\n  }\n  \n  // Get the page title if possible\n  const title = document.title || `${sourceInfo.type.toUpperCase()} Paper: ${sourceInfo.id}`;\n  \n  // Send message to background script with proper data format\n  chrome.runtime.sendMessage({\n    type: 'trackPaper',\n    source: sourceInfo.type,\n    id: sourceInfo.id,\n    url: url,\n    title: title\n  }, (response) => {\n    console.log('Paper tracking result:', response);\n  });\n}\n\n// Add a direct tracking function that can be called from page content\nwindow.paperTracker = {\n  detectPaperSource,\n  fetchPaperMetadata,\n  processPaperLink,\n  trackPaper\n};\n\n// Export the enhanced trackPaper function to global scope for other scripts\nwindow.trackPaper = trackPaper;\n"],"names":[],"mappings":"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"}