{"version":3,"file":"background.bundle.js","sources":["../node_modules/gh-store-client/dist/index.mjs","../storage/types.ts","../storage/client.ts","../config/session.js","../background.js"],"sourcesContent":["var u=class{constructor(t,e,s={}){this.token=t,this.repo=e,this.config={baseLabel:s.baseLabel??\"stored-object\",uidPrefix:s.uidPrefix??\"UID:\",reactions:{processed:s.reactions?.processed??\"+1\",initialState:s.reactions?.initialState??\"rocket\"}}}async fetchFromGitHub(t,e={}){let s=new URL(`https://api.github.com/repos/${this.repo}${t}`);e.params&&(Object.entries(e.params).forEach(([i,n])=>{s.searchParams.append(i,n)}),delete e.params);let r=await fetch(s.toString(),{...e,headers:{Authorization:`token ${this.token}`,Accept:\"application/vnd.github.v3+json\",...e.headers}});if(!r.ok)throw new Error(`GitHub API error: ${r.status}`);return r.json()}async getObject(t){let e=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:[this.config.baseLabel,`${this.config.uidPrefix}${t}`].join(\",\"),state:\"closed\"}});if(!e||e.length===0)throw new Error(`No object found with ID: ${t}`);let s=e[0],r=JSON.parse(s.body);return{meta:{objectId:t,label:`${this.config.uidPrefix}${t}`,createdAt:new Date(s.created_at),updatedAt:new Date(s.updated_at),version:await this._getVersion(s.number)},data:r}}async createObject(t,e){let s=`${this.config.uidPrefix}${t}`,r=await this.fetchFromGitHub(\"/issues\",{method:\"POST\",body:JSON.stringify({title:`Stored Object: ${t}`,body:JSON.stringify(e,null,2),labels:[this.config.baseLabel,s]})}),i={type:\"initial_state\",data:e,timestamp:new Date().toISOString()},n=await this.fetchFromGitHub(`/issues/${r.number}/comments`,{method:\"POST\",body:JSON.stringify({body:JSON.stringify(i,null,2)})});return await this.fetchFromGitHub(`/issues/comments/${n.id}/reactions`,{method:\"POST\",body:JSON.stringify({content:this.config.reactions.processed})}),await this.fetchFromGitHub(`/issues/comments/${n.id}/reactions`,{method:\"POST\",body:JSON.stringify({content:this.config.reactions.initialState})}),await this.fetchFromGitHub(`/issues/${r.number}`,{method:\"PATCH\",body:JSON.stringify({state:\"closed\"})}),{meta:{objectId:t,label:s,createdAt:new Date(r.created_at),updatedAt:new Date(r.updated_at),version:1},data:e}}async updateObject(t,e){let s=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:[this.config.baseLabel,`${this.config.uidPrefix}${t}`].join(\",\"),state:\"all\"}});if(!s||s.length===0)throw new Error(`No object found with ID: ${t}`);let r=s[0];if(r.state===\"open\")throw new Error(\"Object is currently being processed\");return await this.fetchFromGitHub(`/issues/${r.number}/comments`,{method:\"POST\",body:JSON.stringify({body:JSON.stringify(e,null,2)})}),await this.fetchFromGitHub(`/issues/${r.number}`,{method:\"PATCH\",body:JSON.stringify({state:\"open\"})}),this.getObject(t)}async listAll(){let t=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:this.config.baseLabel,state:\"closed\"}}),e={};for(let s of t)if(!s.labels.some(r=>r.name===\"archived\"))try{let r=this._getObjectIdFromLabels(s),i=JSON.parse(s.body),n={objectId:r,label:r,createdAt:new Date(s.created_at),updatedAt:new Date(s.updated_at),version:await this._getVersion(s.number)};e[r]={meta:n,data:i}}catch{continue}return e}async listUpdatedSince(t){let e=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:this.config.baseLabel,state:\"closed\",since:t.toISOString()}}),s={};for(let r of e)if(!r.labels.some(i=>i.name===\"archived\"))try{let i=this._getObjectIdFromLabels(r),n=JSON.parse(r.body),o=new Date(r.updated_at);if(o>t){let h={objectId:i,label:i,createdAt:new Date(r.created_at),updatedAt:o,version:await this._getVersion(r.number)};s[i]={meta:h,data:n}}}catch{continue}return s}async getObjectHistory(t){let e=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:[this.config.baseLabel,`${this.config.uidPrefix}${t}`].join(\",\"),state:\"all\"}});if(!e||e.length===0)throw new Error(`No object found with ID: ${t}`);let s=e[0],r=await this.fetchFromGitHub(`/issues/${s.number}/comments`),i=[];for(let n of r)try{let o=JSON.parse(n.body);i.push({timestamp:n.created_at,type:o.type||\"update\",data:o.data||o,commentId:n.id})}catch{continue}return i}async _getVersion(t){return(await this.fetchFromGitHub(`/issues/${t}/comments`)).length+1}_getObjectIdFromLabels(t){for(let e of t.labels)if(e.name!==this.config.baseLabel&&e.name.startsWith(this.config.uidPrefix))return e.name.slice(this.config.uidPrefix.length);throw new Error(`No UID label found with prefix ${this.config.uidPrefix}`)}};var c={baseLabel:\"stored-object\",uidPrefix:\"UID:\",reactions:{processed:\"+1\",initialState:\"rocket\"},retries:{maxAttempts:3,backoffFactor:2},rateLimit:{maxRequestsPerHour:1e3}};function g(a){return{...c,...a,reactions:{...c.reactions,...a.reactions},retries:{...c.retries,...a.retries},rateLimit:{...c.rateLimit,...a.rateLimit}}}function f(a){return/^gh[ps]_[a-zA-Z0-9]{36}$/.test(a)}function p(a){return/^[\\w-]+\\/[\\w-]+$/.test(a)}var m=class extends Error{constructor(t){super(t),this.name=\"ConfigError\"}},b=class extends m{constructor(t=\"Invalid GitHub token format\"){super(t),this.name=\"TokenError\"}},d=class extends m{constructor(t=\"Invalid repository format. Use owner/repo\"){super(t),this.name=\"RepoError\"}};export{m as ConfigError,c as DEFAULT_CONFIG,u as GitHubStoreClient,d as RepoError,b as TokenError,g as mergeConfig,p as validateRepo,f as validateToken};\n//# sourceMappingURL=index.mjs.map","// extension/storage/types.ts\nimport type { Json } from 'gh-store-client';\n\n// Convert interfaces to type aliases to help with Json compatibility\nexport type PaperMetadata = {\n  arxivId: string;\n  url: string;\n  title: string;\n  authors: string;\n  abstract: string;\n  timestamp: string;\n  published_date: string;\n  arxiv_tags: string[];\n  rating: string;\n}\n\n// Make session config a separate type for clarity\nexport type SessionConfig = {\n  idle_threshold_seconds: number;\n  min_duration_seconds: number;\n  continuous_activity_required: boolean;\n  partial_sessions_logged: boolean;\n}\n\n// Reading session as a plain object type\nexport type ReadingSession = {\n  duration_seconds: number;\n  session_config: SessionConfig;\n}\n\n// Base interaction type that ensures data is Json-compatible\nexport type Interaction = {\n  type: string;\n  timestamp: string;\n  data: Json;\n}\n\n// Typed interaction data (these are the actual data shapes we'll use)\nexport type ReadingInteractionData = {\n  duration_seconds: number;\n  session_config: SessionConfig;\n}\n\nexport type AnnotationInteractionData = {\n  key: string;\n  value: Json;\n}\n\nexport type RatingInteractionData = {\n  rating: string;\n}\n\n// Collection of interactions for a paper\nexport type InteractionLog = {\n  paper_id: string;\n  interactions: Interaction[];\n}\n\n// Type guards for runtime type checking - export as values, not types\nexport const isReadingSession = (data: unknown): data is ReadingSession => {\n  const session = data as ReadingSession;\n  return (\n    typeof session === 'object' &&\n    session !== null &&\n    typeof session.duration_seconds === 'number' &&\n    typeof session.session_config === 'object'\n  );\n};\n\nexport const isInteractionLog = (data: unknown): data is InteractionLog => {\n  const log = data as InteractionLog;\n  return (\n    typeof log === 'object' &&\n    log !== null &&\n    typeof log.paper_id === 'string' &&\n    Array.isArray(log.interactions)\n  );\n};\n","// extension/storage/client.ts\nimport { GitHubStoreClient } from 'gh-store-client';\nimport type { Json } from 'gh-store-client';\nimport { \n  type PaperMetadata, \n  type InteractionLog, \n  type Interaction,\n  type ReadingSession,\n  isReadingSession,\n  isInteractionLog\n} from './types';\n\nexport class StorageClient {\n  private client: GitHubStoreClient;\n  \n  constructor(token: string, repo: string) {\n    this.client = new GitHubStoreClient(token, repo);\n  }\n\n  // Paper metadata methods\n  async getOrCreatePaperMetadata(paperData: Partial<PaperMetadata> & { arxivId: string }): Promise<PaperMetadata> {\n    const objectId = `paper:${paperData.arxivId}`;\n    \n    try {\n      // Try to get existing paper\n      const obj = await this.client.getObject(objectId);\n      const data = obj.data as unknown;\n      \n      // Runtime type check (could add more validation here)\n      if (typeof data === 'object' && data !== null) {\n        return data as PaperMetadata;\n      }\n      throw new Error('Invalid paper metadata format');\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('No object found')) {\n        // Create new paper with default fields if it doesn't exist\n        const defaultPaperData: PaperMetadata = {\n          arxivId: paperData.arxivId,\n          url: paperData.url || `https://arxiv.org/abs/${paperData.arxivId}`,\n          title: paperData.title || paperData.arxivId,\n          authors: paperData.authors || '',\n          abstract: paperData.abstract || '',\n          timestamp: new Date().toISOString(),\n          rating: 'novote',\n          published_date: paperData.published_date || '',\n          arxiv_tags: paperData.arxiv_tags || []\n        };\n\n        await this.client.createObject(objectId, defaultPaperData);\n        return defaultPaperData;\n      }\n      throw error;\n    }\n  }\n\n  // Interaction log methods\n  private async getOrCreateInteractionLog(arxivId: string): Promise<InteractionLog> {\n    const objectId = `interactions:${arxivId}`;\n    \n    try {\n      const obj = await this.client.getObject(objectId);\n      const data = obj.data as unknown;\n      \n      if (isInteractionLog(data)) {\n        return data;\n      }\n      throw new Error('Invalid interaction log format');\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('No object found')) {\n        const newLog: InteractionLog = {\n          paper_id: arxivId,\n          interactions: []\n        };\n        await this.client.createObject(objectId, newLog);\n        return newLog;\n      }\n      throw error;\n    }\n  }\n\n  // Log a reading session\n  async logReadingSession(\n    arxivId: string,\n    session: ReadingSession,\n    paperData?: Partial<PaperMetadata>\n  ): Promise<void> {\n    // Ensure paper exists\n    if (paperData) {\n      await this.getOrCreatePaperMetadata({\n        arxivId,\n        ...paperData\n      });\n    }\n\n    // Add to interaction log\n    const interaction: Interaction = {\n      type: 'reading_session',\n      timestamp: new Date().toISOString(),\n      data: session as unknown as Json // Safe because ReadingSession matches Json structure\n    };\n\n    await this.addInteraction(arxivId, interaction);\n  }\n\n  // Log an annotation\n  async logAnnotation(\n    arxivId: string,\n    key: string,\n    value: Json,\n    paperData?: Partial<PaperMetadata>\n  ): Promise<void> {\n    // Ensure paper exists\n    if (paperData) {\n      await this.getOrCreatePaperMetadata({\n        arxivId,\n        ...paperData\n      });\n    }\n\n    // Add to interaction log\n    const interaction: Interaction = {\n      type: 'annotation',\n      timestamp: new Date().toISOString(),\n      data: { key, value }\n    };\n\n    await this.addInteraction(arxivId, interaction);\n  }\n\n  // Update paper rating\n  async updateRating(\n    arxivId: string,\n    rating: string,\n    paperData?: Partial<PaperMetadata>\n  ): Promise<void> {\n    // Update paper metadata\n    const paper = await this.getOrCreatePaperMetadata({\n      arxivId,\n      ...paperData\n    });\n    \n    await this.client.updateObject(`paper:${arxivId}`, { rating });\n\n    // Log rating interaction\n    const interaction: Interaction = {\n      type: 'rating',\n      timestamp: new Date().toISOString(),\n      data: { rating }\n    };\n\n    await this.addInteraction(arxivId, interaction);\n  }\n\n  // Add interaction to log\n  private async addInteraction(arxivId: string, interaction: Interaction): Promise<void> {\n    const log = await this.getOrCreateInteractionLog(arxivId);\n    \n    // Add new interaction\n    const updatedLog = {\n      ...log,\n      interactions: [...log.interactions, interaction]\n    };\n\n    await this.client.updateObject(`interactions:${arxivId}`, updatedLog);\n  }\n\n  // Get interactions for a paper\n  async getInteractions(\n    arxivId: string,\n    options: {\n      type?: string;\n      startTime?: Date;\n      endTime?: Date;\n    } = {}\n  ): Promise<Interaction[]> {\n    try {\n      const log = await this.getOrCreateInteractionLog(arxivId);\n      let interactions = log.interactions;\n\n      // Filter by type if specified\n      if (options.type) {\n        interactions = interactions.filter(i => i.type === options.type);\n      }\n\n      // Filter by time range if specified\n      if (options.startTime || options.endTime) {\n        interactions = interactions.filter(i => {\n          const time = new Date(i.timestamp);\n          if (options.startTime && time < options.startTime) return false;\n          if (options.endTime && time > options.endTime) return false;\n          return true;\n        });\n      }\n\n      return interactions;\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('No object found')) {\n        return [];\n      }\n      throw error;\n    }\n  }\n\n  // Get total reading time for a paper\n  async getPaperReadingTime(arxivId: string): Promise<number> {\n    const interactions = await this.getInteractions(arxivId, { type: 'reading_session' });\n    return interactions.reduce(\n      (total, i) => {\n        if (isReadingSession(i.data)) {\n          return total + i.data.duration_seconds;\n        }\n        return total;\n      },\n      0\n    );\n  }\n\n  // Paper history\n  async getPaperHistory(arxivId: string): Promise<Json[]> {\n    const objectId = `paper:${arxivId}`;\n    return this.client.getObjectHistory(objectId);\n  }\n}\n","// extension/config/session.js\n\n// Default configuration values\nconst DEFAULT_CONFIG = {\n    idleThresholdMinutes: 5,\n    minSessionDurationSeconds: 30,\n    // Adding more granular control\n    requireContinuousActivity: true,  // If true, resets timer on idle\n    logPartialSessions: false,        // If true, logs sessions even if under minimum duration\n    activityUpdateIntervalSeconds: 1  // How often to update active time\n};\n\n// Load session configuration from storage\nasync function loadSessionConfig() {\n    const items = await chrome.storage.sync.get('sessionConfig');\n    return { ...DEFAULT_CONFIG, ...items.sessionConfig };\n}\n\n// Save session configuration to storage\nasync function saveSessionConfig(config) {\n    await chrome.storage.sync.set({\n        sessionConfig: {\n            idleThresholdMinutes: Number(config.idleThresholdMinutes),\n            minSessionDurationSeconds: Number(config.minSessionDurationSeconds),\n            requireContinuousActivity: Boolean(config.requireContinuousActivity),\n            logPartialSessions: Boolean(config.logPartialSessions),\n            activityUpdateIntervalSeconds: Number(config.activityUpdateIntervalSeconds)\n        }\n    });\n}\n\n// Convert configuration to milliseconds for internal use\nfunction getConfigurationInMs(config) {\n    return {\n        idleThreshold: config.idleThresholdMinutes * 60 * 1000,\n        minSessionDuration: config.minSessionDurationSeconds * 1000,\n        activityUpdateInterval: config.activityUpdateIntervalSeconds * 1000,\n        requireContinuousActivity: config.requireContinuousActivity,\n        logPartialSessions: config.logPartialSessions\n    };\n}\n\nexport { loadSessionConfig, saveSessionConfig, getConfigurationInMs, DEFAULT_CONFIG };","// background.js\nimport { StorageClient } from './storage/client';\nimport { loadSessionConfig, getConfigurationInMs } from './config/session.js';\n\nlet githubToken = '';\nlet githubRepo = '';\nlet currentPaperData = null;\nlet currentSession = null;\nlet activityInterval = null;\nlet activityTimeout = null;\nlet sessionConfig = null;\nlet storageClient = null;\n\n// Load credentials and configuration when extension starts\nasync function loadCredentials() {\n    const items = await chrome.storage.sync.get(['githubToken', 'githubRepo']);\n    githubToken = items.githubToken || '';\n    githubRepo = items.githubRepo || '';\n    console.log('Credentials loaded:', { hasToken: !!githubToken, hasRepo: !!githubRepo });\n    \n    // Initialize storage client if we have credentials\n    if (githubToken && githubRepo) {\n        storageClient = new StorageClient(githubToken, githubRepo);\n        console.log('Storage client initialized');\n    }\n    \n    // Load session configuration\n    sessionConfig = getConfigurationInMs(await loadSessionConfig());\n    console.log('Session configuration loaded:', sessionConfig);\n}\n\n// Listen for credential changes\nchrome.storage.onChanged.addListener(async (changes) => {\n    console.log('Storage changes detected:', Object.keys(changes));\n    if (changes.githubToken) {\n        githubToken = changes.githubToken.newValue;\n    }\n    if (changes.githubRepo) {\n        githubRepo = changes.githubRepo.newValue;\n    }\n    if (changes.sessionConfig) {\n        sessionConfig = getConfigurationInMs(changes.sessionConfig.newValue);\n        console.log('Session configuration updated:', sessionConfig);\n    }\n    \n    // Reinitialize storage client if credentials changed\n    if (changes.githubToken || changes.githubRepo) {\n        if (githubToken && githubRepo) {\n            storageClient = new StorageClient(githubToken, githubRepo);\n            console.log('Storage client reinitialized');\n        }\n    }\n});\n\n// Reading Session class to track individual reading sessions\nclass ReadingSession {\n    constructor(arxivId, config) {\n        this.arxivId = arxivId;\n        this.startTime = Date.now();\n        this.activeTime = 0;\n        this.lastActiveTime = Date.now();\n        this.isTracking = true;\n        this.config = config;\n    }\n\n    update() {\n        if (this.isTracking) {\n            const now = Date.now();\n            const timeSinceLastActive = now - this.lastActiveTime;\n            \n            if (timeSinceLastActive < this.config.idleThreshold) {\n                this.activeTime += timeSinceLastActive;\n            } else if (this.config.requireContinuousActivity) {\n                // Reset active time if continuous activity is required\n                this.activeTime = 0;\n            }\n            \n            this.lastActiveTime = now;\n        }\n    }\n\n    end() {\n        this.isTracking = false;\n        this.update();\n        \n        if (this.config.logPartialSessions) {\n            return this.activeTime;\n        }\n        return this.activeTime >= this.config.minSessionDuration ? this.activeTime : 0;\n    }\n}\n\n// Initialize credentials\nloadCredentials();\n\n// Listen for URL changes\nchrome.webNavigation.onCompleted.addListener(async (details) => {\n    console.log('Navigation detected:', details.url);\n    if (details.url.includes('arxiv.org')) {\n        console.log('arXiv URL detected, processing...');\n        const paperData = await processArxivUrl(details.url);\n        if (paperData) {\n            console.log('Paper data extracted:', paperData);\n            await createGithubIssue(paperData);\n        } else {\n            console.log('Failed to extract paper data');\n        }\n    }\n}, {\n    url: [{\n        hostSuffix: 'arxiv.org'\n    }]\n});\n\n// Message passing between background and popup\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    console.log('Message received:', request);\n    \n    if (request.type === 'getCurrentPaper') {\n        console.log('Popup requested current paper:', currentPaperData);\n        sendResponse(currentPaperData);\n    }\n    else if (request.type === 'updateRating') {\n        console.log('Rating update requested:', request.rating);\n        handleUpdateRating(request.rating, sendResponse);\n        return true; // Will respond asynchronously\n    }\n    else if (request.type === 'updateAnnotation') {\n        console.log('Annotation update requested:', request.annotationType, request.data);\n        handleAnnotationUpdate(request.annotationType, request.data)\n            .then(response => sendResponse(response))\n            .catch(error => sendResponse({ success: false, error: error.message }));\n        return true; // Will respond asynchronously\n    }\n    return true;\n});\n\nasync function handleUpdateRating(rating, sendResponse) {\n    if (!storageClient) {\n        sendResponse({ success: false, error: 'Storage client not initialized' });\n        return;\n    }\n\n    if (!currentPaperData) {\n        sendResponse({ success: false, error: 'No current paper' });\n        return;\n    }\n\n    try {\n        await storageClient.updateRating(currentPaperData.arxivId, rating, currentPaperData);\n        currentPaperData.rating = rating;\n        sendResponse({ success: true });\n    } catch (error) {\n        console.error('Error updating rating:', error);\n        sendResponse({ success: false, error: error.message });\n    }\n}\n\n// Tab and window management\nchrome.tabs.onActivated.addListener(async (activeInfo) => {\n    const tab = await chrome.tabs.get(activeInfo.tabId);\n    handleTabChange(tab);\n});\n\nchrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {\n    if (changeInfo.status === 'complete') {\n        handleTabChange(tab);\n    }\n});\n\nchrome.windows.onFocusChanged.addListener((windowId) => {\n    if (windowId === chrome.windows.WINDOW_ID_NONE) {\n        endCurrentSession();\n    }\n});\n\nasync function handleTabChange(tab) {\n    const isArxiv = tab.url?.includes('arxiv.org/');\n    console.log('Tab change detected:', { isArxiv, url: tab.url });\n    \n    if (!isArxiv) {\n        console.log('Not an arXiv page, ending current session');\n        await endCurrentSession();\n        return;\n    }\n\n    // End any existing session before starting a new one\n    if (currentSession) {\n        console.log('Ending existing session before starting new one');\n        await endCurrentSession();\n    }\n\n    // Always process the URL and start a new session\n    console.log('Processing arXiv URL for new session');\n    currentPaperData = await processArxivUrl(tab.url);\n    if (currentPaperData) {\n        console.log('Starting new session for:', currentPaperData.arxivId);\n        currentSession = new ReadingSession(currentPaperData.arxivId, sessionConfig);\n        startActivityTracking();\n    }\n}\n\nasync function endCurrentSession() {\n    if (currentSession && currentPaperData) {\n        console.log('Ending session for:', currentPaperData.arxivId);\n        const duration = currentSession.end();\n        if (duration > 0) {\n            console.log('Creating reading event with duration:', duration);\n            await createReadingEvent(currentPaperData, duration);\n        }\n        currentSession = null;\n        currentPaperData = null;\n        stopActivityTracking();\n    }\n}\n\nfunction startActivityTracking() {\n    if (!activityInterval) {\n        console.log('Starting activity tracking');\n        activityInterval = setInterval(() => {\n            if (currentSession) {\n                currentSession.update();\n            }\n        }, sessionConfig.activityUpdateInterval);\n    }\n}\n\nfunction stopActivityTracking() {\n    if (activityInterval) {\n        clearInterval(activityInterval);\n        activityInterval = null;\n    }\n    if (activityTimeout) {\n        clearTimeout(activityTimeout);\n        activityTimeout = null;\n    }\n}\n\nasync function createReadingEvent(paperData, sessionDuration) {\n    if (!storageClient || !paperData) {\n        console.error('Missing required data for creating reading event:', {\n            hasStorageClient: !!storageClient,\n            hasPaperData: !!paperData\n        });\n        return;\n    }\n\n    const seconds = Math.round(sessionDuration / 1000);\n    if (sessionDuration < sessionConfig.minSessionDuration) {\n        console.log('Session too short to log:', seconds, 'seconds');\n        return;\n    }\n\n    const sessionData = {\n        duration_seconds: seconds,\n        session_config: {\n            idle_threshold_seconds: sessionConfig.idleThreshold / 1000,\n            min_duration_seconds: sessionConfig.minSessionDuration / 1000,\n            continuous_activity_required: sessionConfig.requireContinuousActivity,\n            partial_sessions_logged: sessionConfig.logPartialSessions\n        }\n    };\n\n    try {\n        await storageClient.logReadingSession(\n            paperData.arxivId,\n            sessionData,\n            paperData\n        );\n        console.log('Reading session logged:', sessionData);\n        \n        // Get and log total reading time\n        const totalTime = await storageClient.getPaperReadingTime(paperData.arxivId);\n        console.log('Total reading time:', totalTime, 'seconds');\n    } catch (error) {\n        console.error('Error logging reading session:', error);\n    }\n}\n\n// Update paper creation to use storage client\nasync function createGithubIssue(paperData) {\n    if (!storageClient) {\n        console.error('Storage client not initialized');\n        return;\n    }\n\n    try {\n        const existingPaper = await storageClient.getOrCreatePaperMetadata(paperData);\n        console.log('Paper metadata stored/retrieved:', existingPaper.arxivId);\n        return existingPaper;\n    } catch (error) {\n        console.error('Error handling paper metadata:', error);\n    }\n}\n\n// Update annotation handler to use interaction log\nasync function handleAnnotationUpdate(type, data) {\n    if (!storageClient) {\n        throw new Error('Storage client not initialized');\n    }\n\n    try {\n        // Include paper data if provided\n        const paperData = data.title ? {\n            title: data.title,\n            authors: data.authors,\n            abstract: data.abstract\n        } : undefined;\n\n        if (type === 'vote') {\n            await storageClient.updateRating(\n                data.paperId,\n                data.vote,\n                paperData\n            );\n        } else {\n            await storageClient.logAnnotation(\n                data.paperId,\n                'notes',  // For now using 'notes' as default key\n                data.notes,\n                paperData\n            );\n        }\n\n        return { success: true };\n    } catch (error) {\n        console.error('Error logging interaction:', error);\n        throw error;\n    }\n}\n\nasync function parseXMLText(xmlText) {\n    console.log('Parsing XML response...');\n    try {\n        const getTagContent = (tag, text) => {\n            const entryRegex = /<entry>([\\s\\S]*?)<\\/entry>/;\n            const entryMatch = text.match(entryRegex);\n            \n            if (entryMatch) {\n                const entryContent = entryMatch[1];\n                const regex = new RegExp(`<${tag}[^>]*>(.*?)</${tag}>`, 's');\n                const match = entryContent.match(regex);\n                return match ? match[1].trim() : '';\n            }\n            return '';\n        };\n        \n        const getAuthors = (text) => {\n            const authors = [];\n            const regex = /<author>[^]*?<name>([^]*?)<\\/name>[^]*?<\\/author>/g;\n            let match;\n            while (match = regex.exec(text)) {\n                authors.push(match[1].trim());\n            }\n            return authors;\n        };\n\n        const getCategories = (text) => {\n            const categories = new Set();\n            \n            const primaryMatch = text.match(/<arxiv:primary_category[^>]*term=\"([^\"]+)\"/);\n            if (primaryMatch) {\n                categories.add(primaryMatch[1]);\n            }\n            \n            const categoryRegex = /<category[^>]*term=\"([^\"]+)\"/g;\n            let match;\n            while (match = categoryRegex.exec(text)) {\n                categories.add(match[1]);\n            }\n            \n            return Array.from(categories);\n        };\n\n        const getPublishedDate = (text) => {\n            const match = text.match(/<published>([^<]+)<\\/published>/);\n            return match ? match[1].trim() : null;\n        };\n\n        const parsed = {\n            title: getTagContent('title', xmlText),\n            summary: getTagContent('summary', xmlText),\n            authors: getAuthors(xmlText),\n            published_date: getPublishedDate(xmlText),\n            arxiv_tags: getCategories(xmlText)\n        };\n        \n        console.log('Parsed XML:', parsed);\n        return parsed;\n    } catch (error) {\n        console.error('Error parsing XML:', error);\n        return null;\n    }\n}\n\nasync function processArxivUrl(url) {\n    console.log('Processing URL:', url);\n    \n    const patterns = [\n        /arxiv\\.org\\/abs\\/([0-9.]+)/,\n        /arxiv\\.org\\/pdf\\/([0-9.]+)\\.pdf/,\n        /arxiv\\.org\\/\\w+\\/([0-9.]+)/\n    ];\n    \n    let arxivId = null;\n    for (const pattern of patterns) {\n        const match = url.match(pattern);\n        if (match) {\n            arxivId = match[1];\n            break;\n        }\n    }\n    \n    if (!arxivId) {\n        console.log('No arXiv ID found in URL');\n        return null;\n    }\n    \n    console.log('Found arXiv ID:', arxivId);\n    \n    try {\n        const apiUrl = `http://export.arxiv.org/api/query?id_list=${arxivId}`;\n        console.log('Fetching from arXiv API:', apiUrl);\n        \n        const response = await fetch(apiUrl);\n        console.log('API response status:', response.status);\n        \n        const text = await response.text();\n        const parsed = await parseXMLText(text);\n        \n        if (!parsed) {\n            console.log('Failed to parse API response');\n            return null;\n        }\n        \n        const paperData = {\n            arxivId,\n            url,\n            title: parsed.title,\n            authors: parsed.authors.join(\", \"),\n            abstract: parsed.summary,\n            timestamp: new Date().toISOString(),\n            rating: 'novote',\n            published_date: parsed.published_date,\n            arxiv_tags: parsed.arxiv_tags\n        };\n        \n        console.log('Paper data processed:', paperData);\n        return paperData;\n    } catch (error) {\n        console.error('Error processing arXiv URL:', error);\n        return null;\n    }\n}\n"],"names":["GitHubStoreClient"],"mappings":"AAAA,IAAI,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,EAAE,YAAY,EAAE,QAAQ,CAAC,EAAC,CAAC,MAAM,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,6BAA6B,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,gCAAgC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,WAAW,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,+BAA+B,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;;AC2D/uI,MAAA,gBAAA,GAAmB,CAAC,IAA0C,KAAA;AACzE,EAAA,MAAM,OAAU,GAAA,IAAA;AAChB,EACE,OAAA,OAAO,OAAY,KAAA,QAAA,IACnB,OAAY,KAAA,IAAA,IACZ,OAAO,OAAA,CAAQ,gBAAqB,KAAA,QAAA,IACpC,OAAO,OAAA,CAAQ,cAAmB,KAAA,QAAA;AAEtC,CAAA;AAEa,MAAA,gBAAA,GAAmB,CAAC,IAA0C,KAAA;AACzE,EAAA,MAAM,GAAM,GAAA,IAAA;AACZ,EAAA,OACE,OAAO,GAAA,KAAQ,QACf,IAAA,GAAA,KAAQ,IACR,IAAA,OAAO,GAAI,CAAA,QAAA,KAAa,QACxB,IAAA,KAAA,CAAM,OAAQ,CAAA,GAAA,CAAI,YAAY,CAAA;AAElC,CAAA;;ACjEO,MAAM,aAAc,CAAA;AAAA,EAGzB,WAAA,CAAY,OAAe,IAAc,EAAA;AACvC,IAAA,IAAA,CAAK,MAAS,GAAA,IAAIA,CAAkB,CAAA,KAAA,EAAO,IAAI,CAAA;AAAA;AACjD;AAAA,EAGA,MAAM,yBAAyB,SAAiF,EAAA;AAC9G,IAAM,MAAA,QAAA,GAAW,CAAS,MAAA,EAAA,SAAA,CAAU,OAAO,CAAA,CAAA;AAE3C,IAAI,IAAA;AAEF,MAAA,MAAM,GAAM,GAAA,MAAM,IAAK,CAAA,MAAA,CAAO,UAAU,QAAQ,CAAA;AAChD,MAAA,MAAM,OAAO,GAAI,CAAA,IAAA;AAGjB,MAAA,IAAI,OAAO,IAAA,KAAS,QAAY,IAAA,IAAA,KAAS,IAAM,EAAA;AAC7C,QAAO,OAAA,IAAA;AAAA;AAET,MAAM,MAAA,IAAI,MAAM,+BAA+B,CAAA;AAAA,aACxC,KAAO,EAAA;AACd,MAAA,IAAI,iBAAiB,KAAS,IAAA,KAAA,CAAM,OAAQ,CAAA,QAAA,CAAS,iBAAiB,CAAG,EAAA;AAEvE,QAAA,MAAM,gBAAkC,GAAA;AAAA,UACtC,SAAS,SAAU,CAAA,OAAA;AAAA,UACnB,GAAK,EAAA,SAAA,CAAU,GAAO,IAAA,CAAA,sBAAA,EAAyB,UAAU,OAAO,CAAA,CAAA;AAAA,UAChE,KAAA,EAAO,SAAU,CAAA,KAAA,IAAS,SAAU,CAAA,OAAA;AAAA,UACpC,OAAA,EAAS,UAAU,OAAW,IAAA,EAAA;AAAA,UAC9B,QAAA,EAAU,UAAU,QAAY,IAAA,EAAA;AAAA,UAChC,SAAW,EAAA,iBAAA,IAAI,IAAK,EAAA,EAAE,WAAY,EAAA;AAAA,UAClC,MAAQ,EAAA,QAAA;AAAA,UACR,cAAA,EAAgB,UAAU,cAAkB,IAAA,EAAA;AAAA,UAC5C,UAAA,EAAY,SAAU,CAAA,UAAA,IAAc;AAAC,SACvC;AAEA,QAAA,MAAM,IAAK,CAAA,MAAA,CAAO,YAAa,CAAA,QAAA,EAAU,gBAAgB,CAAA;AACzD,QAAO,OAAA,gBAAA;AAAA;AAET,MAAM,MAAA,KAAA;AAAA;AACR;AACF;AAAA,EAGA,MAAc,0BAA0B,OAA0C,EAAA;AAChF,IAAM,MAAA,QAAA,GAAW,gBAAgB,OAAO,CAAA,CAAA;AAExC,IAAI,IAAA;AACF,MAAA,MAAM,GAAM,GAAA,MAAM,IAAK,CAAA,MAAA,CAAO,UAAU,QAAQ,CAAA;AAChD,MAAA,MAAM,OAAO,GAAI,CAAA,IAAA;AAEjB,MAAI,IAAA,gBAAA,CAAiB,IAAI,CAAG,EAAA;AAC1B,QAAO,OAAA,IAAA;AAAA;AAET,MAAM,MAAA,IAAI,MAAM,gCAAgC,CAAA;AAAA,aACzC,KAAO,EAAA;AACd,MAAA,IAAI,iBAAiB,KAAS,IAAA,KAAA,CAAM,OAAQ,CAAA,QAAA,CAAS,iBAAiB,CAAG,EAAA;AACvE,QAAA,MAAM,MAAyB,GAAA;AAAA,UAC7B,QAAU,EAAA,OAAA;AAAA,UACV,cAAc;AAAC,SACjB;AACA,QAAA,MAAM,IAAK,CAAA,MAAA,CAAO,YAAa,CAAA,QAAA,EAAU,MAAM,CAAA;AAC/C,QAAO,OAAA,MAAA;AAAA;AAET,MAAM,MAAA,KAAA;AAAA;AACR;AACF;AAAA,EAGA,MAAM,iBAAA,CACJ,OACA,EAAA,OAAA,EACA,SACe,EAAA;AAEf,IAAA,IAAI,SAAW,EAAA;AACb,MAAA,MAAM,KAAK,wBAAyB,CAAA;AAAA,QAClC,OAAA;AAAA,QACA,GAAG;AAAA,OACJ,CAAA;AAAA;AAIH,IAAA,MAAM,WAA2B,GAAA;AAAA,MAC/B,IAAM,EAAA,iBAAA;AAAA,MACN,SAAW,EAAA,iBAAA,IAAI,IAAK,EAAA,EAAE,WAAY,EAAA;AAAA,MAClC,IAAM,EAAA;AAAA;AAAA,KACR;AAEA,IAAM,MAAA,IAAA,CAAK,cAAe,CAAA,OAAA,EAAS,WAAW,CAAA;AAAA;AAChD;AAAA,EAGA,MAAM,aAAA,CACJ,OACA,EAAA,GAAA,EACA,OACA,SACe,EAAA;AAEf,IAAA,IAAI,SAAW,EAAA;AACb,MAAA,MAAM,KAAK,wBAAyB,CAAA;AAAA,QAClC,OAAA;AAAA,QACA,GAAG;AAAA,OACJ,CAAA;AAAA;AAIH,IAAA,MAAM,WAA2B,GAAA;AAAA,MAC/B,IAAM,EAAA,YAAA;AAAA,MACN,SAAW,EAAA,iBAAA,IAAI,IAAK,EAAA,EAAE,WAAY,EAAA;AAAA,MAClC,IAAA,EAAM,EAAE,GAAA,EAAK,KAAM;AAAA,KACrB;AAEA,IAAM,MAAA,IAAA,CAAK,cAAe,CAAA,OAAA,EAAS,WAAW,CAAA;AAAA;AAChD;AAAA,EAGA,MAAM,YAAA,CACJ,OACA,EAAA,MAAA,EACA,SACe,EAAA;AAEf,IAAc,MAAM,IAAA,CAAK,wBAAyB,CAAA;AAAA,MAChD,OAAA;AAAA,MACA,GAAG;AAAA,KACJ;AAED,IAAM,MAAA,IAAA,CAAK,OAAO,YAAa,CAAA,CAAA,MAAA,EAAS,OAAO,CAAI,CAAA,EAAA,EAAE,QAAQ,CAAA;AAG7D,IAAA,MAAM,WAA2B,GAAA;AAAA,MAC/B,IAAM,EAAA,QAAA;AAAA,MACN,SAAW,EAAA,iBAAA,IAAI,IAAK,EAAA,EAAE,WAAY,EAAA;AAAA,MAClC,IAAA,EAAM,EAAE,MAAO;AAAA,KACjB;AAEA,IAAM,MAAA,IAAA,CAAK,cAAe,CAAA,OAAA,EAAS,WAAW,CAAA;AAAA;AAChD;AAAA,EAGA,MAAc,cAAe,CAAA,OAAA,EAAiB,WAAyC,EAAA;AACrF,IAAA,MAAM,GAAM,GAAA,MAAM,IAAK,CAAA,yBAAA,CAA0B,OAAO,CAAA;AAGxD,IAAA,MAAM,UAAa,GAAA;AAAA,MACjB,GAAG,GAAA;AAAA,MACH,YAAc,EAAA,CAAC,GAAG,GAAA,CAAI,cAAc,WAAW;AAAA,KACjD;AAEA,IAAA,MAAM,KAAK,MAAO,CAAA,YAAA,CAAa,CAAgB,aAAA,EAAA,OAAO,IAAI,UAAU,CAAA;AAAA;AACtE;AAAA,EAGA,MAAM,eAAA,CACJ,OACA,EAAA,OAAA,GAII,EACoB,EAAA;AACxB,IAAI,IAAA;AACF,MAAA,MAAM,GAAM,GAAA,MAAM,IAAK,CAAA,yBAAA,CAA0B,OAAO,CAAA;AACxD,MAAA,IAAI,eAAe,GAAI,CAAA,YAAA;AAGvB,MAAA,IAAI,QAAQ,IAAM,EAAA;AAChB,QAAA,YAAA,GAAe,aAAa,MAAO,CAAA,CAAA,CAAA,KAAK,CAAE,CAAA,IAAA,KAAS,QAAQ,IAAI,CAAA;AAAA;AAIjE,MAAI,IAAA,OAAA,CAAQ,SAAa,IAAA,OAAA,CAAQ,OAAS,EAAA;AACxC,QAAe,YAAA,GAAA,YAAA,CAAa,OAAO,CAAK,CAAA,KAAA;AACtC,UAAA,MAAM,IAAO,GAAA,IAAI,IAAK,CAAA,CAAA,CAAE,SAAS,CAAA;AACjC,UAAA,IAAI,OAAQ,CAAA,SAAA,IAAa,IAAO,GAAA,OAAA,CAAQ,WAAkB,OAAA,KAAA;AAC1D,UAAA,IAAI,OAAQ,CAAA,OAAA,IAAW,IAAO,GAAA,OAAA,CAAQ,SAAgB,OAAA,KAAA;AACtD,UAAO,OAAA,IAAA;AAAA,SACR,CAAA;AAAA;AAGH,MAAO,OAAA,YAAA;AAAA,aACA,KAAO,EAAA;AACd,MAAA,IAAI,iBAAiB,KAAS,IAAA,KAAA,CAAM,OAAQ,CAAA,QAAA,CAAS,iBAAiB,CAAG,EAAA;AACvE,QAAA,OAAO,EAAC;AAAA;AAEV,MAAM,MAAA,KAAA;AAAA;AACR;AACF;AAAA,EAGA,MAAM,oBAAoB,OAAkC,EAAA;AAC1D,IAAM,MAAA,YAAA,GAAe,MAAM,IAAK,CAAA,eAAA,CAAgB,SAAS,EAAE,IAAA,EAAM,mBAAmB,CAAA;AACpF,IAAA,OAAO,YAAa,CAAA,MAAA;AAAA,MAClB,CAAC,OAAO,CAAM,KAAA;AACZ,QAAI,IAAA,gBAAA,CAAiB,CAAE,CAAA,IAAI,CAAG,EAAA;AAC5B,UAAO,OAAA,KAAA,GAAQ,EAAE,IAAK,CAAA,gBAAA;AAAA;AAExB,QAAO,OAAA,KAAA;AAAA,OACT;AAAA,MACA;AAAA,KACF;AAAA;AACF;AAAA,EAGA,MAAM,gBAAgB,OAAkC,EAAA;AACtD,IAAM,MAAA,QAAA,GAAW,SAAS,OAAO,CAAA,CAAA;AACjC,IAAO,OAAA,IAAA,CAAK,MAAO,CAAA,gBAAA,CAAiB,QAAQ,CAAA;AAAA;AAEhD;;AC9NA;;AAEA;AACA,MAAM,cAAc,GAAG;AACvB,IAAI,oBAAoB,EAAE,CAAC;AAC3B,IAAI,yBAAyB,EAAE,EAAE;AACjC;AACA,IAAI,yBAAyB,EAAE,IAAI;AACnC,IAAI,kBAAkB,EAAE,KAAK;AAC7B,IAAI,6BAA6B,EAAE,CAAC;AACpC,CAAC;;AAED;AACA,eAAe,iBAAiB,GAAG;AACnC,IAAI,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;AAChE,IAAI,OAAO,EAAE,GAAG,cAAc,EAAE,GAAG,KAAK,CAAC,aAAa,EAAE;AACxD;;AAeA;AACA,SAAS,oBAAoB,CAAC,MAAM,EAAE;AACtC,IAAI,OAAO;AACX,QAAQ,aAAa,EAAE,MAAM,CAAC,oBAAoB,GAAG,EAAE,GAAG,IAAI;AAC9D,QAAQ,kBAAkB,EAAE,MAAM,CAAC,yBAAyB,GAAG,IAAI;AACnE,QAAQ,sBAAsB,EAAE,MAAM,CAAC,6BAA6B,GAAG,IAAI;AAC3E,QAAQ,yBAAyB,EAAE,MAAM,CAAC,yBAAyB;AACnE,QAAQ,kBAAkB,EAAE,MAAM,CAAC;AACnC,KAAK;AACL;;ACxCA;;AAIA,IAAI,WAAW,GAAG,EAAE;AACpB,IAAI,UAAU,GAAG,EAAE;AACnB,IAAI,gBAAgB,GAAG,IAAI;AAC3B,IAAI,cAAc,GAAG,IAAI;AACzB,IAAI,gBAAgB,GAAG,IAAI;AAE3B,IAAI,aAAa,GAAG,IAAI;AACxB,IAAI,aAAa,GAAG,IAAI;;AAExB;AACA,eAAe,eAAe,GAAG;AACjC,IAAI,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;AAC9E,IAAI,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,EAAE;AACzC,IAAI,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,EAAE;AACvC,IAAI,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC;AAC1F;AACA;AACA,IAAI,IAAI,WAAW,IAAI,UAAU,EAAE;AACnC,QAAQ,aAAa,GAAG,IAAI,aAAa,CAAC,WAAW,EAAE,UAAU,CAAC;AAClE,QAAQ,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC;AACjD;AACA;AACA;AACA,IAAI,aAAa,GAAG,oBAAoB,CAAC,MAAM,iBAAiB,EAAE,CAAC;AACnE,IAAI,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,aAAa,CAAC;AAC/D;;AAEA;AACA,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,OAAO,KAAK;AACxD,IAAI,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClE,IAAI,IAAI,OAAO,CAAC,WAAW,EAAE;AAC7B,QAAQ,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC,QAAQ;AAClD;AACA,IAAI,IAAI,OAAO,CAAC,UAAU,EAAE;AAC5B,QAAQ,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,QAAQ;AAChD;AACA,IAAI,IAAI,OAAO,CAAC,aAAa,EAAE;AAC/B,QAAQ,aAAa,GAAG,oBAAoB,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC;AAC5E,QAAQ,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,aAAa,CAAC;AACpE;AACA;AACA;AACA,IAAI,IAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,UAAU,EAAE;AACnD,QAAQ,IAAI,WAAW,IAAI,UAAU,EAAE;AACvC,YAAY,aAAa,GAAG,IAAI,aAAa,CAAC,WAAW,EAAE,UAAU,CAAC;AACtE,YAAY,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC;AACvD;AACA;AACA,CAAC,CAAC;;AAEF;AACA,MAAM,cAAc,CAAC;AACrB,IAAI,WAAW,CAAC,OAAO,EAAE,MAAM,EAAE;AACjC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE;AACnC,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC;AAC3B,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE;AACxC,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI;AAC9B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B;;AAEA,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;AAC7B,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE;AAClC,YAAY,MAAM,mBAAmB,GAAG,GAAG,GAAG,IAAI,CAAC,cAAc;AACjE;AACA,YAAY,IAAI,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;AACjE,gBAAgB,IAAI,CAAC,UAAU,IAAI,mBAAmB;AACtD,aAAa,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,yBAAyB,EAAE;AAC9D;AACA,gBAAgB,IAAI,CAAC,UAAU,GAAG,CAAC;AACnC;AACA;AACA,YAAY,IAAI,CAAC,cAAc,GAAG,GAAG;AACrC;AACA;;AAEA,IAAI,GAAG,GAAG;AACV,QAAQ,IAAI,CAAC,UAAU,GAAG,KAAK;AAC/B,QAAQ,IAAI,CAAC,MAAM,EAAE;AACrB;AACA,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;AAC5C,YAAY,OAAO,IAAI,CAAC,UAAU;AAClC;AACA,QAAQ,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC;AACtF;AACA;;AAEA;AACA,eAAe,EAAE;;AAEjB;AACA,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,OAAO,KAAK;AAChE,IAAI,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,OAAO,CAAC,GAAG,CAAC;AACpD,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;AAC3C,QAAQ,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC;AACxD,QAAQ,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC;AAC5D,QAAQ,IAAI,SAAS,EAAE;AACvB,YAAY,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,SAAS,CAAC;AAC3D,YAAY,MAAM,iBAAiB,CAAC,SAAS,CAAC;AAC9C,SAAS,MAAM;AACf,YAAY,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC;AACvD;AACA;AACA,CAAC,EAAE;AACH,IAAI,GAAG,EAAE,CAAC;AACV,QAAQ,UAAU,EAAE;AACpB,KAAK;AACL,CAAC,CAAC;;AAEF;AACA,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,YAAY,KAAK;AACxE,IAAI,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,OAAO,CAAC;AAC7C;AACA,IAAI,IAAI,OAAO,CAAC,IAAI,KAAK,iBAAiB,EAAE;AAC5C,QAAQ,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,gBAAgB,CAAC;AACvE,QAAQ,YAAY,CAAC,gBAAgB,CAAC;AACtC;AACA,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK,cAAc,EAAE;AAC9C,QAAQ,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,OAAO,CAAC,MAAM,CAAC;AAC/D,QAAQ,kBAAkB,CAAC,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC;AACxD,QAAQ,OAAO,IAAI,CAAC;AACpB;AACA,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK,kBAAkB,EAAE;AAClD,QAAQ,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,IAAI,CAAC;AACzF,QAAQ,sBAAsB,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,IAAI;AACnE,aAAa,IAAI,CAAC,QAAQ,IAAI,YAAY,CAAC,QAAQ,CAAC;AACpD,aAAa,KAAK,CAAC,KAAK,IAAI,YAAY,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;AACnF,QAAQ,OAAO,IAAI,CAAC;AACpB;AACA,IAAI,OAAO,IAAI;AACf,CAAC,CAAC;;AAEF,eAAe,kBAAkB,CAAC,MAAM,EAAE,YAAY,EAAE;AACxD,IAAI,IAAI,CAAC,aAAa,EAAE;AACxB,QAAQ,YAAY,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,gCAAgC,EAAE,CAAC;AACjF,QAAQ;AACR;;AAEA,IAAI,IAAI,CAAC,gBAAgB,EAAE;AAC3B,QAAQ,YAAY,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC;AACnE,QAAQ;AACR;;AAEA,IAAI,IAAI;AACR,QAAQ,MAAM,aAAa,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,EAAE,gBAAgB,CAAC;AAC5F,QAAQ,gBAAgB,CAAC,MAAM,GAAG,MAAM;AACxC,QAAQ,YAAY,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AACvC,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,QAAQ,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC;AACtD,QAAQ,YAAY,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;AAC9D;AACA;;AAEA;AACA,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,UAAU,KAAK;AAC1D,IAAI,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC;AACvD,IAAI,eAAe,CAAC,GAAG,CAAC;AACxB,CAAC,CAAC;;AAEF,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,UAAU,EAAE,GAAG,KAAK;AAC9D,IAAI,IAAI,UAAU,CAAC,MAAM,KAAK,UAAU,EAAE;AAC1C,QAAQ,eAAe,CAAC,GAAG,CAAC;AAC5B;AACA,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,QAAQ,KAAK;AACxD,IAAI,IAAI,QAAQ,KAAK,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE;AACpD,QAAQ,iBAAiB,EAAE;AAC3B;AACA,CAAC,CAAC;;AAEF,eAAe,eAAe,CAAC,GAAG,EAAE;AACpC,IAAI,MAAM,OAAO,GAAG,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,YAAY,CAAC;AACnD,IAAI,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;AAClE;AACA,IAAI,IAAI,CAAC,OAAO,EAAE;AAClB,QAAQ,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC;AAChE,QAAQ,MAAM,iBAAiB,EAAE;AACjC,QAAQ;AACR;;AAEA;AACA,IAAI,IAAI,cAAc,EAAE;AACxB,QAAQ,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC;AACtE,QAAQ,MAAM,iBAAiB,EAAE;AACjC;;AAEA;AACA,IAAI,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC;AACvD,IAAI,gBAAgB,GAAG,MAAM,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC;AACrD,IAAI,IAAI,gBAAgB,EAAE;AAC1B,QAAQ,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,gBAAgB,CAAC,OAAO,CAAC;AAC1E,QAAQ,cAAc,GAAG,IAAI,cAAc,CAAC,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC;AACpF,QAAQ,qBAAqB,EAAE;AAC/B;AACA;;AAEA,eAAe,iBAAiB,GAAG;AACnC,IAAI,IAAI,cAAc,IAAI,gBAAgB,EAAE;AAC5C,QAAQ,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,gBAAgB,CAAC,OAAO,CAAC;AACpE,QAAQ,MAAM,QAAQ,GAAG,cAAc,CAAC,GAAG,EAAE;AAC7C,QAAQ,IAAI,QAAQ,GAAG,CAAC,EAAE;AAC1B,YAAY,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,QAAQ,CAAC;AAC1E,YAAY,MAAM,kBAAkB,CAAC,gBAAgB,EAAE,QAAQ,CAAC;AAChE;AACA,QAAQ,cAAc,GAAG,IAAI;AAC7B,QAAQ,gBAAgB,GAAG,IAAI;AAC/B,QAAQ,oBAAoB,EAAE;AAC9B;AACA;;AAEA,SAAS,qBAAqB,GAAG;AACjC,IAAI,IAAI,CAAC,gBAAgB,EAAE;AAC3B,QAAQ,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC;AACjD,QAAQ,gBAAgB,GAAG,WAAW,CAAC,MAAM;AAC7C,YAAY,IAAI,cAAc,EAAE;AAChC,gBAAgB,cAAc,CAAC,MAAM,EAAE;AACvC;AACA,SAAS,EAAE,aAAa,CAAC,sBAAsB,CAAC;AAChD;AACA;;AAEA,SAAS,oBAAoB,GAAG;AAChC,IAAI,IAAI,gBAAgB,EAAE;AAC1B,QAAQ,aAAa,CAAC,gBAAgB,CAAC;AACvC,QAAQ,gBAAgB,GAAG,IAAI;AAC/B;AAKA;;AAEA,eAAe,kBAAkB,CAAC,SAAS,EAAE,eAAe,EAAE;AAC9D,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,SAAS,EAAE;AACtC,QAAQ,OAAO,CAAC,KAAK,CAAC,mDAAmD,EAAE;AAC3E,YAAY,gBAAgB,EAAE,CAAC,CAAC,aAAa;AAC7C,YAAY,YAAY,EAAE,CAAC,CAAC;AAC5B,SAAS,CAAC;AACV,QAAQ;AACR;;AAEA,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC;AACtD,IAAI,IAAI,eAAe,GAAG,aAAa,CAAC,kBAAkB,EAAE;AAC5D,QAAQ,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,OAAO,EAAE,SAAS,CAAC;AACpE,QAAQ;AACR;;AAEA,IAAI,MAAM,WAAW,GAAG;AACxB,QAAQ,gBAAgB,EAAE,OAAO;AACjC,QAAQ,cAAc,EAAE;AACxB,YAAY,sBAAsB,EAAE,aAAa,CAAC,aAAa,GAAG,IAAI;AACtE,YAAY,oBAAoB,EAAE,aAAa,CAAC,kBAAkB,GAAG,IAAI;AACzE,YAAY,4BAA4B,EAAE,aAAa,CAAC,yBAAyB;AACjF,YAAY,uBAAuB,EAAE,aAAa,CAAC;AACnD;AACA,KAAK;;AAEL,IAAI,IAAI;AACR,QAAQ,MAAM,aAAa,CAAC,iBAAiB;AAC7C,YAAY,SAAS,CAAC,OAAO;AAC7B,YAAY,WAAW;AACvB,YAAY;AACZ,SAAS;AACT,QAAQ,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,WAAW,CAAC;AAC3D;AACA;AACA,QAAQ,MAAM,SAAS,GAAG,MAAM,aAAa,CAAC,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;AACpF,QAAQ,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,SAAS,EAAE,SAAS,CAAC;AAChE,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,QAAQ,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC;AAC9D;AACA;;AAEA;AACA,eAAe,iBAAiB,CAAC,SAAS,EAAE;AAC5C,IAAI,IAAI,CAAC,aAAa,EAAE;AACxB,QAAQ,OAAO,CAAC,KAAK,CAAC,gCAAgC,CAAC;AACvD,QAAQ;AACR;;AAEA,IAAI,IAAI;AACR,QAAQ,MAAM,aAAa,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,SAAS,CAAC;AACrF,QAAQ,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,aAAa,CAAC,OAAO,CAAC;AAC9E,QAAQ,OAAO,aAAa;AAC5B,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,QAAQ,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC;AAC9D;AACA;;AAEA;AACA,eAAe,sBAAsB,CAAC,IAAI,EAAE,IAAI,EAAE;AAClD,IAAI,IAAI,CAAC,aAAa,EAAE;AACxB,QAAQ,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;AACzD;;AAEA,IAAI,IAAI;AACR;AACA,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG;AACvC,YAAY,KAAK,EAAE,IAAI,CAAC,KAAK;AAC7B,YAAY,OAAO,EAAE,IAAI,CAAC,OAAO;AACjC,YAAY,QAAQ,EAAE,IAAI,CAAC;AAC3B,SAAS,GAAG,SAAS;;AAErB,QAAQ,IAAI,IAAI,KAAK,MAAM,EAAE;AAC7B,YAAY,MAAM,aAAa,CAAC,YAAY;AAC5C,gBAAgB,IAAI,CAAC,OAAO;AAC5B,gBAAgB,IAAI,CAAC,IAAI;AACzB,gBAAgB;AAChB,aAAa;AACb,SAAS,MAAM;AACf,YAAY,MAAM,aAAa,CAAC,aAAa;AAC7C,gBAAgB,IAAI,CAAC,OAAO;AAC5B,gBAAgB,OAAO;AACvB,gBAAgB,IAAI,CAAC,KAAK;AAC1B,gBAAgB;AAChB,aAAa;AACb;;AAEA,QAAQ,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AAChC,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,QAAQ,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC;AAC1D,QAAQ,MAAM,KAAK;AACnB;AACA;;AAEA,eAAe,YAAY,CAAC,OAAO,EAAE;AACrC,IAAI,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;AAC1C,IAAI,IAAI;AACR,QAAQ,MAAM,aAAa,GAAG,CAAC,GAAG,EAAE,IAAI,KAAK;AAC7C,YAAY,MAAM,UAAU,GAAG,4BAA4B;AAC3D,YAAY,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;AACrD;AACA,YAAY,IAAI,UAAU,EAAE;AAC5B,gBAAgB,MAAM,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC;AAClD,gBAAgB,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;AAC5E,gBAAgB,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC;AACvD,gBAAgB,OAAO,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE;AACnD;AACA,YAAY,OAAO,EAAE;AACrB,SAAS;AACT;AACA,QAAQ,MAAM,UAAU,GAAG,CAAC,IAAI,KAAK;AACrC,YAAY,MAAM,OAAO,GAAG,EAAE;AAC9B,YAAY,MAAM,KAAK,GAAG,oDAAoD;AAC9E,YAAY,IAAI,KAAK;AACrB,YAAY,OAAO,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC7C,gBAAgB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AAC7C;AACA,YAAY,OAAO,OAAO;AAC1B,SAAS;;AAET,QAAQ,MAAM,aAAa,GAAG,CAAC,IAAI,KAAK;AACxC,YAAY,MAAM,UAAU,GAAG,IAAI,GAAG,EAAE;AACxC;AACA,YAAY,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,4CAA4C,CAAC;AACzF,YAAY,IAAI,YAAY,EAAE;AAC9B,gBAAgB,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAC/C;AACA;AACA,YAAY,MAAM,aAAa,GAAG,+BAA+B;AACjE,YAAY,IAAI,KAAK;AACrB,YAAY,OAAO,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACrD,gBAAgB,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACxC;AACA;AACA,YAAY,OAAO,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;AACzC,SAAS;;AAET,QAAQ,MAAM,gBAAgB,GAAG,CAAC,IAAI,KAAK;AAC3C,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,iCAAiC,CAAC;AACvE,YAAY,OAAO,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI;AACjD,SAAS;;AAET,QAAQ,MAAM,MAAM,GAAG;AACvB,YAAY,KAAK,EAAE,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC;AAClD,YAAY,OAAO,EAAE,aAAa,CAAC,SAAS,EAAE,OAAO,CAAC;AACtD,YAAY,OAAO,EAAE,UAAU,CAAC,OAAO,CAAC;AACxC,YAAY,cAAc,EAAE,gBAAgB,CAAC,OAAO,CAAC;AACrD,YAAY,UAAU,EAAE,aAAa,CAAC,OAAO;AAC7C,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC;AAC1C,QAAQ,OAAO,MAAM;AACrB,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,QAAQ,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC;AAClD,QAAQ,OAAO,IAAI;AACnB;AACA;;AAEA,eAAe,eAAe,CAAC,GAAG,EAAE;AACpC,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC;AACvC;AACA,IAAI,MAAM,QAAQ,GAAG;AACrB,QAAQ,4BAA4B;AACpC,QAAQ,iCAAiC;AACzC,QAAQ;AACR,KAAK;AACL;AACA,IAAI,IAAI,OAAO,GAAG,IAAI;AACtB,IAAI,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;AACpC,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACxC,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;AAC9B,YAAY;AACZ;AACA;AACA;AACA,IAAI,IAAI,CAAC,OAAO,EAAE;AAClB,QAAQ,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC;AAC/C,QAAQ,OAAO,IAAI;AACnB;AACA;AACA,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,OAAO,CAAC;AAC3C;AACA,IAAI,IAAI;AACR,QAAQ,MAAM,MAAM,GAAG,CAAC,0CAA0C,EAAE,OAAO,CAAC,CAAC;AAC7E,QAAQ,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,MAAM,CAAC;AACvD;AACA,QAAQ,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC;AAC5C,QAAQ,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,QAAQ,CAAC,MAAM,CAAC;AAC5D;AACA,QAAQ,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE;AAC1C,QAAQ,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC,IAAI,CAAC;AAC/C;AACA,QAAQ,IAAI,CAAC,MAAM,EAAE;AACrB,YAAY,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC;AACvD,YAAY,OAAO,IAAI;AACvB;AACA;AACA,QAAQ,MAAM,SAAS,GAAG;AAC1B,YAAY,OAAO;AACnB,YAAY,GAAG;AACf,YAAY,KAAK,EAAE,MAAM,CAAC,KAAK;AAC/B,YAAY,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9C,YAAY,QAAQ,EAAE,MAAM,CAAC,OAAO;AACpC,YAAY,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;AAC/C,YAAY,MAAM,EAAE,QAAQ;AAC5B,YAAY,cAAc,EAAE,MAAM,CAAC,cAAc;AACjD,YAAY,UAAU,EAAE,MAAM,CAAC;AAC/B,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,SAAS,CAAC;AACvD,QAAQ,OAAO,SAAS;AACxB,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,QAAQ,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC;AAC3D,QAAQ,OAAO,IAAI;AACnB;AACA","x_google_ignoreList":[0]}