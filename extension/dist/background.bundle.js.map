{"version":3,"file":"background.bundle.js","sources":["../node_modules/gh-store-client/dist/index.mjs","../../papers/types.ts","../../utils/logger.ts","../../papers/manager.ts","../../config/session.ts","../../utils/session-tracker.ts","../../utils/popup-manager.ts","../../source-integration/source-manager.ts","../../source-integration/arxiv/xml-parser.ts","../../utils/metadata-transformer.ts","../../source-integration/arxiv/index.ts","../../background.ts"],"sourcesContent":["var d=class{constructor(e={}){this.cache=new Map,this.maxSize=e.maxSize??1e3,this.ttl=e.ttl??1e3*60*60,this.accessOrder=[]}get(e){let s=this.cache.get(e);if(s){if(Date.now()-s.lastAccessed>this.ttl){this.cache.delete(e),this.removeFromAccessOrder(e);return}return s.lastAccessed=Date.now(),this.updateAccessOrder(e),s.issueNumber}}set(e,s,t){if(this.cache.size>=this.maxSize&&!this.cache.has(e)){let r=this.accessOrder[this.accessOrder.length-1];r&&(this.cache.delete(r),this.removeFromAccessOrder(r))}this.cache.set(e,{issueNumber:s,lastAccessed:Date.now(),createdAt:t.createdAt,updatedAt:t.updatedAt}),this.updateAccessOrder(e)}remove(e){this.cache.delete(e),this.removeFromAccessOrder(e)}clear(){this.cache.clear(),this.accessOrder=[]}getStats(){return{size:this.cache.size,maxSize:this.maxSize,ttl:this.ttl}}shouldRefresh(e,s){let t=this.cache.get(e);return t?s>t.updatedAt:!0}updateAccessOrder(e){this.removeFromAccessOrder(e),this.accessOrder.unshift(e)}removeFromAccessOrder(e){let s=this.accessOrder.indexOf(e);s>-1&&this.accessOrder.splice(s,1)}};var l=\"0.3.2\";var f=class{constructor(e,s,t={}){this.token=e,this.repo=s,this.config={baseLabel:t.baseLabel??\"stored-object\",uidPrefix:t.uidPrefix??\"UID:\",reactions:{processed:t.reactions?.processed??\"+1\",initialState:t.reactions?.initialState??\"rocket\"}},this.cache=new d(t.cache)}async fetchFromGitHub(e,s={}){let t=new URL(`https://api.github.com/repos/${this.repo}${e}`);s.params&&(Object.entries(s.params).forEach(([i,a])=>{t.searchParams.append(i,a)}),delete s.params);let r=await fetch(t.toString(),{...s,headers:{Authorization:`token ${this.token}`,Accept:\"application/vnd.github.v3+json\",...s.headers}});if(!r.ok)throw new Error(`GitHub API error: ${r.status}`);return r.json()}createCommentPayload(e,s){let t={_data:e,_meta:{client_version:l,timestamp:new Date().toISOString(),update_mode:\"append\"}};return s&&(t.type=s),t}async getObject(e){let s=this.cache.get(e),t;if(s)try{t=await this.fetchFromGitHub(`/issues/${s}`),this._verifyIssueLabels(t,e)||(this.cache.remove(e),t=void 0)}catch{this.cache.remove(e)}if(!t){let c=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:[this.config.baseLabel,`${this.config.uidPrefix}${e}`].join(\",\"),state:\"closed\"}});if(!c||c.length===0)throw new Error(`No object found with ID: ${e}`);t=c[0]}if(!t?.body)throw new Error(`Invalid issue data received for ID: ${e}`);let r=JSON.parse(t.body),i=new Date(t.created_at),a=new Date(t.updated_at);return this.cache.set(e,t.number,{createdAt:i,updatedAt:a}),{meta:{objectId:e,label:`${this.config.uidPrefix}${e}`,createdAt:i,updatedAt:a,version:await this._getVersion(t.number)},data:r}}async createObject(e,s){let t=`${this.config.uidPrefix}${e}`,r=await this.fetchFromGitHub(\"/issues\",{method:\"POST\",body:JSON.stringify({title:`Stored Object: ${e}`,body:JSON.stringify(s,null,2),labels:[this.config.baseLabel,t]})});this.cache.set(e,r.number,{createdAt:new Date(r.created_at),updatedAt:new Date(r.updated_at)});let i=this.createCommentPayload(s,\"initial_state\"),a=await this.fetchFromGitHub(`/issues/${r.number}/comments`,{method:\"POST\",body:JSON.stringify({body:JSON.stringify(i,null,2)})});return await this.fetchFromGitHub(`/issues/comments/${a.id}/reactions`,{method:\"POST\",body:JSON.stringify({content:this.config.reactions.processed})}),await this.fetchFromGitHub(`/issues/comments/${a.id}/reactions`,{method:\"POST\",body:JSON.stringify({content:this.config.reactions.initialState})}),await this.fetchFromGitHub(`/issues/${r.number}`,{method:\"PATCH\",body:JSON.stringify({state:\"closed\"})}),{meta:{objectId:e,label:t,createdAt:new Date(r.created_at),updatedAt:new Date(r.updated_at),version:1},data:s}}_verifyIssueLabels(e,s){let t=new Set([this.config.baseLabel,`${this.config.uidPrefix}${s}`]);return e.labels.some(r=>t.has(r.name))}async updateObject(e,s){let t=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:[this.config.baseLabel,`${this.config.uidPrefix}${e}`].join(\",\"),state:\"all\"}});if(!t||t.length===0)throw new Error(`No object found with ID: ${e}`);let r=t[0],i=this.createCommentPayload(s);return await this.fetchFromGitHub(`/issues/${r.number}/comments`,{method:\"POST\",body:JSON.stringify({body:JSON.stringify(i,null,2)})}),await this.fetchFromGitHub(`/issues/${r.number}`,{method:\"PATCH\",body:JSON.stringify({state:\"open\"})}),this.getObject(e)}async listAll(){let e=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:this.config.baseLabel,state:\"closed\"}}),s={};for(let t of e)if(!t.labels.some(r=>r.name===\"archived\"))try{let r=this._getObjectIdFromLabels(t),i=JSON.parse(t.body),a={objectId:r,label:r,createdAt:new Date(t.created_at),updatedAt:new Date(t.updated_at),version:await this._getVersion(t.number)};s[r]={meta:a,data:i}}catch{continue}return s}async listUpdatedSince(e){let s=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:this.config.baseLabel,state:\"closed\",since:e.toISOString()}}),t={};for(let r of s)if(!r.labels.some(i=>i.name===\"archived\"))try{let i=this._getObjectIdFromLabels(r),a=JSON.parse(r.body),n=new Date(r.updated_at);if(n>e){let c={objectId:i,label:i,createdAt:new Date(r.created_at),updatedAt:n,version:await this._getVersion(r.number)};t[i]={meta:c,data:a}}}catch{continue}return t}async getObjectHistory(e){let s=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:[this.config.baseLabel,`${this.config.uidPrefix}${e}`].join(\",\"),state:\"all\"}});if(!s||s.length===0)throw new Error(`No object found with ID: ${e}`);let t=s[0],r=await this.fetchFromGitHub(`/issues/${t.number}/comments`),i=[];for(let a of r)try{let n=JSON.parse(a.body),c=\"update\",m,b={client_version:\"legacy\",timestamp:a.created_at,update_mode:\"append\"};typeof n==\"object\"?\"_data\"in n?(c=n.type||\"update\",m=n._data,b=n._meta||b):\"type\"in n&&n.type===\"initial_state\"?(c=\"initial_state\",m=n.data):m=n:m=n,i.push({timestamp:a.created_at,type:c,data:m,commentId:a.id})}catch{continue}return i}async _getVersion(e){return(await this.fetchFromGitHub(`/issues/${e}/comments`)).length+1}_getObjectIdFromLabels(e){for(let s of e.labels)if(s.name!==this.config.baseLabel&&s.name.startsWith(this.config.uidPrefix))return s.name.slice(this.config.uidPrefix.length);throw new Error(`No UID label found with prefix ${this.config.uidPrefix}`)}};var u={baseLabel:\"stored-object\",uidPrefix:\"UID:\",reactions:{processed:\"+1\",initialState:\"rocket\"},retries:{maxAttempts:3,backoffFactor:2},rateLimit:{maxRequestsPerHour:1e3}};function _(o){return{...u,...o,reactions:{...u.reactions,...o.reactions},retries:{...u.retries,...o.retries},rateLimit:{...u.rateLimit,...o.rateLimit}}}function v(o){return/^gh[ps]_[a-zA-Z0-9]{36}$/.test(o)}function P(o){return/^[\\w-]+\\/[\\w-]+$/.test(o)}var h=class extends Error{constructor(e){super(e),this.name=\"ConfigError\"}},g=class extends h{constructor(e=\"Invalid GitHub token format\"){super(e),this.name=\"TokenError\"}},p=class extends h{constructor(e=\"Invalid repository format. Use owner/repo\"){super(e),this.name=\"RepoError\"}};export{h as ConfigError,u as DEFAULT_CONFIG,f as GitHubStoreClient,p as RepoError,g as TokenError,_ as mergeConfig,P as validateRepo,v as validateToken};\n//# sourceMappingURL=index.mjs.map","// extension/papers/types.ts\n// Type definitions for paper data\n\nimport type { Json } from 'gh-store-client';\n\n/**\n * Paper metadata from any source\n */\nexport interface PaperMetadata {\n  // Source identifier\n  sourceId: string;\n  \n  // Paper identifier within the source\n  paperId: string;\n  \n  // Full URL to the paper\n  url: string;\n  \n  // Paper title\n  title: string;\n  \n  // Authors (comma-separated)\n  authors: string;\n  \n  // Abstract or summary\n  abstract: string;\n  \n  // When this paper was first added\n  timestamp: string;\n  \n  // Publication date\n  publishedDate: string;\n  \n  // Tags or categories\n  tags: string[];\n  \n  // User-assigned rating (novote, thumbsup, thumbsdown)\n  rating: string;\n  \n  // Allow additional source-specific properties\n  [key: string]: any;\n}\n\n/**\n * Reading session data\n */\nexport interface ReadingSessionData {\n  // Session identifier\n  session_id: string;\n  \n  // Active reading time in seconds\n  duration_seconds: number;\n  \n  // Idle time in seconds\n  idle_seconds: number;\n  \n  // Session start time\n  start_time: string;\n  \n  // Session end time\n  end_time: string;\n  \n  // Total elapsed time (active + idle) in seconds\n  total_elapsed_seconds: number;\n}\n\n/**\n * Interaction data\n */\nexport interface Interaction {\n  // Type of interaction (reading_session, annotation, rating)\n  type: string;\n  \n  // When interaction occurred\n  timestamp: string;\n  \n  // Additional data\n  data: Json;\n}\n\n/**\n * Interaction log\n */\nexport interface InteractionLog {\n  // Source identifier\n  sourceId: string;\n  \n  // Paper identifier within the source\n  paperId: string;\n  \n  // List of interactions\n  interactions: Interaction[];\n\n  // Index signature to make it compatible with Json type\n  [key: string]: string | Interaction[] | any;\n}\n\n/**\n * Type guard for interaction log\n */\nexport function isInteractionLog(data: unknown): data is InteractionLog {\n  const log = data as InteractionLog;\n  return (\n    typeof log === 'object' &&\n    log !== null &&\n    typeof log.sourceId === 'string' &&\n    typeof log.paperId === 'string' &&\n    Array.isArray(log.interactions)\n  );\n}\n","// utils/logger.ts\n// Logging utility wrapping loguru\n\n/**\n * Logger class for consistent logging throughout the extension\n */\nexport class Logger {\n  constructor(private module: string) {}\n  \n  /**\n   * Log debug message\n   */\n  debug(message: string, data?: any): void {\n    console.debug(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n  \n  /**\n   * Log info message\n   */\n  info(message: string, data?: any): void {\n    console.info(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n  \n  /**\n   * Log warning message\n   */\n  warning(message: string, data?: any): void {\n    console.warn(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n  \n  /**\n   * Log error message\n   */\n  error(message: string, data?: any): void {\n    console.error(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n}\n\n/**\n * Loguru mock for browser extension use\n */\nclass LoguruMock {\n  /**\n   * Get logger for a module\n   */\n  getLogger(module: string): Logger {\n    return new Logger(module);\n  }\n}\n\n// Export singleton instance\nexport const loguru = new LoguruMock();\n","// extension/papers/manager.ts\nimport { GitHubStoreClient } from 'gh-store-client';\nimport type { Json } from 'gh-store-client';\nimport { \n  type PaperMetadata, \n  type InteractionLog, \n  type Interaction,\n  type ReadingSessionData,\n  isInteractionLog\n} from './types';\nimport { loguru } from '../utils/logger';\n\nconst logger = loguru.getLogger('paper-manager');\n\nexport class PaperManager {\n  constructor(private client: GitHubStoreClient) {\n    logger.debug('Paper manager initialized');\n  }\n  \n  /**\n   * Get paper by source and ID\n   */\n  async getPaper(sourceId: string, paperId: string): Promise<PaperMetadata | null> {\n    const objectId = `paper:${sourceId}:${paperId}`;\n    \n    try {\n      const obj = await this.client.getObject(objectId);\n      return obj.data as PaperMetadata;\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('No object found')) {\n        return null;\n      }\n      throw error;\n    }\n  }\n  \n  /**\n   * Get or create paper metadata\n   */\n  async getOrCreatePaper(paperData: PaperMetadata): Promise<PaperMetadata> {\n    const { sourceId, paperId } = paperData;\n    const objectId = `paper:${sourceId}:${paperId}`;\n    \n    try {\n      const obj = await this.client.getObject(objectId);\n      const data = obj.data as PaperMetadata;\n      logger.debug(`Retrieved existing paper: ${sourceId}:${paperId}`);\n      return data;\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('No object found')) {\n        // Create new paper\n        const defaultPaperData: PaperMetadata = {\n          ...paperData,\n          timestamp: new Date().toISOString(),\n          rating: paperData.rating || 'novote'\n        };\n\n        await this.client.createObject(objectId, defaultPaperData);\n        logger.debug(`Created new paper: ${sourceId}:${paperId}`);\n        return defaultPaperData;\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Get or create interaction log for a paper\n   */\n  private async getOrCreateInteractionLog(sourceId: string, paperId: string): Promise<InteractionLog> {\n    const objectId = `interactions:${sourceId}:${paperId}`;\n    try {\n      const obj = await this.client.getObject(objectId);\n      const data = obj.data as unknown;\n      if (isInteractionLog(data)) {\n        return data;\n      }\n      throw new Error('Invalid interaction log format');\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('No object found')) {\n        const newLog: InteractionLog = {\n          sourceId,\n          paperId,\n          interactions: []\n        };\n        await this.client.createObject(objectId, newLog as unknown as { [key: string]: Json });\n        logger.debug(`Created new interaction log: ${sourceId}:${paperId}`);\n        return newLog;\n      }\n      throw error;\n    }\n  }\n  \n  /**\n   * Get GitHub client instance\n   */\n  getClient(): GitHubStoreClient {\n    return this.client;\n  }\n  \n  /**\n   * Log a reading session\n   */\n  async logReadingSession(\n    sourceId: string,\n    paperId: string,\n    session: ReadingSessionData,\n    paperData?: Partial<PaperMetadata>\n  ): Promise<void> {\n    // Ensure paper exists\n    if (paperData) {\n      await this.getOrCreatePaper({\n        sourceId,\n        paperId,\n        url: paperData.url || `${sourceId}:${paperId}`,\n        title: paperData.title || paperId,\n        authors: paperData.authors || '',\n        abstract: paperData.abstract || '',\n        timestamp: new Date().toISOString(),\n        rating: 'novote',\n        publishedDate: paperData.publishedDate || '',\n        tags: paperData.tags || []\n      });\n    }\n\n    // Log the session as an interaction\n    await this.addInteraction(sourceId, paperId, {\n      type: 'reading_session',\n      timestamp: new Date().toISOString(),\n      data: session as unknown as { [key: string]: Json }\n    });\n    \n    logger.info(`Logged reading session for ${sourceId}:${paperId}`, { duration: session.duration_seconds });\n  }\n\n  /**\n   * Log an annotation\n   */\n  async logAnnotation(\n    sourceId: string,\n    paperId: string,\n    key: string,\n    value: Json,\n    paperData?: Partial<PaperMetadata>\n  ): Promise<void> {\n    // Ensure paper exists\n    if (paperData) {\n      await this.getOrCreatePaper({\n        sourceId,\n        paperId,\n        url: paperData.url || `${sourceId}:${paperId}`,\n        title: paperData.title || paperId,\n        authors: paperData.authors || '',\n        abstract: paperData.abstract || '',\n        timestamp: new Date().toISOString(),\n        rating: 'novote',\n        publishedDate: paperData.publishedDate || '',\n        tags: paperData.tags || []\n      });\n    }\n\n    // Log the annotation as an interaction\n    await this.addInteraction(sourceId, paperId, {\n      type: 'annotation',\n      timestamp: new Date().toISOString(),\n      data: { key, value }\n    });\n    \n    logger.info(`Logged annotation for ${sourceId}:${paperId}`, { key });\n  }\n\n  /**\n   * Update paper rating\n   */\n  async updateRating(\n    sourceId: string,\n    paperId: string,\n    rating: string,\n    paperData?: Partial<PaperMetadata>\n  ): Promise<void> {\n    // Ensure paper exists and get current data\n    const paper = await this.getOrCreatePaper({\n      sourceId,\n      paperId,\n      url: paperData?.url || `${sourceId}:${paperId}`,\n      title: paperData?.title || paperId,\n      authors: paperData?.authors || '',\n      abstract: paperData?.abstract || '',\n      timestamp: new Date().toISOString(),\n      rating: 'novote',\n      publishedDate: paperData?.publishedDate || '',\n      tags: paperData?.tags || []\n    });\n\n    // Update paper metadata with new rating\n    await this.client.updateObject(`paper:${sourceId}:${paperId}`, { \n      ...paper,\n      rating \n    });\n\n    // Log rating change as an interaction\n    await this.addInteraction(sourceId, paperId, {\n      type: 'rating',\n      timestamp: new Date().toISOString(),\n      data: { rating }\n    });\n    \n    logger.info(`Updated rating for ${sourceId}:${paperId} to ${rating}`);\n  }\n\n  /**\n   * Add interaction to log\n   */\n  private async addInteraction(sourceId: string, paperId: string, interaction: Interaction): Promise<void> {\n    const log = await this.getOrCreateInteractionLog(sourceId, paperId);\n    log.interactions.push(interaction);\n    await this.client.updateObject(`interactions:${sourceId}:${paperId}`, log as unknown as { [key: string]: Json });\n  }\n\n  /**\n   * Get interactions for a paper\n   */\n  async getInteractions(\n    sourceId: string,\n    paperId: string,\n    options: {\n      type?: string;\n      startTime?: Date;\n      endTime?: Date;\n    } = {}\n  ): Promise<Interaction[]> {\n    try {\n      const log = await this.getOrCreateInteractionLog(sourceId, paperId);\n      let interactions = log.interactions;\n\n      if (options.type) {\n        interactions = interactions.filter((i: Interaction) => i.type === options.type);\n      }\n\n      if (options.startTime || options.endTime) {\n        interactions = interactions.filter((i: Interaction) => {\n          const time = new Date(i.timestamp);\n          if (options.startTime && time < options.startTime) return false;\n          if (options.endTime && time > options.endTime) return false;\n          return true;\n        });\n      }\n\n      return interactions;\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('No object found')) {\n        return [];\n      }\n      throw error;\n    }\n  }\n    \n  /**\n   * Calculate total reading time for a paper\n   */\n  async getPaperReadingTime(sourceId: string, paperId: string): Promise<number> {\n    const interactions = await this.getInteractions(sourceId, paperId, { type: 'reading_session' });\n    return interactions.reduce((total, i) => {\n      const data = i.data;\n      if (typeof data === 'object' && data !== null && 'duration_seconds' in data) {\n        return total + (data.duration_seconds as number);\n      }\n      return total;\n    }, 0);\n  }\n\n  /**\n   * Get history of paper changes\n   */\n  async getPaperHistory(sourceId: string, paperId: string): Promise<Json[]> {\n    const objectId = `paper:${sourceId}:${paperId}`;\n    return this.client.getObjectHistory(objectId);\n  }\n}\n","// config/session.ts\n// Session configuration management\n\nimport { RawSessionConfig, SessionConfig } from './types';\nimport { loguru } from '../utils/logger';\n\nconst logger = loguru.getLogger('session-config');\n\n// Default configuration values\nexport const DEFAULT_CONFIG: RawSessionConfig = {\n    idleThresholdMinutes: 5,\n    minSessionDurationSeconds: 30,\n    requireContinuousActivity: true,  // If true, resets timer on idle\n    logPartialSessions: false,        // If true, logs sessions even if under minimum duration\n    activityUpdateIntervalSeconds: 1  // How often to update active time\n};\n\n/**\n * Load session configuration from storage\n */\nexport async function loadSessionConfig(): Promise<RawSessionConfig> {\n    try {\n        const items = await chrome.storage.sync.get('sessionConfig');\n        const config = { ...DEFAULT_CONFIG, ...items.sessionConfig };\n        logger.debug('Loaded session config', config);\n        return config;\n    } catch (error) {\n        logger.error('Error loading session config', error);\n        return DEFAULT_CONFIG;\n    }\n}\n\n/**\n * Save session configuration to storage\n */\nexport async function saveSessionConfig(config: RawSessionConfig): Promise<void> {\n    try {\n        // Ensure values are the correct type\n        const sanitizedConfig: RawSessionConfig = {\n            idleThresholdMinutes: Number(config.idleThresholdMinutes),\n            minSessionDurationSeconds: Number(config.minSessionDurationSeconds),\n            requireContinuousActivity: Boolean(config.requireContinuousActivity),\n            logPartialSessions: Boolean(config.logPartialSessions),\n            activityUpdateIntervalSeconds: Number(config.activityUpdateIntervalSeconds)\n        };\n        \n        await chrome.storage.sync.set({ sessionConfig: sanitizedConfig });\n        logger.debug('Saved session config', sanitizedConfig);\n    } catch (error) {\n        logger.error('Error saving session config', error);\n        throw error;\n    }\n}\n\n/**\n * Convert configuration to milliseconds for internal use\n */\nexport function getConfigurationInMs(config: RawSessionConfig): SessionConfig {\n    return {\n        idleThreshold: config.idleThresholdMinutes * 60 * 1000,\n        minSessionDuration: config.minSessionDurationSeconds * 1000,\n        activityUpdateInterval: config.activityUpdateIntervalSeconds * 1000,\n        requireContinuousActivity: config.requireContinuousActivity,\n        logPartialSessions: config.logPartialSessions\n    };\n}\n","// utils/session-tracker.ts\n// Reading session tracking\n\nimport { ReadingSessionData } from '../papers/types';\nimport { loguru } from './logger';\n\nconst logger = loguru.getLogger('session-tracker');\n\nexport interface SessionConfig {\n  // Threshold for idle time in milliseconds\n  idleThreshold: number;\n  \n  // Minimum session duration to be considered valid, in milliseconds\n  minSessionDuration: number;\n  \n  // How often to update active time in milliseconds\n  activityUpdateInterval: number;\n  \n  // Whether to require continuous activity (reset timer on idle)\n  requireContinuousActivity: boolean;\n  \n  // Whether to log sessions shorter than minimum duration\n  logPartialSessions: boolean;\n}\n\nexport class SessionTracker {\n  private activeSession: ReadingSession | null = null;\n  private updateInterval: number | null = null;\n  private currentPaperId: string | null = null;\n  private currentSourceId: string | null = null;\n  \n  constructor(private config: SessionConfig) {\n    logger.debug('Session tracker initialized', config);\n  }\n  \n  /**\n   * Start tracking a new session\n   */\n  startSession(sourceId: string, paperId: string): void {\n    // End any existing session first\n    this.endSession();\n    \n    // Create new session\n    this.activeSession = new ReadingSession(sourceId, paperId, this.config);\n    this.currentSourceId = sourceId;\n    this.currentPaperId = paperId;\n    \n    // Start update interval\n    this.startUpdateInterval();\n    \n    logger.info(`Started tracking session for ${sourceId}:${paperId}`, \n      this.activeSession.getMetadata());\n  }\n  \n  /**\n   * End the current session and get the data\n   */\n  endSession(): ReadingSessionData | null {\n    if (!this.activeSession) {\n      return null;\n    }\n    \n    // Stop the update interval\n    this.stopUpdateInterval();\n    \n    // Finalize the session\n    const sessionData = this.activeSession.finalize();\n    \n    logger.info(`Ended session for ${this.currentSourceId}:${this.currentPaperId}`,\n      sessionData ? {\n        duration: sessionData.duration_seconds,\n        idle: sessionData.idle_seconds\n      } : 'Session too short');\n    \n    // Clear current session\n    this.activeSession = null;\n    this.currentSourceId = null;\n    this.currentPaperId = null;\n    \n    return sessionData;\n  }\n  \n  /**\n   * Get the current session's metadata\n   */\n  getCurrentSessionMetadata(): any | null {\n    return this.activeSession?.getMetadata() || null;\n  }\n  \n  /**\n   * Get current paper and source IDs\n   */\n  getCurrentPaper(): { sourceId: string | null, paperId: string | null } {\n    return {\n      sourceId: this.currentSourceId,\n      paperId: this.currentPaperId\n    };\n  }\n  \n  /**\n   * Start the activity update interval\n   */\n  private startUpdateInterval(): void {\n    if (this.updateInterval !== null) {\n      clearInterval(this.updateInterval);\n    }\n    \n    this.updateInterval = window.setInterval(() => {\n      this.activeSession?.update();\n    }, this.config.activityUpdateInterval);\n  }\n  \n  /**\n   * Stop the activity update interval\n   */\n  private stopUpdateInterval(): void {\n    if (this.updateInterval !== null) {\n      clearInterval(this.updateInterval);\n      this.updateInterval = null;\n    }\n  }\n}\n\nclass ReadingSession {\n  // Session ID\n  readonly sessionId: string;\n  \n  // Timestamps\n  private startTime: Date;\n  private lastActiveTime: Date;\n  private endTime: Date | null = null;\n  \n  // Time tracking\n  private activeTime: number = 0;\n  private idleTime: number = 0;\n  \n  // State\n  private isTracking: boolean = true;\n  private finalizedData: ReadingSessionData | null = null;\n  \n  constructor(\n    public sourceId: string,\n    public paperId: string,\n    private config: SessionConfig\n  ) {\n    this.sessionId = `session_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n    this.startTime = new Date();\n    this.lastActiveTime = new Date();\n  }\n  \n  /**\n   * Update the session's active and idle time\n   */\n  update(): void {\n    if (!this.isTracking || this.finalizedData) {\n      return;\n    }\n    \n    const now = new Date();\n    const timeSinceLastActive = now.getTime() - this.lastActiveTime.getTime();\n    \n    if (timeSinceLastActive < this.config.idleThreshold) {\n      // User is active\n      this.activeTime += timeSinceLastActive;\n    } else {\n      // User is idle\n      this.idleTime += timeSinceLastActive;\n    }\n    \n    this.lastActiveTime = now;\n  }\n  \n  /**\n   * Finalize the session and get the data\n   */\n  finalize(): ReadingSessionData | null {\n    if (this.finalizedData) {\n      return this.finalizedData;\n    }\n    \n    // Update one last time\n    this.update();\n    \n    // Stop tracking\n    this.isTracking = false;\n    this.endTime = new Date();\n    \n    // Calculate total elapsed time\n    const totalElapsed = this.endTime.getTime() - this.startTime.getTime();\n    \n    // Check if session is long enough\n    if (this.activeTime >= this.config.minSessionDuration || this.config.logPartialSessions) {\n      this.finalizedData = {\n        session_id: this.sessionId,\n        duration_seconds: Math.round(this.activeTime / 1000),\n        idle_seconds: Math.round(this.idleTime / 1000),\n        start_time: this.startTime.toISOString(),\n        end_time: this.endTime.toISOString(),\n        total_elapsed_seconds: Math.round(totalElapsed / 1000)\n      };\n      \n      return this.finalizedData;\n    }\n    \n    return null;\n  }\n  \n  /**\n   * Get session metadata (for debugging/display)\n   */\n  getMetadata(): any {\n    return {\n      sessionId: this.sessionId,\n      sourceId: this.sourceId,\n      paperId: this.paperId,\n      startTime: this.startTime.toISOString(),\n      activeSeconds: Math.round(this.activeTime / 1000),\n      idleSeconds: Math.round(this.idleTime / 1000),\n      isTracking: this.isTracking\n    };\n  }\n}\n","// extension/utils/popup-manager.ts\n// Popup management system integrated with source manager\n\nimport { SourceManager } from '../source-integration/types';\nimport { PaperManager } from '../papers/manager';\nimport { loguru } from './logger';\n\nconst logger = loguru.getLogger('popup-manager');\n\n/**\n * Popup handler information\n */\ninterface PopupHandler {\n  selector: string;\n  event: string;\n  action: string;\n}\n\n/**\n * Popup message type\n */\ninterface ShowPopupMessage {\n  type: 'showPopup';\n  sourceId: string;\n  paperId: string;\n  html: string;\n  handlers: PopupHandler[];\n  position?: { x: number, y: number };\n}\n\n/**\n * Manages all popup-related functionality\n */\nexport class PopupManager {\n  // Source manager and paper manager\n  private sourceManagerProvider: () => SourceManager | null;\n  private paperManagerProvider: () => PaperManager | null;\n  \n  /**\n   * Create a new popup manager\n   */\n  constructor(\n    sourceManagerProvider: () => SourceManager | null,\n    paperManagerProvider: () => PaperManager | null\n  ) {\n    this.sourceManagerProvider = sourceManagerProvider;\n    this.paperManagerProvider = paperManagerProvider;\n    \n    this.setupMessageListeners();\n    logger.debug('Popup manager initialized');\n  }\n  \n  /**\n   * Set up message listeners for popup-related messages\n   */\n  private setupMessageListeners(): void {\n    chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n      // Handle popup actions (ratings, notes, etc.)\n      if (message.type === 'popupAction') {\n        this.handlePopupAction(\n          message.sourceId,\n          message.paperId,\n          message.action,\n          message.data\n        ).then(() => {\n          sendResponse({ success: true });\n        }).catch(error => {\n          logger.error('Error handling popup action', error);\n          sendResponse({ \n            success: false, \n            error: error instanceof Error ? error.message : 'Unknown error' \n          });\n        });\n        \n        return true; // Will respond asynchronously\n      }\n      \n      // Handle request to show annotation popup\n      if (message.type === 'showAnnotationPopup' && sender.tab?.id) {\n        this.handleShowAnnotationPopup(\n          sender.tab.id,\n          message.sourceId,\n          message.paperId,\n          message.position\n        ).then(() => {\n          sendResponse({ success: true });\n        }).catch(error => {\n          logger.error('Error showing popup', error);\n          sendResponse({ \n            success: false, \n            error: error instanceof Error ? error.message : 'Unknown error'\n          });\n        });\n        \n        return true; // Will respond asynchronously\n      }\n      \n      return false; // Not handled\n    });\n  }\n  \n  /**\n   * Handle a request to show an annotation popup\n   */\n  private async handleShowAnnotationPopup(\n    tabId: number,\n    sourceId: string,\n    paperId: string,\n    position: { x: number, y: number }\n  ): Promise<void> {\n    logger.debug(`Showing annotation popup for ${sourceId}:${paperId}`);\n    \n    // Check if we have source and paper manager\n    const sourceManager = this.sourceManagerProvider();\n    const paperManager = this.paperManagerProvider();\n    \n    if (!sourceManager) {\n      throw new Error('Source manager not initialized');\n    }\n    \n    if (!paperManager) {\n      throw new Error('Paper manager not initialized');\n    }\n    \n    try {\n      // Get paper data\n      const paper = await paperManager.getPaper(sourceId, paperId);\n      \n      // Create popup HTML\n      const html = this.createPopupHtml(paper || { \n        sourceId, \n        paperId,\n        title: paperId,\n        authors: '',\n        abstract: '',\n        url: '',\n        timestamp: new Date().toISOString(),\n        publishedDate: '',\n        tags: [],\n        rating: 'novote'\n      });\n      \n      // Get handlers\n      const handlers = this.getStandardPopupHandlers();\n      \n      // Send message to content script to show popup\n      const message: ShowPopupMessage = {\n        type: 'showPopup',\n        sourceId,\n        paperId,\n        html,\n        handlers,\n        position\n      };\n      \n      await chrome.tabs.sendMessage(tabId, message);\n      \n      logger.debug(`Sent popup to content script for ${sourceId}:${paperId}`);\n    } catch (error) {\n      logger.error(`Error showing popup for ${sourceId}:${paperId}`, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Handle popup actions (ratings, notes, etc.)\n   */\n  private async handlePopupAction(\n    sourceId: string,\n    paperId: string,\n    action: string,\n    data: any\n  ): Promise<void> {\n    const paperManager = this.paperManagerProvider();\n    \n    if (!paperManager) {\n      throw new Error('Paper manager not initialized');\n    }\n    \n    logger.debug(`Handling popup action: ${action}`, { sourceId, paperId });\n    \n    try {\n      if (action === 'rate') {\n        await paperManager.updateRating(sourceId, paperId, data.value);\n        logger.info(`Updated rating for ${sourceId}:${paperId} to ${data.value}`);\n      } \n      else if (action === 'saveNotes') {\n        if (data.value) {\n          await paperManager.logAnnotation(sourceId, paperId, 'notes', data.value);\n          logger.info(`Saved notes for ${sourceId}:${paperId}`);\n        }\n      }\n    } catch (error) {\n      logger.error(`Error handling action ${action} for ${sourceId}:${paperId}`, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Create HTML for paper popup\n   */\n  private createPopupHtml(paper: any): string {\n    return `\n      <div class=\"paper-popup-header\">${paper.title || paper.paperId}</div>\n      <div class=\"paper-popup-meta\">${paper.authors || ''}</div>\n      \n      <div class=\"paper-popup-buttons\">\n        <button class=\"vote-button\" data-vote=\"thumbsup\" id=\"btn-thumbsup\" ${paper.rating === 'thumbsup' ? 'class=\"active\"' : ''}>👍 Interesting</button>\n        <button class=\"vote-button\" data-vote=\"thumbsdown\" id=\"btn-thumbsdown\" ${paper.rating === 'thumbsdown' ? 'class=\"active\"' : ''}>👎 Not Relevant</button>\n      </div>\n      \n      <textarea placeholder=\"Add notes about this paper...\" id=\"paper-notes\"></textarea>\n      \n      <div class=\"paper-popup-actions\">\n        <button class=\"save-button\" id=\"btn-save\">Save</button>\n      </div>\n    `;\n  }\n  \n  /**\n   * Get standard popup event handlers\n   */\n  private getStandardPopupHandlers(): PopupHandler[] {\n    return [\n      { selector: '#btn-thumbsup', event: 'click', action: 'rate' },\n      { selector: '#btn-thumbsdown', event: 'click', action: 'rate' },\n      { selector: '#btn-save', event: 'click', action: 'saveNotes' }\n    ];\n  }\n}\n","// source-integration/source-manager.ts\n// Manager for source integrations\n\nimport { SourceIntegration, SourceManager } from './types';\nimport { loguru } from '../utils/logger';\n\nconst logger = loguru.getLogger('source-manager');\n\n/**\n * Manages source integrations\n */\nexport class SourceIntegrationManager implements SourceManager {\n  private sources: Map<string, SourceIntegration> = new Map();\n  \n  constructor() {\n    logger.info('Source integration manager initialized');\n  }\n  \n  /**\n   * Register a source integration\n   */\n  registerSource(source: SourceIntegration): void {\n    if (this.sources.has(source.id)) {\n      logger.warning(`Source with ID '${source.id}' already registered, overwriting`);\n    }\n    \n    this.sources.set(source.id, source);\n    logger.info(`Registered source: ${source.name} (${source.id})`);\n  }\n  \n  /**\n   * Get all registered sources\n   */\n  getAllSources(): SourceIntegration[] {\n    return Array.from(this.sources.values());\n  }\n  \n  /**\n   * Get source that can handle a URL\n   */\n  getSourceForUrl(url: string): SourceIntegration | null {\n    for (const source of this.sources.values()) {\n      if (source.canHandleUrl(url)) {\n        logger.debug(`Found source for URL '${url}': ${source.id}`);\n        return source;\n      }\n    }\n    \n    logger.debug(`No source found for URL: ${url}`);\n    return null;\n  }\n  \n  /**\n   * Extract paper ID from URL using appropriate source\n   */\n  extractPaperId(url: string): { sourceId: string, paperId: string } | null {\n    for (const source of this.sources.values()) {\n      if (source.canHandleUrl(url)) {\n        const paperId = source.extractPaperId(url);\n        if (paperId) {\n          logger.debug(`Extracted paper ID '${paperId}' from URL using ${source.id}`);\n          return { sourceId: source.id, paperId };\n        }\n      }\n    }\n    \n    logger.debug(`Could not extract paper ID from URL: ${url}`);\n    return null;\n  }\n  \n  /**\n   * Get all content script match patterns\n   */\n  getAllContentScriptMatches(): string[] {\n    const patterns: string[] = [];\n    \n    for (const source of this.sources.values()) {\n      patterns.push(...source.contentScriptMatches);\n    }\n    \n    return patterns;\n  }\n}\n","// source-integration/arxiv/xml-parser.ts\n// ArXiv API XML response parser - simplified for use with metadata transformer\n\nimport { loguru } from '../../utils/logger';\n\nconst logger = loguru.getLogger('arxiv-xml-parser');\n\nexport interface ArXivParsedData {\n  title: string;\n  summary: string;\n  authors: string[];\n  published_date: string;\n  arxiv_tags: string[];\n  [key: string]: any; // Add index signature to satisfy Json type requirements\n}\n\n/**\n * Parse ArXiv API XML response into a structured object\n */\nexport async function parseXMLText(xmlText: string): Promise<ArXivParsedData | null> {\n  logger.debug('Parsing ArXiv XML response');\n  \n  try {\n    // Parse XML to DOM\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlText, \"text/xml\");\n    \n    // Check for parse errors\n    const parseError = xmlDoc.querySelector('parsererror');\n    if (parseError) {\n      throw new Error('XML parsing error: ' + parseError.textContent);\n    }\n    \n    // Get entry element\n    const entry = xmlDoc.querySelector('entry');\n    if (!entry) {\n      throw new Error('No entry element found in XML');\n    }\n    \n    // Extract basic fields\n    const title = entry.querySelector('title')?.textContent?.trim() || '';\n    const summary = entry.querySelector('summary')?.textContent?.trim() || '';\n    const published = entry.querySelector('published')?.textContent?.trim() || '';\n    \n    // Extract authors\n    const authors = Array.from(entry.querySelectorAll('author name'))\n      .map(name => name.textContent?.trim() || '');\n    \n    // Extract categories/tags\n    const categories = new Set<string>();\n    \n    // Primary category\n    const primaryCategory = entry.querySelector('arxiv\\\\:primary_category, primary_category');\n    if (primaryCategory && primaryCategory.hasAttribute('term')) {\n      categories.add(primaryCategory.getAttribute('term') || '');\n    }\n    \n    // Other categories\n    const categoryElements = entry.querySelectorAll('category');\n    categoryElements.forEach(cat => {\n      if (cat.hasAttribute('term')) {\n        categories.add(cat.getAttribute('term') || '');\n      }\n    });\n    \n    const result: ArXivParsedData = {\n      title,\n      summary,\n      authors,\n      published_date: published,\n      arxiv_tags: Array.from(categories)\n    };\n    \n    logger.debug('XML parsing completed successfully');\n    return result;\n  } catch (error) {\n    logger.error('Error parsing ArXiv XML', error);\n    return null;\n  }\n}\n","// extension/utils/metadata-transformer.ts\n// Generic metadata transformation utilities\n\nimport { PaperMetadata } from '../papers/types';\nimport { loguru } from './logger';\n\nconst logger = loguru.getLogger('metadata-transformer');\n\n/**\n * Interface for source-specific metadata mapping\n */\nexport interface MetadataMapping {\n  // Maps source-specific fields to standard metadata\n  titleField: string | string[];\n  authorsField: string | string[];\n  abstractField: string | string[];\n  dateField: string | string[];\n  tagsField: string | string[];\n  \n  // Optional custom extraction functions\n  extractAuthors?: (data: any) => string;\n  extractTags?: (data: any) => string[];\n  extractDate?: (data: any) => string;\n}\n\n/**\n * Transform source-specific API response to standard metadata\n */\nexport function transformMetadata(\n  sourceId: string,\n  paperId: string,\n  apiData: any,\n  mapping: MetadataMapping,\n  sourceUrl: string\n): PaperMetadata {\n  // Extract fields using provided mapping\n  const getField = (data: any, fieldPath: string | string[]): any => {\n    if (Array.isArray(fieldPath)) {\n      // Try multiple possible field paths\n      for (const path of fieldPath) {\n        const value = getField(data, path);\n        if (value !== undefined && value !== null && value !== '') {\n          return value;\n        }\n      }\n      return '';\n    }\n    \n    // Handle nested paths like \"document.title\"\n    const parts = fieldPath.split('.');\n    let value = data;\n    \n    for (const part of parts) {\n      if (value === undefined || value === null) return '';\n      value = value[part];\n    }\n    \n    return value !== undefined && value !== null ? value : '';\n  };\n  \n  // Extract title\n  const title = getField(apiData, mapping.titleField);\n  \n  // Extract authors - either use custom function or default extraction\n  const authors = mapping.extractAuthors \n    ? mapping.extractAuthors(apiData)\n    : Array.isArray(getField(apiData, mapping.authorsField))\n      ? getField(apiData, mapping.authorsField).join(', ')\n      : getField(apiData, mapping.authorsField);\n  \n  // Extract abstract\n  const abstract = getField(apiData, mapping.abstractField);\n  \n  // Extract published date\n  const publishedDate = mapping.extractDate\n    ? mapping.extractDate(apiData)\n    : getField(apiData, mapping.dateField);\n  \n  // Extract tags\n  const tags = mapping.extractTags\n    ? mapping.extractTags(apiData)\n    : Array.isArray(getField(apiData, mapping.tagsField))\n      ? getField(apiData, mapping.tagsField)\n      : [];\n  \n  const metadata: PaperMetadata = {\n    sourceId,\n    paperId,\n    url: sourceUrl,\n    title,\n    authors,\n    abstract,\n    timestamp: new Date().toISOString(),\n    rating: 'novote',\n    publishedDate,\n    tags\n  };\n  \n  logger.debug('Transformed metadata', { sourceId, paperId });\n  return metadata;\n}\n","// source-integration/arxiv/index.ts\n// ArXiv integration using metadata transformer\n\nimport { SourceIntegration } from '../types';\nimport { PaperMetadata } from '../../papers/types';\nimport { parseXMLText } from './xml-parser';\nimport { transformMetadata, MetadataMapping } from '../../utils/metadata-transformer';\nimport { loguru } from '../../utils/logger';\n\nconst logger = loguru.getLogger('arxiv-integration');\n\nexport class ArXivIntegration implements SourceIntegration {\n  readonly id = 'arxiv';\n  readonly name = 'arXiv.org';\n  \n  // URL patterns for papers\n  readonly urlPatterns = [\n    /arxiv\\.org\\/(abs|pdf|html)\\/([0-9.]+)/,\n    /arxiv\\.org\\/\\w+\\/([0-9.]+)/\n  ];\n  \n  // Content script matches\n  readonly contentScriptMatches = [\n    \"*://*.arxiv.org/*\"\n  ];\n  \n  // Metadata mapping for ArXiv\n  private readonly METADATA_MAPPING: MetadataMapping = {\n    titleField: 'title',\n    authorsField: 'authors',\n    abstractField: 'summary',\n    dateField: 'published_date',\n    tagsField: 'arxiv_tags',\n    \n    // Custom author extraction (since authors is an array)\n    extractAuthors: (data) => {\n      if (Array.isArray(data.authors)) {\n        return data.authors.join(', ');\n      }\n      return data.authors || '';\n    }\n  };\n\n  /**\n   * Check if this integration can handle the given URL\n   */\n  canHandleUrl(url: string): boolean {\n    return this.urlPatterns.some(pattern => pattern.test(url));\n  }\n\n  /**\n   * Extract paper ID from URL\n   */\n  extractPaperId(url: string): string | null {\n    for (const pattern of this.urlPatterns) {\n      const match = url.match(pattern);\n      if (match) {\n        return match[2] || match[1]; // The capture group with the paper ID\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Extract metadata from page or fetch from API\n   */\n  async extractMetadata(document: Document, paperId: string): Promise<PaperMetadata | null> {\n    logger.info(`Extracting metadata for arXiv ID: ${paperId}`);\n    \n    // Try to extract from page first\n    const pageMetadata = this.extractFromPage(document, paperId);\n    if (pageMetadata) {\n      logger.debug('Extracted metadata from page');\n      return pageMetadata;\n    }\n    \n    // If page extraction fails, fetch from API\n    logger.debug('Falling back to API for metadata');\n    return this.fetchFromApi(paperId);\n  }\n  \n  /**\n   * Extract metadata from ArXiv page\n   */\n  private extractFromPage(document: Document, paperId: string): PaperMetadata | null {\n    try {\n      // Extract title\n      const titleElement = document.querySelector('.title');\n      if (!titleElement) return null;\n      \n      const title = titleElement.textContent?.replace('Title:', '').trim() || '';\n      \n      // Extract authors\n      const authorsElement = document.querySelector('.authors');\n      const authors = authorsElement?.textContent?.replace('Authors:', '').trim() || '';\n      \n      // Extract abstract\n      const abstractElement = document.querySelector('.abstract');\n      const abstract = abstractElement?.textContent?.replace('Abstract:', '').trim() || '';\n      \n      // Extract categories\n      const categoriesElement = document.querySelector('.subjects');\n      const categoriesText = categoriesElement?.textContent?.replace('Subjects:', '').trim() || '';\n      const tags = categoriesText.split(';').map(tag => tag.trim());\n      \n      // Extract publication date\n      const dateElement = document.querySelector('.dateline');\n      const publishedDate = dateElement?.textContent?.trim() || '';\n      \n      // Create metadata object\n      return {\n        sourceId: this.id,\n        paperId,\n        url: window.location.href,\n        title,\n        authors,\n        abstract,\n        timestamp: new Date().toISOString(),\n        rating: 'novote',\n        publishedDate,\n        tags\n      };\n    } catch (error) {\n      logger.error('Error extracting from page:', error);\n      return null;\n    }\n  }\n  \n  /**\n   * Fetch metadata from ArXiv API\n   */\n  private async fetchFromApi(arxivId: string): Promise<PaperMetadata | null> {\n    try {\n      const apiUrl = `https://export.arxiv.org/api/query?id_list=${arxivId}`;\n      logger.debug(`API URL: ${apiUrl}`);\n      \n      const response = await fetch(apiUrl);\n      \n      if (!response.ok) {\n        throw new Error(`ArXiv API error: ${response.status}`);\n      }\n      \n      const text = await response.text();\n      const parsedXml = await parseXMLText(text);\n      \n      if (!parsedXml) {\n        logger.error('Failed to parse API response');\n        return null;\n      }\n      \n      // Use the metadata transformer to convert the parsed XML to standard format\n      const paperData = transformMetadata(\n        this.id,\n        arxivId,\n        parsedXml,\n        this.METADATA_MAPPING,\n        `https://arxiv.org/abs/${arxivId}`\n      );\n      \n      logger.debug('Paper metadata processed', paperData);\n      return paperData;\n    } catch (error) {\n      logger.error('Error processing arXiv metadata', error);\n      return null;\n    }\n  }\n}\n\n// Export a singleton instance that can be used by both background and content scripts\nexport const arxivIntegration = new ArXivIntegration();\n","// extension/background.ts\n// Background script with direct source imports\n\nimport { GitHubStoreClient } from 'gh-store-client';\nimport { PaperManager } from './papers/manager';\nimport { loadSessionConfig, getConfigurationInMs } from './config/session';\nimport { SessionTracker } from './utils/session-tracker';\nimport { PopupManager } from './utils/popup-manager';\nimport { SourceIntegrationManager } from './source-integration/source-manager';\nimport { loguru } from './utils/logger';\n\n// Import source plugins directly\nimport { arxivIntegration } from './source-integration/arxiv';\nimport { Message } from './source-integration/types';\n\nconst logger = loguru.getLogger('background');\n\n// Global state\nlet githubToken = '';\nlet githubRepo = '';\nlet currentPaperData: any = null;\nlet sessionConfig: any = null;\nlet paperManager: PaperManager | null = null;\nlet sessionTracker: SessionTracker | null = null;\nlet popupManager: PopupManager | null = null;\nlet sourceManager: SourceIntegrationManager | null = null;\n\n// Initialize sources\nfunction initializeSources() {\n  sourceManager = new SourceIntegrationManager();\n  \n  // Register built-in sources directly\n  sourceManager.registerSource(arxivIntegration);\n  \n  logger.info('Source manager initialized');\n  return sourceManager;\n}\n\n// Initialize everything\nasync function initialize() {\n  try {\n    // Initialize sources first\n    initializeSources();\n    \n    // Load GitHub credentials\n    const items = await chrome.storage.sync.get(['githubToken', 'githubRepo']);\n    githubToken = items.githubToken || '';\n    githubRepo = items.githubRepo || '';\n    logger.info('Credentials loaded', { hasToken: !!githubToken, hasRepo: !!githubRepo });\n    \n    // Initialize paper manager if we have credentials\n    if (githubToken && githubRepo) {\n      const githubClient = new GitHubStoreClient(githubToken, githubRepo);\n      paperManager = new PaperManager(githubClient);\n      logger.info('Paper manager initialized');\n    }\n    \n    // Load session configuration\n    const rawConfig = await loadSessionConfig();\n    sessionConfig = getConfigurationInMs(rawConfig);\n    logger.info('Session configuration loaded', sessionConfig);\n    \n    // Initialize session tracker\n    sessionTracker = new SessionTracker(sessionConfig);\n    logger.info('Session tracker initialized');\n    \n    // Initialize popup manager\n    popupManager = new PopupManager(\n      () => sourceManager,\n      () => paperManager\n    );\n    logger.info('Popup manager initialized');\n    \n    // Set up message listeners\n    setupMessageListeners();\n    \n    // Initialize debug objects\n    initializeDebugObjects();\n  } catch (error) {\n    logger.error('Initialization error', error);\n  }\n}\n\n// Set up message listeners\n// Set up message listeners\nfunction setupMessageListeners() {\n  chrome.runtime.onMessage.addListener((message: any, sender, sendResponse) => {\n    if (message.type === 'contentScriptReady' && sender.tab?.id) {\n      logger.debug('Content script ready:', sender.tab.url);\n      sendResponse({ success: true });\n      return true;\n    }\n    \n    if (message.type === 'paperMetadata' && message.metadata) {\n      // Store metadata received from content script\n      handlePaperMetadata(message.metadata, sender.tab?.id);\n      sendResponse({ success: true });\n      return true;\n    }\n    \n    if (message.type === 'getCurrentPaper') {\n      logger.debug('Popup requested current paper', currentPaperData);\n      sendResponse(currentPaperData);\n      return true;\n    }\n    \n    if (message.type === 'updateRating') {\n      logger.debug('Rating update requested:', message.rating);\n      handleUpdateRating(message.rating, sendResponse);\n      return true; // Will respond asynchronously\n    }\n    \n    if (message.type === 'showAnnotationPopup') {\n      // This is now handled directly by the PopupManager\n      return false;\n    }\n    \n    if (message.type === 'popupAction') {\n      // This is now handled directly by the PopupManager\n      return false;\n    }\n    \n    return false;\n  });\n}\n\n// Handle paper metadata from content script\nasync function handlePaperMetadata(metadata: any, tabId?: number) {\n  logger.info(`Received metadata for ${metadata.sourceId}:${metadata.paperId}`);\n  \n  try {\n    // Store current paper data\n    currentPaperData = metadata;\n    \n    // Store in GitHub if we have a paper manager\n    if (paperManager) {\n      await paperManager.getOrCreatePaper(metadata);\n      logger.debug('Paper metadata stored in GitHub');\n    }\n    \n    // Start tracking session\n    if (sessionTracker) {\n      sessionTracker.startSession(metadata.sourceId, metadata.paperId);\n      logger.debug('Started tracking session');\n    }\n  } catch (error) {\n    logger.error('Error handling paper metadata', error);\n  }\n}\n\n// Handle rating update\nasync function handleUpdateRating(rating: string, sendResponse: (response: any) => void) {\n  if (!paperManager) {\n    sendResponse({ success: false, error: 'Paper manager not initialized' });\n    return;\n  }\n\n  if (!currentPaperData) {\n    sendResponse({ success: false, error: 'No current paper' });\n    return;\n  }\n\n  try {\n    await paperManager.updateRating(\n      currentPaperData.sourceId,\n      currentPaperData.paperId, \n      rating\n    );\n    currentPaperData.rating = rating;\n    sendResponse({ success: true });\n  } catch (error) {\n    logger.error('Error updating rating:', error);\n    sendResponse({ success: false, error: error instanceof Error ? error.message : 'Unknown error' });\n  }\n}\n\n// Listen for credential changes\nchrome.storage.onChanged.addListener(async (changes) => {\n  logger.debug('Storage changes detected', Object.keys(changes));\n  \n  if (changes.githubToken) {\n    githubToken = changes.githubToken.newValue;\n  }\n  if (changes.githubRepo) {\n    githubRepo = changes.githubRepo.newValue;\n  }\n  if (changes.sessionConfig) {\n    sessionConfig = getConfigurationInMs(changes.sessionConfig.newValue);\n    logger.info('Session configuration updated', sessionConfig);\n    \n    // Update session tracker with new config\n    if (sessionTracker && sessionConfig) {\n      sessionTracker = new SessionTracker(sessionConfig);\n    }\n  }\n  \n  // Reinitialize paper manager if credentials changed\n  if (changes.githubToken || changes.githubRepo) {\n    if (githubToken && githubRepo) {\n      const githubClient = new GitHubStoreClient(githubToken, githubRepo);\n      paperManager = new PaperManager(githubClient);\n      logger.info('Paper manager reinitialized');\n    }\n  }\n});\n\n// Tab and window management\nchrome.tabs.onActivated.addListener(async (activeInfo) => {\n  const tab = await chrome.tabs.get(activeInfo.tabId);\n  handleTabChange(tab);\n});\n\nchrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {\n  if (changeInfo.status === 'complete') {\n    handleTabChange(tab);\n  }\n});\n\nchrome.windows.onFocusChanged.addListener((windowId) => {\n  if (windowId === chrome.windows.WINDOW_ID_NONE) {\n    // Window lost focus, end current session\n    endCurrentSession();\n  }\n});\n\nasync function handleTabChange(tab: chrome.tabs.Tab) {\n  if (!tab.url || !sessionTracker || !sourceManager) {\n    return;\n  }\n  \n  // Check if URL matches any registered source\n  const source = sourceManager.getSourceForUrl(tab.url);\n  \n  if (!source) {\n    logger.debug('No supported paper source detected, ending session');\n    await endCurrentSession();\n    return;\n  }\n  \n  // Extract paper ID\n  const extractedInfo = sourceManager.extractPaperId(tab.url);\n  \n  if (!extractedInfo) {\n    logger.debug('No paper ID found in URL, ending session');\n    await endCurrentSession();\n    return;\n  }\n  \n  // Get current session info\n  const currentPaper = sessionTracker.getCurrentPaper();\n  \n  // End session if different paper\n  if (currentPaper.sourceId && currentPaper.paperId && \n      (currentPaper.sourceId !== extractedInfo.sourceId || \n       currentPaper.paperId !== extractedInfo.paperId)) {\n    logger.debug('Different paper detected, ending existing session');\n    await endCurrentSession();\n  }\n  \n  // Note: We don't start a new session here as we'll wait for the content script\n  // to send us the metadata first\n}\n\nasync function endCurrentSession() {\n  if (!sessionTracker) {\n    return;\n  }\n  \n  // Get current paper info\n  const currentPaper = sessionTracker.getCurrentPaper();\n  \n  if (currentPaper.sourceId && currentPaper.paperId && paperManager) {\n    logger.info('Ending session for paper', { \n      source: currentPaper.sourceId,\n      paperId: currentPaper.paperId\n    });\n    \n    // End session and get data\n    const sessionData = sessionTracker.endSession();\n    \n    if (sessionData && currentPaperData) {\n      logger.debug('Creating reading event', sessionData);\n      \n      // Store reading session\n      await paperManager.logReadingSession(\n        currentPaper.sourceId,\n        currentPaper.paperId,\n        sessionData,\n        currentPaperData\n      );\n    }\n    \n    // Clear current paper data\n    currentPaperData = null;\n  }\n}\n\n// Initialize debug objects in service worker scope\nfunction initializeDebugObjects() {\n  // @ts-ignore\n  globalThis.__DEBUG__ = {\n    get paperManager() { return paperManager; },\n    get sessionTracker() { return sessionTracker; },\n    get popupManager() { return popupManager; },\n    get sourceManager() { return sourceManager; },\n    getGithubClient: () => paperManager ? paperManager.getClient() : null,\n    getCurrentPaper: () => currentPaperData,\n    getSessionConfig: () => sessionConfig,\n    getSessionMetadata: () => sessionTracker?.getCurrentSessionMetadata(),\n    getSources: () => sourceManager?.getAllSources()\n  };\n\n  logger.info('Debug objects registered');\n}\n\n// Initialize extension\ninitialize();\n"],"names":["logger","GitHubStoreClient"],"mappings":"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"}