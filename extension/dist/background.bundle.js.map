{"version":3,"file":"background.bundle.js","sources":["../node_modules/gh-store-client/dist/index.mjs","../papers/types.ts","../papers/source_utils.ts","../papers/manager.ts","../config/session.js","../background.js"],"sourcesContent":["var d=class{constructor(e={}){this.cache=new Map,this.maxSize=e.maxSize??1e3,this.ttl=e.ttl??1e3*60*60,this.accessOrder=[]}get(e){let s=this.cache.get(e);if(s){if(Date.now()-s.lastAccessed>this.ttl){this.cache.delete(e),this.removeFromAccessOrder(e);return}return s.lastAccessed=Date.now(),this.updateAccessOrder(e),s.issueNumber}}set(e,s,t){if(this.cache.size>=this.maxSize&&!this.cache.has(e)){let r=this.accessOrder[this.accessOrder.length-1];r&&(this.cache.delete(r),this.removeFromAccessOrder(r))}this.cache.set(e,{issueNumber:s,lastAccessed:Date.now(),createdAt:t.createdAt,updatedAt:t.updatedAt}),this.updateAccessOrder(e)}remove(e){this.cache.delete(e),this.removeFromAccessOrder(e)}clear(){this.cache.clear(),this.accessOrder=[]}getStats(){return{size:this.cache.size,maxSize:this.maxSize,ttl:this.ttl}}shouldRefresh(e,s){let t=this.cache.get(e);return t?s>t.updatedAt:!0}updateAccessOrder(e){this.removeFromAccessOrder(e),this.accessOrder.unshift(e)}removeFromAccessOrder(e){let s=this.accessOrder.indexOf(e);s>-1&&this.accessOrder.splice(s,1)}};var l=\"0.3.2\";var f=class{constructor(e,s,t={}){this.token=e,this.repo=s,this.config={baseLabel:t.baseLabel??\"stored-object\",uidPrefix:t.uidPrefix??\"UID:\",reactions:{processed:t.reactions?.processed??\"+1\",initialState:t.reactions?.initialState??\"rocket\"}},this.cache=new d(t.cache)}async fetchFromGitHub(e,s={}){let t=new URL(`https://api.github.com/repos/${this.repo}${e}`);s.params&&(Object.entries(s.params).forEach(([i,a])=>{t.searchParams.append(i,a)}),delete s.params);let r=await fetch(t.toString(),{...s,headers:{Authorization:`token ${this.token}`,Accept:\"application/vnd.github.v3+json\",...s.headers}});if(!r.ok)throw new Error(`GitHub API error: ${r.status}`);return r.json()}createCommentPayload(e,s){let t={_data:e,_meta:{client_version:l,timestamp:new Date().toISOString(),update_mode:\"append\"}};return s&&(t.type=s),t}async getObject(e){let s=this.cache.get(e),t;if(s)try{t=await this.fetchFromGitHub(`/issues/${s}`),this._verifyIssueLabels(t,e)||(this.cache.remove(e),t=void 0)}catch{this.cache.remove(e)}if(!t){let c=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:[this.config.baseLabel,`${this.config.uidPrefix}${e}`].join(\",\"),state:\"closed\"}});if(!c||c.length===0)throw new Error(`No object found with ID: ${e}`);t=c[0]}if(!t?.body)throw new Error(`Invalid issue data received for ID: ${e}`);let r=JSON.parse(t.body),i=new Date(t.created_at),a=new Date(t.updated_at);return this.cache.set(e,t.number,{createdAt:i,updatedAt:a}),{meta:{objectId:e,label:`${this.config.uidPrefix}${e}`,createdAt:i,updatedAt:a,version:await this._getVersion(t.number)},data:r}}async createObject(e,s){let t=`${this.config.uidPrefix}${e}`,r=await this.fetchFromGitHub(\"/issues\",{method:\"POST\",body:JSON.stringify({title:`Stored Object: ${e}`,body:JSON.stringify(s,null,2),labels:[this.config.baseLabel,t]})});this.cache.set(e,r.number,{createdAt:new Date(r.created_at),updatedAt:new Date(r.updated_at)});let i=this.createCommentPayload(s,\"initial_state\"),a=await this.fetchFromGitHub(`/issues/${r.number}/comments`,{method:\"POST\",body:JSON.stringify({body:JSON.stringify(i,null,2)})});return await this.fetchFromGitHub(`/issues/comments/${a.id}/reactions`,{method:\"POST\",body:JSON.stringify({content:this.config.reactions.processed})}),await this.fetchFromGitHub(`/issues/comments/${a.id}/reactions`,{method:\"POST\",body:JSON.stringify({content:this.config.reactions.initialState})}),await this.fetchFromGitHub(`/issues/${r.number}`,{method:\"PATCH\",body:JSON.stringify({state:\"closed\"})}),{meta:{objectId:e,label:t,createdAt:new Date(r.created_at),updatedAt:new Date(r.updated_at),version:1},data:s}}_verifyIssueLabels(e,s){let t=new Set([this.config.baseLabel,`${this.config.uidPrefix}${s}`]);return e.labels.some(r=>t.has(r.name))}async updateObject(e,s){let t=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:[this.config.baseLabel,`${this.config.uidPrefix}${e}`].join(\",\"),state:\"all\"}});if(!t||t.length===0)throw new Error(`No object found with ID: ${e}`);let r=t[0],i=this.createCommentPayload(s);return await this.fetchFromGitHub(`/issues/${r.number}/comments`,{method:\"POST\",body:JSON.stringify({body:JSON.stringify(i,null,2)})}),await this.fetchFromGitHub(`/issues/${r.number}`,{method:\"PATCH\",body:JSON.stringify({state:\"open\"})}),this.getObject(e)}async listAll(){let e=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:this.config.baseLabel,state:\"closed\"}}),s={};for(let t of e)if(!t.labels.some(r=>r.name===\"archived\"))try{let r=this._getObjectIdFromLabels(t),i=JSON.parse(t.body),a={objectId:r,label:r,createdAt:new Date(t.created_at),updatedAt:new Date(t.updated_at),version:await this._getVersion(t.number)};s[r]={meta:a,data:i}}catch{continue}return s}async listUpdatedSince(e){let s=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:this.config.baseLabel,state:\"closed\",since:e.toISOString()}}),t={};for(let r of s)if(!r.labels.some(i=>i.name===\"archived\"))try{let i=this._getObjectIdFromLabels(r),a=JSON.parse(r.body),n=new Date(r.updated_at);if(n>e){let c={objectId:i,label:i,createdAt:new Date(r.created_at),updatedAt:n,version:await this._getVersion(r.number)};t[i]={meta:c,data:a}}}catch{continue}return t}async getObjectHistory(e){let s=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:[this.config.baseLabel,`${this.config.uidPrefix}${e}`].join(\",\"),state:\"all\"}});if(!s||s.length===0)throw new Error(`No object found with ID: ${e}`);let t=s[0],r=await this.fetchFromGitHub(`/issues/${t.number}/comments`),i=[];for(let a of r)try{let n=JSON.parse(a.body),c=\"update\",m,b={client_version:\"legacy\",timestamp:a.created_at,update_mode:\"append\"};typeof n==\"object\"?\"_data\"in n?(c=n.type||\"update\",m=n._data,b=n._meta||b):\"type\"in n&&n.type===\"initial_state\"?(c=\"initial_state\",m=n.data):m=n:m=n,i.push({timestamp:a.created_at,type:c,data:m,commentId:a.id})}catch{continue}return i}async _getVersion(e){return(await this.fetchFromGitHub(`/issues/${e}/comments`)).length+1}_getObjectIdFromLabels(e){for(let s of e.labels)if(s.name!==this.config.baseLabel&&s.name.startsWith(this.config.uidPrefix))return s.name.slice(this.config.uidPrefix.length);throw new Error(`No UID label found with prefix ${this.config.uidPrefix}`)}};var u={baseLabel:\"stored-object\",uidPrefix:\"UID:\",reactions:{processed:\"+1\",initialState:\"rocket\"},retries:{maxAttempts:3,backoffFactor:2},rateLimit:{maxRequestsPerHour:1e3}};function _(o){return{...u,...o,reactions:{...u.reactions,...o.reactions},retries:{...u.retries,...o.retries},rateLimit:{...u.rateLimit,...o.rateLimit}}}function v(o){return/^gh[ps]_[a-zA-Z0-9]{36}$/.test(o)}function P(o){return/^[\\w-]+\\/[\\w-]+$/.test(o)}var h=class extends Error{constructor(e){super(e),this.name=\"ConfigError\"}},g=class extends h{constructor(e=\"Invalid GitHub token format\"){super(e),this.name=\"TokenError\"}},p=class extends h{constructor(e=\"Invalid repository format. Use owner/repo\"){super(e),this.name=\"RepoError\"}};export{h as ConfigError,u as DEFAULT_CONFIG,f as GitHubStoreClient,p as RepoError,g as TokenError,_ as mergeConfig,P as validateRepo,v as validateToken};\n//# sourceMappingURL=index.mjs.map","// extension/papers/types.ts\nimport type { Json } from 'gh-store-client';\n\n/**\n * Paper metadata with multi-source support\n */\nexport type PaperMetadata = {\n  // Legacy fields (for backward compatibility)\n  arxivId?: string;\n  arxiv_tags?: string[];\n  \n  // Multi-source fields\n  primary_id?: string;  // {source}:{id} format\n  source?: string;      // Source type (arxiv, doi, semanticscholar, etc.)\n  sourceId?: string;    // Original ID from the source\n  \n  // Common fields\n  url: string;\n  title: string;\n  authors: string;\n  abstract: string;\n  timestamp: string;\n  published_date: string;\n  rating: string;\n  \n  // Source-specific identifiers\n  identifiers?: {\n    original: string;\n    url: string;\n    // Fix for TS2411: Using string index signature\n    [key: string]: string;\n  };\n}\n\n/**\n * Reading session data\n */\nexport type ReadingSessionData = {\n  session_id: string;\n  duration_seconds: number;\n  idle_seconds: number;\n  start_time: string;\n  end_time: string;\n  total_elapsed_seconds: number;\n}\n\n/**\n * Interaction record\n */\nexport type Interaction = {\n  type: string;\n  timestamp: string;\n  data: Json;\n}\n\n/**\n * Interaction log\n */\nexport type InteractionLog = {\n  paper_id: string;\n  legacy_id?: string; // For backward compatibility\n  interactions: Interaction[];\n}\n\n/**\n * Type guard for reading session data\n */\nexport const isReadingSession = (data: unknown): data is ReadingSessionData => {\n  const session = data as ReadingSessionData;\n  return (\n    typeof session === 'object' &&\n    session !== null &&\n    typeof session.session_id === 'string' &&\n    typeof session.duration_seconds === 'number' &&\n    typeof session.idle_seconds === 'number' &&\n    typeof session.start_time === 'string' &&\n    typeof session.end_time === 'string' &&\n    typeof session.total_elapsed_seconds === 'number'\n  );\n};\n\n/**\n * Type guard for interaction log\n */\nexport const isInteractionLog = (data: unknown): data is InteractionLog => {\n  const log = data as InteractionLog;\n  return (\n    typeof log === 'object' &&\n    log !== null &&\n    typeof log.paper_id === 'string' &&\n    Array.isArray(log.interactions)\n  );\n};\n\n/**\n * Paper source information\n */\nexport type SourceInfo = {\n  type: string;\n  id: string;\n  primary_id: string;\n  url: string;\n}\n\n/**\n * Extended reading session with multi-source support\n */\nexport class MultiSourceReadingSession {\n  // In legacy version, this was arxivId\n  paperId: string;\n  sessionId: string;\n  startTime: Date;\n  activeTime: number;\n  idleTime: number;\n  lastActiveTime: Date;\n  isTracking: boolean;\n  config: any;\n  endTime: Date | null;\n  finalizedData: ReadingSessionData | null;\n  \n  constructor(paperId: string, config: any) {\n    this.paperId = paperId;\n    this.sessionId = `session_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n    this.startTime = new Date();\n    this.activeTime = 0;\n    this.idleTime = 0;\n    this.lastActiveTime = new Date();\n    this.isTracking = true;\n    this.config = config;\n    this.endTime = null;\n    this.finalizedData = null;\n  }\n  \n  // Rest of the methods remain the same as ReadingSession\n  update() {\n    if (this.isTracking && !this.finalizedData) {\n      const now = new Date();\n      const timeSinceLastActive = now.getTime() - this.lastActiveTime.getTime();\n      \n      if (timeSinceLastActive < this.config.idleThreshold) {\n        this.activeTime += timeSinceLastActive;\n      } else {\n        this.idleTime += timeSinceLastActive;\n      }\n      \n      this.lastActiveTime = now;\n    }\n  }\n  \n  finalize() {\n    if (this.finalizedData) {\n      return this.finalizedData;\n    }\n \n    this.update();\n    this.isTracking = false;\n    this.endTime = new Date();\n    const totalElapsed = this.endTime.getTime() - this.startTime.getTime();\n \n    if (this.activeTime >= this.config.minSessionDuration) {\n      this.finalizedData = {\n        session_id: this.sessionId,\n        duration_seconds: Math.round(this.activeTime / 1000),\n        idle_seconds: Math.round(this.idleTime / 1000),\n        start_time: this.startTime.toISOString(),\n        end_time: this.endTime.toISOString(),\n        total_elapsed_seconds: Math.round(totalElapsed / 1000)\n      };\n      return this.finalizedData;\n    }\n    return null;\n  }\n  \n  end() {\n    return this.finalize();\n  }\n  \n  getMetadata() {\n    return {\n      sessionId: this.sessionId,\n      startTime: this.startTime.toISOString(),\n      activeSeconds: Math.round(this.activeTime / 1000),\n      idleSeconds: Math.round(this.idleTime / 1000)\n    };\n  }\n}\n","// extension/papers/source_utils.ts\n// Utilities for supporting multiple paper sources while maintaining compatibility\n\n/**\n * Source type definitions and patterns\n */\ninterface SourceTypeInfo {\n  prefix: string;\n  urlPatterns: RegExp[];\n  idFormat?: RegExp;\n}\n\n/**\n * Result of source detection from URL\n */\nexport interface SourceInfo {\n  type: string;\n  id: string;\n  primary_id: string;\n  url: string;\n}\n\n/**\n * Source type definitions\n */\nconst SOURCE_TYPES: Record<string, SourceTypeInfo> = {\n  'arxiv': {\n    prefix: 'arxiv',\n    urlPatterns: [\n      /arxiv\\.org\\/(abs|pdf|html)\\/([0-9.]+)/,\n      /arxiv\\.org\\/abs\\/([0-9.]+)(v[0-9]+)?/\n    ],\n    idFormat: /[0-9]{4}\\.[0-9]{4,5}(v[0-9]+)?/\n  },\n  'semanticscholar': {\n    prefix: 's2',\n    urlPatterns: [\n      /semanticscholar\\.org\\/paper\\/([a-f0-9]+)/,\n      /s2-research\\.org\\/papers\\/([a-f0-9]+)/\n    ],\n    idFormat: /[a-f0-9]{40}/\n  },\n  'doi': {\n    prefix: 'doi',\n    urlPatterns: [\n      /doi\\.org\\/(10\\.[0-9.]+\\/[a-zA-Z0-9._\\-/:()\\[\\]]+)/\n    ],\n    idFormat: /10\\.[0-9.]+\\/[a-zA-Z0-9._\\-\\/:()\\[\\]]+/\n  },\n  'acm': {\n    prefix: 'doi',  // ACM uses DOIs\n    urlPatterns: [\n      /dl\\.acm\\.org\\/doi\\/(10\\.[0-9.]+\\/[a-zA-Z0-9._\\-/:()\\[\\]]+)/\n    ],\n    idFormat: /10\\.[0-9.]+\\/[a-zA-Z0-9._\\-\\/:()\\[\\]]+/\n  },\n  'openreview': {\n    prefix: 'openreview',\n    urlPatterns: [\n      /openreview\\.net\\/forum\\?id=([a-zA-Z0-9_\\-]+)/\n    ],\n    idFormat: /[a-zA-Z0-9_\\-]+/\n  }\n};\n\n/**\n * Format a source-specific ID into a universal primary ID format\n * \n * @param source - Source type (e.g. 'arxiv', 'doi')\n * @param id - Original source-specific identifier\n * @returns Formatted primary ID\n */\nexport function formatPrimaryId(source: string, id: string): string {\n  // Use source-specific prefixes\n  const sourcePrefix = SOURCE_TYPES[source]?.prefix || 'generic';\n  \n  // Sanitize the ID by replacing problematic characters\n  const safeId = id\n    .replace(/\\//g, '_')\n    .replace(/:/g, '.')\n    .replace(/\\s/g, '_')\n    .replace(/\\\\/g, '_');\n  \n  return `${sourcePrefix}.${safeId}`;\n}\n\n/**\n * Parse a primary ID into its source type and original source ID\n * \n * @param prefixedId - The primary ID in the format \"{source_prefix}.{id}\"\n * @returns Object with source type and source ID\n */\nexport function parseId(prefixedId: string): { type: string; id: string } {\n  // Split at the first dot\n  const [prefix, ...idParts] = prefixedId.split('.');\n  const id = idParts.join('.'); // Rejoin in case ID contains periods\n  \n  // Map prefix to source type\n  const sourceType = Object.entries(SOURCE_TYPES).find(\n    ([_, info]) => info.prefix === prefix\n  )?.[0] || 'generic';\n  \n  // For DOIs, restore slashes\n  const originalId = sourceType === 'doi' ? id.replace(/_/g, '/') : id;\n  \n  return { type: sourceType, id: originalId };\n}\n\n/**\n * Get a legacy-compatible ID (for backward compatibility)\n * \n * @param primaryId - The primary ID (can be prefixed or legacy)\n * @returns Legacy-compatible ID\n */\nexport function getLegacyId(primaryId: string): string {\n  // If there's no prefix, assume it's already a legacy ID\n  if (!primaryId.includes('.')) {\n    return primaryId;\n  }\n  \n  const { type, id } = parseId(primaryId);\n  \n  // For arXiv, return just the ID (backward compatible)\n  if (type === 'arxiv') {\n    return id;\n  }\n  \n  // For other sources, use the full prefixed ID to avoid collisions with arXiv IDs\n  return primaryId;\n}\n\n/**\n * Detect paper source and ID from URL\n * \n * @param url - URL to detect source from\n * @returns Source information or null if not detected\n */\nexport function detectSourceFromUrl(url: string): SourceInfo | null {\n  for (const [sourceType, sourceInfo] of Object.entries(SOURCE_TYPES)) {\n    for (const pattern of sourceInfo.urlPatterns) {\n      const match = url.match(pattern);\n      if (match) {\n        // The last capturing group should be the ID\n        // Fix the error by correctly accessing the last match group\n        const id = match[match.length - 1];\n        return {\n          type: sourceType,\n          id: id,\n          primary_id: formatPrimaryId(sourceType, id),\n          url: url\n        };\n      }\n    }\n  }\n  \n  return null;\n}\n\n/**\n * Checks if a string is in the new prefixed format\n * \n * @param id - ID to check\n * @returns True if the ID is in the new format\n */\nexport function isNewFormat(id: string): boolean {\n  // Get all valid prefixes\n  const validPrefixes = Object.values(SOURCE_TYPES).map(\n    info => `${info.prefix}.`\n  );\n  validPrefixes.push('generic.'); // Also add generic prefix\n  \n  // Check if it has any valid prefix\n  return validPrefixes.some(prefix => id.startsWith(prefix));\n}\n\n/**\n * Gets a display label for a source type\n * \n * @param sourceType - Source type\n * @returns Human-readable label\n */\nexport function getSourceLabel(sourceType: string): string {\n  const labels: Record<string, string> = {\n    'arxiv': 'arXiv',\n    'semanticscholar': 'Semantic Scholar',\n    'doi': 'DOI',\n    'acm': 'ACM Digital Library',\n    'openreview': 'OpenReview'\n  };\n  \n  return labels[sourceType] || sourceType.charAt(0).toUpperCase() + sourceType.slice(1);\n}\n","// extension/papers/manager.ts\nimport { GitHubStoreClient } from 'gh-store-client';\nimport type { Json } from 'gh-store-client';\nimport { \n  type PaperMetadata, \n  type InteractionLog, \n  type Interaction,\n  type ReadingSessionData,\n  isInteractionLog\n} from './types';\nimport { formatPrimaryId, getLegacyId, isNewFormat } from './source_utils';\n\n/**\n * Checks if data is an interaction log\n * @param data - Data to check\n * @returns Whether data is an interaction log\n */\nconst isInteractionLogJs = (data: any): boolean => {\n  return typeof data === \"object\" && \n         data !== null && \n         typeof data.paper_id === \"string\" && \n         Array.isArray(data.interactions);\n};\n\nexport class PaperManager {\n  constructor(private client: GitHubStoreClient) {}\n\n  /**\n   * Get or create a paper record\n   * Enhanced to support multiple sources with backward compatibility\n   */\n  async getOrCreatePaper(paperData: any): Promise<any> {\n    // Determine the object ID to use with backward compatibility\n    let objectId: string;\n    let useNewFormat = false;\n    \n    // Enhanced to handle both legacy and new format\n    if (paperData.primary_id) {\n      // New format with source prefix\n      objectId = `paper:${paperData.primary_id}`;\n      useNewFormat = true;\n    } else if (paperData.source && paperData.sourceId) {\n      // New source fields but without primary_id\n      const primary_id = formatPrimaryId(paperData.source, paperData.sourceId);\n      paperData.primary_id = primary_id;\n      objectId = `paper:${primary_id}`;\n      useNewFormat = true;\n    } else if (paperData.arxivId) {\n      // Legacy arXiv ID format\n      objectId = `paper:${paperData.arxivId}`;\n      \n      // For legacy compatibility, don't add new fields yet\n      useNewFormat = false;\n    } else {\n      throw new Error(\"Invalid paper data: missing ID information\");\n    }\n    \n    try {\n      // Try to get the paper\n      const obj = await this.client.getObject(objectId);\n      const data = obj.data as Record<string, any>;\n      \n      // Return object, potentially enhancing it with new format fields\n      if (!useNewFormat || data.primary_id) {\n        return data;\n      }\n      \n      // Add new format fields to legacy data if needed\n      if (data.arxivId && !data.primary_id) {\n        const enhancedData = {\n          ...data,\n          source: 'arxiv',\n          sourceId: data.arxivId,\n          primary_id: formatPrimaryId('arxiv', data.arxivId)\n        };\n        \n        // Update the object with enhanced data\n        await this.client.updateObject(objectId, enhancedData);\n        return enhancedData;\n      }\n      \n      return data;\n    } catch (error) {\n      if (error instanceof Error && error.message.includes(\"No object found\")) {\n        // Create new paper with appropriate fields\n        let defaultPaperData: Record<string, any>;\n        \n        if (useNewFormat) {\n          // New multi-source format\n          defaultPaperData = {\n            primary_id: paperData.primary_id,\n            source: paperData.source,\n            sourceId: paperData.sourceId,\n            url: paperData.url || '',\n            title: paperData.title || paperData.sourceId,\n            authors: paperData.authors || '',\n            abstract: paperData.abstract || '',\n            timestamp: new Date().toISOString(),\n            rating: 'novote'\n          };\n          \n          // For arXiv, maintain backward compatibility\n          if (paperData.source === 'arxiv') {\n            defaultPaperData.arxivId = paperData.sourceId;\n            defaultPaperData.arxiv_tags = paperData.arxiv_tags || [];\n            defaultPaperData.published_date = paperData.published_date || '';\n          } else {\n            // For other sources, add source-specific identifiers\n            defaultPaperData.identifiers = {\n              original: paperData.sourceId,\n              url: paperData.url\n            };\n            \n            // Add cross-references if available\n            if (paperData.arxivId) {\n              defaultPaperData.identifiers.arxiv = paperData.arxivId;\n            }\n            if (paperData.doi) {\n              defaultPaperData.identifiers.doi = paperData.doi;\n            }\n            if (paperData.s2Id) {\n              defaultPaperData.identifiers.s2 = paperData.s2Id;\n            }\n          }\n        } else {\n          // Legacy format for backward compatibility\n          defaultPaperData = {\n            arxivId: paperData.arxivId,\n            url: paperData.url || `https://arxiv.org/abs/${paperData.arxivId}`,\n            title: paperData.title || paperData.arxivId,\n            authors: paperData.authors || '',\n            abstract: paperData.abstract || '',\n            timestamp: new Date().toISOString(),\n            rating: 'novote',\n            published_date: paperData.published_date || '',\n            arxiv_tags: paperData.arxiv_tags || []\n          };\n        }\n\n        await this.client.createObject(objectId, defaultPaperData);\n        return defaultPaperData;\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Get or create an interaction log\n   * Enhanced with backward compatibility for legacy arXiv IDs\n   */\n  private async getOrCreateInteractionLog(paperId: string): Promise<InteractionLog> {\n    // For backward compatibility, use legacy ID format for storage\n    const legacyId = getLegacyId(paperId);\n    const objectId = `interactions:${legacyId}`;\n    \n    try {\n      const obj = await this.client.getObject(objectId);\n      const data = obj.data as unknown;\n      \n      // Use TypeScript type guard if available, otherwise JS version\n      if (typeof isInteractionLog === 'function' ? \n          isInteractionLog(data) : \n          isInteractionLogJs(data)) {\n        return data as InteractionLog;\n      }\n      \n      throw new Error('Invalid interaction log format');\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('No object found')) {\n        // Create new log\n        const newLog: InteractionLog = {\n          paper_id: paperId,  // Store the full ID including prefix if present\n          interactions: []\n        };\n        \n        // For backward compatibility, also add legacy_id if different\n        if (paperId !== legacyId) {\n          (newLog as any).legacy_id = legacyId;\n        }\n        \n        await this.client.createObject(objectId, newLog);\n        return newLog;\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Log a reading session for a paper\n   * Enhanced to work with both legacy and new IDs\n   */\n  async logReadingSession(\n    paperId: string,\n    session: ReadingSessionData,\n    paperData?: any\n  ): Promise<void> {\n    // For backward compatibility\n    let primaryId = paperId;\n    let enhancedPaperData: Record<string, any> = paperData || {};\n    \n    // Handle legacy arXiv IDs\n    if (!isNewFormat(paperId) && !enhancedPaperData.primary_id) {\n      primaryId = formatPrimaryId('arxiv', paperId);\n      enhancedPaperData = {\n        ...enhancedPaperData,\n        source: 'arxiv',\n        sourceId: paperId,\n        primary_id: primaryId,\n        arxivId: paperId\n      };\n    }\n\n    // Ensure paper exists with proper data\n    if (Object.keys(enhancedPaperData).length > 0) {\n      await this.getOrCreatePaper(enhancedPaperData);\n    }\n\n    // Log the session as interaction\n    await this.addInteraction(paperId, {\n      type: \"reading_session\",\n      timestamp: new Date().toISOString(),\n      data: session\n    });\n  }\n\n  /**\n   * Log an annotation for a paper\n   * Enhanced to work with both legacy and new IDs\n   */\n  async logAnnotation(\n    paperId: string,\n    key: string,\n    value: Json,\n    paperData?: any\n  ): Promise<void> {\n    // For backward compatibility\n    let primaryId = paperId;\n    let enhancedPaperData: Record<string, any> = paperData || {};\n    \n    // Handle legacy arXiv IDs\n    if (!isNewFormat(paperId) && !enhancedPaperData.primary_id) {\n      primaryId = formatPrimaryId('arxiv', paperId);\n      enhancedPaperData = {\n        ...enhancedPaperData,\n        source: 'arxiv',\n        sourceId: paperId,\n        primary_id: primaryId,\n        arxivId: paperId\n      };\n    }\n\n    // Ensure paper exists with proper data\n    if (Object.keys(enhancedPaperData).length > 0) {\n      await this.getOrCreatePaper(enhancedPaperData);\n    }\n\n    // Log the annotation as interaction\n    await this.addInteraction(paperId, {\n      type: \"annotation\",\n      timestamp: new Date().toISOString(),\n      data: { key, value }\n    });\n  }\n\n  /**\n   * Update a paper's rating\n   * Enhanced to work with both legacy and new IDs\n   */\n  async updateRating(\n    paperId: string,\n    rating: string,\n    paperData?: any\n  ): Promise<void> {\n    // For backward compatibility\n    let primaryId = paperId;\n    let enhancedPaperData: Record<string, any> = paperData || {};\n    \n    // Handle legacy arXiv IDs\n    if (!isNewFormat(paperId) && !enhancedPaperData.primary_id) {\n      primaryId = formatPrimaryId('arxiv', paperId);\n      enhancedPaperData = {\n        ...enhancedPaperData,\n        source: 'arxiv',\n        sourceId: paperId,\n        primary_id: primaryId,\n        arxivId: paperId\n      };\n    }\n\n    // Get existing paper data\n    const paper = await this.getOrCreatePaper(enhancedPaperData);\n\n    // Update rating\n    const objectId = isNewFormat(primaryId) ? \n      `paper:${primaryId}` : \n      `paper:${paperId}`; // For backward compatibility\n      \n    await this.client.updateObject(objectId, { \n      ...paper,\n      rating \n    });\n\n    // Log rating change\n    await this.addInteraction(paperId, {\n      type: \"rating\",\n      timestamp: new Date().toISOString(),\n      data: { rating }\n    });\n  }\n\n  /**\n   * Add an interaction to a paper's log\n   * Enhanced with backward compatibility\n   */\n  private async addInteraction(paperId: string, interaction: Interaction): Promise<void> {\n    const log = await this.getOrCreateInteractionLog(paperId);\n    log.interactions.push(interaction);\n    \n    // Use legacy ID for storage key to maintain backward compatibility\n    const legacyId = getLegacyId(paperId);\n    await this.client.updateObject(`interactions:${legacyId}`, log);\n  }\n\n  // Rest of the methods (getInteractions, getPaperReadingTime, etc.) can remain unchanged\n  // as they'll work with the enhanced getOrCreateInteractionLog method\n\n  async getInteractions(\n    paperId: string,\n    options: {\n      type?: string;\n      startTime?: Date;\n      endTime?: Date;\n    } = {}\n  ): Promise<Interaction[]> {\n    try {\n      const log = await this.getOrCreateInteractionLog(paperId);\n      let interactions = log.interactions;\n\n      if (options.type) {\n        interactions = interactions.filter((i: Interaction) => i.type === options.type);\n      }\n\n      if (options.startTime || options.endTime) {\n        interactions = interactions.filter((i: Interaction) => {\n          const time = new Date(i.timestamp);\n          if (options.startTime && time < options.startTime) return false;\n          if (options.endTime && time > options.endTime) return false;\n          return true;\n        });\n      }\n\n      return interactions;\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('No object found')) {\n        return [];\n      }\n      throw error;\n    }\n  }\n    \n  async getPaperReadingTime(paperId: string): Promise<number> {\n    const interactions = await this.getInteractions(paperId, { type: 'reading_session' });\n    return interactions.reduce((total, i) => {\n      console.log('Calculating from interaction:', i);\n      \n      const data = i.data;\n      if (typeof data === 'object' && data !== null && 'duration_seconds' in data) {\n        return total + (data.duration_seconds as number);\n      }\n      return total;\n    }, 0);\n  }\n\n  async getPaperHistory(paperId: string): Promise<Json[]> {\n    // Use legacy ID for backward compatibility\n    const objectId = `paper:${getLegacyId(paperId)}`;\n    return this.client.getObjectHistory(objectId);\n  }\n}\n","// extension/config/session.js\n\n// Default configuration values\nconst DEFAULT_CONFIG = {\n    idleThresholdMinutes: 5,\n    minSessionDurationSeconds: 30,\n    // Adding more granular control\n    requireContinuousActivity: true,  // If true, resets timer on idle\n    logPartialSessions: false,        // If true, logs sessions even if under minimum duration\n    activityUpdateIntervalSeconds: 1  // How often to update active time\n};\n\n// Load session configuration from storage\nasync function loadSessionConfig() {\n    const items = await chrome.storage.sync.get('sessionConfig');\n    return { ...DEFAULT_CONFIG, ...items.sessionConfig };\n}\n\n// Save session configuration to storage\nasync function saveSessionConfig(config) {\n    await chrome.storage.sync.set({\n        sessionConfig: {\n            idleThresholdMinutes: Number(config.idleThresholdMinutes),\n            minSessionDurationSeconds: Number(config.minSessionDurationSeconds),\n            requireContinuousActivity: Boolean(config.requireContinuousActivity),\n            logPartialSessions: Boolean(config.logPartialSessions),\n            activityUpdateIntervalSeconds: Number(config.activityUpdateIntervalSeconds)\n        }\n    });\n}\n\n// Convert configuration to milliseconds for internal use\nfunction getConfigurationInMs(config) {\n    return {\n        idleThreshold: config.idleThresholdMinutes * 60 * 1000,\n        minSessionDuration: config.minSessionDurationSeconds * 1000,\n        activityUpdateInterval: config.activityUpdateIntervalSeconds * 1000,\n        requireContinuousActivity: config.requireContinuousActivity,\n        logPartialSessions: config.logPartialSessions\n    };\n}\n\nexport { loadSessionConfig, saveSessionConfig, getConfigurationInMs, DEFAULT_CONFIG };","// background.js\nimport { GitHubStoreClient } from 'gh-store-client';\nimport { PaperManager } from './papers/manager';\nimport { loadSessionConfig, getConfigurationInMs } from './config/session.js';\nimport { ReadingSessionData } from './papers/types';\n\nlet githubToken = '';\nlet githubRepo = '';\nlet currentPaperData = null;\nlet currentSession = null;\nlet activityInterval = null;\nlet sessionConfig = null;\nlet paperManager = null;\n\nclass ReadingSession {\n    constructor(arxivId, config) {\n       this.arxivId = arxivId;\n       this.sessionId = `session_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n       this.startTime = new Date();\n       this.activeTime = 0;\n       this.idleTime = 0;\n       this.lastActiveTime = new Date();\n       this.isTracking = true;\n       this.config = config;\n       this.endTime = null;\n       this.finalizedData = null;\n    }\n    \n    update() {\n       if (this.isTracking && !this.finalizedData) {\n           const now = new Date();\n           const timeSinceLastActive = now.getTime() - this.lastActiveTime.getTime();\n           \n           if (timeSinceLastActive < this.config.idleThreshold) {\n               this.activeTime += timeSinceLastActive;\n           } else {\n               this.idleTime += timeSinceLastActive;\n           }\n           \n           this.lastActiveTime = now;\n       }\n    }\n    \n    finalize() {\n       if (this.finalizedData) {\n           return this.finalizedData;\n       }\n    \n       this.update();\n       this.isTracking = false;\n       this.endTime = new Date();\n       const totalElapsed = this.endTime.getTime() - this.startTime.getTime();\n    \n       if (this.activeTime >= this.config.minSessionDuration) {\n           this.finalizedData = {\n               session_id: this.sessionId,\n               duration_seconds: Math.round(this.activeTime / 1000),\n               idle_seconds: Math.round(this.idleTime / 1000),\n               start_time: this.startTime.toISOString(),\n               end_time: this.endTime.toISOString(),\n               total_elapsed_seconds: Math.round(totalElapsed / 1000)\n           };\n           return this.finalizedData;\n       }\n       return null;\n    }\n    \n    end() {\n       return this.finalize();\n    }\n    \n    getMetadata() {\n       return {\n           sessionId: this.sessionId,\n           startTime: this.startTime.toISOString(),\n           activeSeconds: Math.round(this.activeTime / 1000),\n           idleSeconds: Math.round(this.idleTime / 1000)\n       };\n    }\n    }\n\n// Load credentials and configuration when extension starts\nasync function loadCredentials() {\n    const items = await chrome.storage.sync.get(['githubToken', 'githubRepo']);\n    githubToken = items.githubToken || '';\n    githubRepo = items.githubRepo || '';\n    console.log('Credentials loaded:', { hasToken: !!githubToken, hasRepo: !!githubRepo });\n    \n    // Initialize paper manager if we have credentials\n    if (githubToken && githubRepo) {\n        const githubClient = new GitHubStoreClient(githubToken, githubRepo);\n        paperManager = new PaperManager(githubClient);\n        console.log('Paper manager initialized');\n    }\n    \n    // Load session configuration\n    sessionConfig = getConfigurationInMs(await loadSessionConfig());\n    console.log('Session configuration loaded:', sessionConfig);\n\n    // Initialize debug objects after everything is loaded\n    initializeDebugObjects();\n}\n\n// Listen for credential changes\nchrome.storage.onChanged.addListener(async (changes) => {\n    console.log('Storage changes detected:', Object.keys(changes));\n    if (changes.githubToken) {\n        githubToken = changes.githubToken.newValue;\n    }\n    if (changes.githubRepo) {\n        githubRepo = changes.githubRepo.newValue;\n    }\n    if (changes.sessionConfig) {\n        sessionConfig = getConfigurationInMs(changes.sessionConfig.newValue);\n        console.log('Session configuration updated:', sessionConfig);\n    }\n    \n    // Reinitialize paper manager if credentials changed\n    if (changes.githubToken || changes.githubRepo) {\n        if (githubToken && githubRepo) {\n            const githubClient = new GitHubStoreClient(githubToken, githubRepo);\n            paperManager = new PaperManager(githubClient);\n            console.log('Paper manager reinitialized');\n        }\n    }\n});\n\n// Initialize credentials\nloadCredentials();\n\n// Message passing between background and popup\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    console.log('Message received:', request);\n    \n    if (request.type === 'getCurrentPaper') {\n        console.log('Popup requested current paper:', currentPaperData);\n        sendResponse(currentPaperData);\n    }\n    else if (request.type === 'updateRating') {\n        console.log('Rating update requested:', request.rating);\n        handleUpdateRating(request.rating, sendResponse);\n        return true; // Will respond asynchronously\n    }\n    else if (request.type === 'updateAnnotation') {\n        console.log('Annotation update requested:', request.annotationType, request.data);\n        handleAnnotationUpdate(request.annotationType, request.data)\n            .then(response => sendResponse(response))\n            .catch(error => sendResponse({ success: false, error: error.message }));\n        return true; // Will respond asynchronously\n    }\n    return true;\n});\n\nasync function handleUpdateRating(rating, sendResponse) {\n    if (!paperManager) {\n        sendResponse({ success: false, error: 'Paper manager not initialized' });\n        return;\n    }\n\n    if (!currentPaperData) {\n        sendResponse({ success: false, error: 'No current paper' });\n        return;\n    }\n\n    try {\n        await paperManager.updateRating(currentPaperData.arxivId, rating, currentPaperData);\n        currentPaperData.rating = rating;\n        sendResponse({ success: true });\n    } catch (error) {\n        console.error('Error updating rating:', error);\n        sendResponse({ success: false, error: error.message });\n    }\n}\n\n// Tab and window management\nchrome.tabs.onActivated.addListener(async (activeInfo) => {\n    const tab = await chrome.tabs.get(activeInfo.tabId);\n    handleTabChange(tab);\n});\n\nchrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {\n    if (changeInfo.status === 'complete') {\n        handleTabChange(tab);\n    }\n});\n\nchrome.windows.onFocusChanged.addListener((windowId) => {\n    if (windowId === chrome.windows.WINDOW_ID_NONE) {\n        endCurrentSession();\n    }\n});\n\n// Listen for URL changes\nchrome.webNavigation.onCompleted.addListener(async (details) => {\n    console.log('Navigation detected:', details.url);\n    if (details.url.includes('arxiv.org')) {\n        console.log('arXiv URL detected, processing...');\n        const paperData = await processArxivUrl(details.url);\n        if (paperData) {\n            console.log('Paper data extracted:', paperData);\n            await createGithubIssue(paperData);\n        } else {\n            console.log('Failed to extract paper data');\n        }\n    }\n}, {\n    url: [{\n        hostSuffix: 'arxiv.org'\n    }]\n});\n\nasync function handleTabChange(tab) {\n    const isArxiv = tab.url?.includes('arxiv.org/');\n    console.log('Tab change detected:', { isArxiv, url: tab.url });\n    \n    if (!isArxiv) {\n        console.log('Not an arXiv page, ending current session');\n        await endCurrentSession();\n        return;\n    }\n\n    if (currentSession) {\n        console.log('Ending existing session before starting new one');\n        await endCurrentSession();\n    }\n\n    console.log('Processing arXiv URL for new session');\n    currentPaperData = await processArxivUrl(tab.url);\n    if (currentPaperData) {\n        console.log('Starting new session for:', currentPaperData.arxivId);\n        currentSession = new ReadingSession(currentPaperData.arxivId, sessionConfig);\n        const metadata = currentSession.getMetadata();\n        console.log('New session created:', metadata);\n        startActivityTracking();\n    }\n}\n\nasync function endCurrentSession() {\n    if (currentSession && currentPaperData) {\n        console.log('Ending session for:', currentPaperData.arxivId);\n        const sessionData = currentSession.finalize();\n        if (sessionData) {\n            console.log('Creating reading event:', sessionData);\n            await createReadingEvent(currentPaperData, sessionData);\n        }\n        currentSession = null;\n        currentPaperData = null;\n        stopActivityTracking();\n    }\n}\n\nfunction startActivityTracking() {\n    if (!activityInterval) {\n        console.log('Starting activity tracking');\n        activityInterval = setInterval(() => {\n            if (currentSession) {\n                currentSession.update();\n            }\n        }, sessionConfig.activityUpdateInterval);\n    }\n}\n\nfunction stopActivityTracking() {\n    if (activityInterval) {\n        clearInterval(activityInterval);\n        activityInterval = null;\n    }\n}\n\nasync function createReadingEvent(paperData, sessionData) {\n    if (!paperManager || !paperData) {\n        console.error('Missing required data for creating reading event:', {\n            hasPaperManager: !!paperManager,\n            hasPaperData: !!paperData\n        });\n        return;\n    }\n\n    try {\n        await paperManager.logReadingSession(\n            paperData.arxivId,\n            sessionData,\n            paperData\n        );\n        console.log('Reading session logged:', {\n            arxivId: paperData.arxivId,\n            sessionId: sessionData.session_id,\n            activeTime: sessionData.duration_seconds,\n            idleTime: sessionData.idle_seconds,\n            totalTime: sessionData.total_elapsed_seconds\n        });\n        \n    } catch (error) {\n        console.error('Error logging reading session:', error);\n    }\n}\n\nasync function createGithubIssue(paperData) {\n    if (!paperManager) {\n        console.error('Paper manager not initialized');\n        return;\n    }\n\n    try {\n        const existingPaper = await paperManager.getOrCreatePaper(paperData);\n        console.log('Paper metadata stored/retrieved:', existingPaper.arxivId);\n        return existingPaper;\n    } catch (error) {\n        console.error('Error handling paper metadata:', error);\n    }\n}\n\nasync function handleAnnotationUpdate(type, data) {\n    if (!paperManager) {\n        throw new Error('Paper manager not initialized');\n    }\n\n    try {\n        const paperData = data.title ? {\n            title: data.title,\n        } : undefined;\n\n        if (type === 'vote') {\n            await paperManager.updateRating(\n                data.paperId,\n                data.vote,\n                paperData\n            );\n        } else {\n            await paperManager.logAnnotation(\n                data.paperId,\n                'notes',\n                data.notes,\n                paperData\n            );\n        }\n\n        return { success: true };\n    } catch (error) {\n        console.error('Error logging interaction:', error);\n        throw error;\n    }\n}\n\nasync function parseXMLText(xmlText) {\n    console.log('Parsing XML response...');\n    try {\n        const getTagContent = (tag, text) => {\n            const entryRegex = /<entry>([\\s\\S]*?)<\\/entry>/;\n            const entryMatch = text.match(entryRegex);\n            \n            if (entryMatch) {\n                const entryContent = entryMatch[1];\n                const regex = new RegExp(`<${tag}[^>]*>(.*?)</${tag}>`, 's');\n                const match = entryContent.match(regex);\n                return match ? match[1].trim() : '';\n            }\n            return '';\n        };\n        \n        const getAuthors = (text) => {\n            const authors = [];\n            const regex = /<author>[^]*?<name>([^]*?)<\\/name>[^]*?<\\/author>/g;\n            let match;\n            while (match = regex.exec(text)) {\n                authors.push(match[1].trim());\n            }\n            return authors;\n        };\n\n        const getCategories = (text) => {\n            const categories = new Set();\n            \n            const primaryMatch = text.match(/<arxiv:primary_category[^>]*term=\"([^\"]+)\"/);\n            if (primaryMatch) {\n                categories.add(primaryMatch[1]);\n            }\n            \n            const categoryRegex = /<category[^>]*term=\"([^\"]+)\"/g;\n            let match;\n            while (match = categoryRegex.exec(text)) {\n                categories.add(match[1]);\n            }\n            \n            return Array.from(categories);\n        };\n\n        const getPublishedDate = (text) => {\n            const match = text.match(/<published>([^<]+)<\\/published>/);\n            return match ? match[1].trim() : null;\n        };\n\n        const parsed = {\n            title: getTagContent('title', xmlText),\n            summary: getTagContent('summary', xmlText),\n            authors: getAuthors(xmlText),\n            published_date: getPublishedDate(xmlText),\n            arxiv_tags: getCategories(xmlText)\n        };\n        \n        console.log('Parsed XML:', parsed);\n        return parsed;\n    } catch (error) {\n        console.error('Error parsing XML:', error);\n        return null;\n    }\n}\n\nasync function processArxivUrl(url) {\n    console.log('Processing URL:', url);\n    \n    let arxivId = null;\n    const match = url.match(/arxiv\\.org\\/(abs|pdf|html)\\/([0-9.]+)/);\n    if (match) {\n        arxivId = match[2];\n    }\n    \n    if (!arxivId) {\n        console.log('No arXiv ID found in URL');\n        return null;\n    }\n    \n    console.log('Found arXiv ID:', arxivId);\n    \n    try {\n        const apiUrl = `https://export.arxiv.org/api/query?id_list=${arxivId}`;\n        console.log('Fetching from arXiv API:', apiUrl);\n        \n        const response = await fetch(apiUrl);\n        console.log('API response status:', response.status);\n        \n        if (!response.ok) {\n            throw new Error(`ArXiv API error: ${response.status}`);\n        }\n        \n        const text = await response.text();\n        const parsed = await parseXMLText(text);\n        \n        if (!parsed) {\n            console.log('Failed to parse API response');\n            return null;\n        }\n        \n        const paperData = {\n            arxivId,\n            url,\n            title: parsed.title,\n            authors: parsed.authors.join(\", \"),\n            abstract: parsed.summary,\n            timestamp: new Date().toISOString(),\n            rating: 'novote',\n            published_date: parsed.published_date,\n            arxiv_tags: parsed.arxiv_tags\n        };\n        \n        console.log('Paper data processed:', paperData);\n        return paperData;\n    } catch (error) {\n        console.error('Error processing arXiv URL:', error);\n        return null;\n    }\n}\n\n// Initialize debug objects in service worker scope\nfunction initializeDebugObjects() {\n    // @ts-ignore\n    globalThis.__DEBUG__ = {\n        get paperManager() { return paperManager; },\n        getGithubClient: () => paperManager?.client,\n        getCurrentPaper: () => currentPaperData,\n        getCurrentSession: () => currentSession,\n        getConfig: () => sessionConfig\n    };\n\n    console.log('Debug objects registered, access via __DEBUG__ in service worker console');\n}\n"],"names":["GitHubStoreClient"],"mappings":"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","x_google_ignoreList":[0]}