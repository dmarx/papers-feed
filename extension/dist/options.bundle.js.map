{"version":3,"file":"options.bundle.js","sources":["../options.js"],"sourcesContent":["// options.js\nimport { loadSessionConfig, DEFAULT_CONFIG, saveSessionConfig } from './config/session.ts';\n\n// Helper to set form field values\nfunction setFormValues(settings) {\n  // GitHub settings\n  if (settings.githubRepo) {\n    document.getElementById('repo').value = settings.githubRepo;\n  }\n  if (settings.githubToken) {\n    // Don't show the actual token, just indicate it's set\n    document.getElementById('token').placeholder = '••••••••••••••••••••••';\n  }\n\n  // Session settings\n  document.getElementById('idleThreshold').value = settings.sessionConfig?.idleThresholdMinutes ?? DEFAULT_CONFIG.idleThresholdMinutes;\n  document.getElementById('minDuration').value = settings.sessionConfig?.minSessionDurationSeconds ?? DEFAULT_CONFIG.minSessionDurationSeconds;\n  document.getElementById('requireContinuous').checked = settings.sessionConfig?.requireContinuousActivity ?? DEFAULT_CONFIG.requireContinuousActivity;\n  document.getElementById('logPartial').checked = settings.sessionConfig?.logPartialSessions ?? DEFAULT_CONFIG.logPartialSessions;\n}\n\n// Helper to get form values\nfunction getFormValues() {\n  return {\n    githubRepo: document.getElementById('repo').value.trim(),\n    githubToken: document.getElementById('token').value.trim(),\n    sessionConfig: {\n      idleThresholdMinutes: Number(document.getElementById('idleThreshold').value),\n      minSessionDurationSeconds: Number(document.getElementById('minDuration').value),\n      requireContinuousActivity: document.getElementById('requireContinuous').checked,\n      logPartialSessions: document.getElementById('logPartial').checked\n    }\n  };\n}\n\n// Display status message\nfunction showStatus(message, isError = false) {\n  const status = document.getElementById('status');\n  status.textContent = message;\n  status.className = `status ${isError ? 'error' : 'success'}`;\n\n  // Clear status after 3 seconds if it's a success message\n  if (!isError) {\n    setTimeout(() => {\n      status.textContent = '';\n      status.className = 'status';\n    }, 3000);\n  }\n}\n\n// Validate settings before saving\nasync function validateSettings(settings) {\n  // Validate repository format\n  if (!/^[\\w-]+\\/[\\w-]+$/.test(settings.githubRepo)) {\n    throw new Error('Invalid repository format. Use username/repository');\n  }\n\n  // Validate the token by making a test API call\n  const response = await fetch(`https://api.github.com/repos/${settings.githubRepo}`, {\n    headers: {\n      'Authorization': `token ${settings.githubToken}`,\n      'Accept': 'application/vnd.github.v3+json'\n    }\n  });\n\n  if (!response.ok) {\n    throw new Error('Invalid token or repository. Please check your credentials.');\n  }\n\n  // Validate session settings\n  const { sessionConfig } = settings;\n  if (sessionConfig.idleThresholdMinutes < 1 || sessionConfig.idleThresholdMinutes > 60) {\n    throw new Error('Idle threshold must be between 1 and 60 minutes');\n  }\n  if (sessionConfig.minSessionDurationSeconds < 1 || sessionConfig.minSessionDurationSeconds > 300) {\n    throw new Error('Minimum session duration must be between 10 and 300 seconds');\n  }\n}\n\n// Save settings\nasync function saveSettings(settings) {\n  await chrome.storage.sync.set({\n    githubRepo: settings.githubRepo,\n    githubToken: settings.githubToken\n  });\n\n  await saveSessionConfig(settings.sessionConfig);\n}\n\n// Initialize options page\ndocument.addEventListener('DOMContentLoaded', async () => {\n  try {\n    // Load current settings\n    const [storageItems, sessionConfig] = await Promise.all([\n      chrome.storage.sync.get(['githubRepo', 'githubToken']),\n      loadSessionConfig()\n    ]);\n\n    // Combine settings and display them\n    setFormValues({\n      ...storageItems,\n      sessionConfig\n    });\n\n    // Add save button handler\n    document.getElementById('save').addEventListener('click', async () => {\n      try {\n        const settings = getFormValues();\n        await validateSettings(settings);\n        await saveSettings(settings);\n        showStatus('Settings saved successfully!');\n      } catch (error) {\n        showStatus(`Error: ${error.message}`, true);\n      }\n    });\n\n  } catch (error) {\n    showStatus(`Error loading settings: ${error.message}`, true);\n  }\n});\n"],"names":[],"mappings":"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"}